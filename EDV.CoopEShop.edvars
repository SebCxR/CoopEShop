<?xml version="1.0" encoding="utf-8"?>
<EDV>
    <Version Major="1" Minor="0" Build="0" Revision="131">1.0.0.131</Version>
    <DOM ShortName="EDV">
        <!--.EDV.CoopEShop-->
        <VAR ShortName="CoopEShop" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Domain">
            <!--.EDV.CoopEShop.DB-->
            <VAR ShortName="DB" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Domain">
                <!--.EDV.CoopEShop.DB.Article2-->
                <VAR ShortName="Article2" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="MySQL" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="MySQL"><xs:complexType><xs:sequence><xs:element name="IdArticle" type="xs:int" minOccurs="0" /><xs:element name="IdFournisseur" type="xs:int" minOccurs="0" /><xs:element name="IdArticleRef" type="xs:int" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="ShortName" type="xs:string" minOccurs="0" /><xs:element name="Category" type="xs:string" minOccurs="0" /><xs:element name="IsLot" type="xs:short" minOccurs="0" /><xs:element name="Enabled" type="xs:short" minOccurs="0" /><xs:element name="CodeF" type="xs:string" minOccurs="0" /><xs:element name="Unit" type="xs:string" minOccurs="0" /><xs:element name="Stock" type="xs:decimal" minOccurs="0" /><xs:element name="StockDate" type="xs:dateTime" minOccurs="0" /><xs:element name="Image" type="xs:string" minOccurs="0" /><xs:element name="SortIndex" type="xs:int" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.Article2.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Article2.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Article2.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.Article2.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.Article2.Html.Categories-->
                        <VAR ShortName="Categories" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) throw new EDVException("aucun argument fourni");
if(!arguments.DataTable){
	if(session.User.IdFournisseur)
		arguments.IdFournisseur = session.User.IdFournisseur;
	var args = [];
	var sql = "SELECT DISTINCT IFNULL(PC.Label, A.Category) AS Label, A.Category"
			+ " FROM article A"
			+ " LEFT JOIN parameter PC"
				+ " ON PC.IdParam = A.Category"
				+ " AND PC.Domain = 'ARTCAT'"
			;
	if(arguments.IdFournisseur){
		sql += " WHERE A.IdFournisseur = ?";
		args.push(arguments.IdFournisseur);
	}
	sql += " ORDER BY PC.SortIndex, PC.Label";
	//edvInfo = sql ;
	arguments.DataTable = edv.Data(..edvAppli.DataSource).select(sql, args);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);
		
}
var id = edv.Var.Guid(edvSender);
?>
<ul id="<?=id?>" class="edvExpanderRoot categories">
<?
for(var dtRow in arguments.DataTable.Rows){
	?><li><span class="edvExpander" name="<?=dtRow["Category"] ? dtRow["Category"] : " "?>">
		<span class="category edvicon imgEDVTypeDomain"><?=dtRow["Label"] ? dtRow["Label"] : "(divers)"?></span>
	</span></li>
<?}?>
</ul>
<script>
$(document).ready(function(){
	$("#<?=id?>").edvExpander().each(function(){
			var $this = $(this);
			$this.attr("name", "edvcode=<?=edvSender.Domain?>Rows"
				+ "&edvArgs.Category=" + $this.attr("name")
				+ "&edvArgs.IdFournisseur=<?=1 ? 1 : arguments.IdFournisseur?>"
				);
	});
});
</script>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Article2.Html.Categories._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
if(arguments.Execute){
	if(arguments.Id == 0)
		throw new EDVException("Identifiant incorrecte");
	var sql = "DELETE FROM article"
			+ " WHERE IdArticle = ?";
	var result = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (typeof(result) === "string")
		throw new EDVException(result);
	echo("");
}
else {
	var sql = "SELECT 1"
			+ " FROM lgdossier"			
			+ " WHERE IdArticle = ?"
			+ " LIMIT 1";
	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count>0)
		throw new EDVException("Cet article est déjà utilisé<br/>et ne peut être supprimé.");
		
	var sql = "SELECT A.*"
			+ " FROM article A"			
			+ " WHERE A.IdArticle = ?";
	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count==0)
		throw new EDVException("Article inconnu");
	var dtRow = arguments.DataTable.Rows[0];
	?>
	<div class="MessageBox edvEditor">
		Etes vous sûr de vouloir supprimer l'article "<?=dtRow["Name"]?>" ?
		<br><a class="submit delete" href="?" onclick="return ArticleDeleteExecute(<?=arguments.Id?>)">
		Supprimer</a>
		<script>
			function ArticleDeleteExecute(id){
				var result;
				if((result = edvGetHTML("<?=:Name?>", "edvargs={Id:" + id + ", Execute:true}"))==""
				|| typeof(result) != "string")
					return true;
				alert(result);
				return false;
			}
		</script>
	</div>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Article2.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if(!arguments.DataRow && !arguments.DataTable){
	if (!arguments.Id) arguments.Id = ..Insert.LastId;
	var sql = "SELECT A.*, F.Name AS NameF"
			+ " FROM article A"
			+ " INNER JOIN fournisseur F"
				+ " ON A.IdFournisseur = F.IdFournisseur"
			+ " WHERE A.IdArticle = ?";
	//edvInfo = sql;
	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucun enregistrement.");		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
?>
<form method="post" action="?" enctype="multipart/form-data">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdFournisseur" value="<?=dtRow["IdFournisseur"]?>"/>
<input type="hidden" name="Row.IdArticle" value="<?=dtRow["IdArticle"]?>"/>
<label<?=dtRow["Enabled"] == 0 ? " class=\"dataRowNotEnabled\"" : ""?>>Article disponible
	<input id="chkUserEnabled" type="checkbox" <?=dtRow["Enabled"] ? "checked=\"checked\"" : ""?>
		onclick="document.getElementById('txtchkUserEnabled').value=this.checked; $(this.parentNode).toggleClass('dataRowNotEnabled',!this.checked);">
	    <input type="hidden" id="txtchkUserEnabled" name="Row.Enabled" value="<?=dtRow["Enabled"]?>">
</label>
<br style="clear:both"/>
<label>Nom : </label><input name="Row.Name" size="33" value="<?=dtRow["Name"]?>">
<br/>
<label>Nom court : </label><input name="Row.ShortName" size="33" maxlength="32" value="<?=dtRow["ShortName"]?>">
<br/>
<label>Categorie : </label><?=..Parameter.Html.Combo({Domain : 'ARTCAT', Id : dtRow["Category"], name : "Row.Category"})?>
<br/>
<label><?var image = dtRow.IsNull("Image") || dtRow["Image"] == "" ? "" : dtRow["Image"];
if(image) {?><img id="imgArticleImage" src="Article.Image/<?=image?>" width="32">
<a href="" onclick="$('#txtArticleImage').val('#delete=' + $('#txtArticleImage').val()); $('#imgArticleImage').remove(); $(this).replaceWith('Image :'); return false;">
	<img src="Images/Cross16.png" alt="Supprimer" width="12">suppr.</a>
<?} else echo("Image : ");?>
</label>
<input id="txtArticleImage" type="hidden" name="Row.Image" value="<?=image?>">
<input type="file" name="Row.Image.File" value="<?=image?>">
<br class="clear"/>
<label>Code F : </label><input name="Row.CodeF" size="16" maxlength="16" value="<?=dtRow["CodeF"]?>">
<br class="clear"/>
<label class="edvicon edvimgStar<?=dtRow["SortIndex"] == 0 ? "" : "Not"?> pointer"
	onclick="var wasStar = $(this).hasClass('edvimgStar');<?
	?> $(this).removeClass(wasStar ? 'edvimgStar' : 'edvimgStarNot')<?
	?> 	.addClass(!wasStar ? 'edvimgStar' : 'edvimgStarNot')<?
	?> .nextAll('input:first').val(wasStar ? 1 : 0);">
	Produit phare</label>
	<input type="hidden" name="Row.SortIndex" value="<?=dtRow["SortIndex"]?>"/>

<br/>
<?if(session.User.IdFournisseur == dtRow["IdFournisseur"]){?>
	<input type="hidden" name="Update" value="true"/>
	<a href="#<?=arguments.Id?>" class="submit save" onclick="edv.Wait.Show(); ArticleSubmitCheck(this); edvDialog(this).Close(); edv.Wait.Hide(); return false;">Enregistrer</a>
<?}?>
</fieldset>
</form>
<?=..Tarif.Html.List({IdFournisseur : dtRow["IdFournisseur"], IdArticle : dtRow["IdArticle"]})?>
<?//=..Params.Html.List({IdFournisseur : dtRow["IdFournisseur"], IdArticle : dtRow["IdArticle"]})?>
<?=:js?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Article2.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function ArticleSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	if($(form).find('input[name="Row.Name"]')[0].value == ""){
		alert("La saisie du nom est obligatoire");
		return false;
	}
	edv.Wait.Show();
	edvSubmit(form);
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Article2.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!session.User || !edv.Coopeshop || !edv.Coopeshop.Fournisseurs) edvReturn("Désolé, la session est perdue. Vous devez vous reconnecter.");
if(!arguments) arguments = {};
if(!arguments.MaxRows)
	arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;
arguments.IdFournisseur = arguments && arguments.IdFournisseur != null 
				? arguments.IdFournisseur 
				: session.User.IdFournisseur != undefined && session.User.IdFournisseur != null
					? session.User.IdFournisseur
					: edv.Coopeshop.Fournisseurs.OnlyOne;
var rowsHtml = Categories(arguments);
?>
<span class="edvDataTable">
	<span class="title">Articles</span>
	<span class="edvNavigator">
		<a href="" onclick="edvDataTable(this).Navigator.NewRow('edvargs={IdFournisseur:' + edvDataTable(this).Rows.edvArgs.IdFournisseur + '}');return false;"><img src="Images/Plus16.png" alt="Ajouter"/>&nbsp;Nouvel article</a>
	</span>

	<span class="edvRows" name="<?=:Domain?>Categories">
		<param name="Edit.Title" value="Article"/>
		<param class="edvProperty" name="edvArgs.IdFournisseur" value="<?=arguments.IdFournisseur?>"/>
		<?=rowsHtml?>
	</span>
</span>


]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Article2.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
if(arguments.Clone){
	var clone = edv.Data(..edvAppli.DataSource).select("SELECT * FROM article WHERE IdArticle = ?", [int(arguments.Clone)]);
	if(!clone.Rows.Count) edvReturn("Article à copier introuvable.");
	clone = clone.Rows[0];
}
?>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.Enabled" value="true"/>

<?if(arguments.IdFournisseur && arguments.IdFournisseur>0) {?>
	<input type="hidden" name="Row.IdFournisseur" value="<?=arguments.IdFournisseur?>"/>
<?}
else {?>
	<?=..Fournisseur.Html.Combo({Id : arguments.IdFournisseur, name: "Row.IdFournisseur"})?>
	<br/>
<?}?>
<label>Nom : </label><input name="Row.Name" size="33" value="<?=clone ? clone["Name"] : ""?>" onchange="$(this.parentNode).find('input[name=\'Row.ShortName\']')[0].value=this.value">
<br/>
<label>Nom court : </label><input name="Row.ShortName" size="33" value="<?=clone ? clone["ShortName"] : ""?>">
<br/>
<label>Categorie : </label><?=..Parameter.Html.Combo({Domain : 'ARTCAT', name : "Row.Category", Id : clone ? clone["Category"] : ""})?>
<br/>
<label>Code F : </label><input name="Row.CodeF" size="16" maxlength="16" value="<?=clone ? clone["CodeF"] : ""?>">
<br/>
<label class="edvicon edvimgStarNot pointer"
	onclick="var wasStar = $(this).hasClass('edvimgStar');<?
	?> $(this).removeClass(wasStar ? 'edvimgStar' : 'edvimgStarNot')<?
	?> 	.addClass(!wasStar ? 'edvimgStar' : 'edvimgStarNot')<?
	?> .next().val(wasStar ? 1 : 0);">Produit phare</label><input type="hidden" name="Row.SortIndex" value="999">


<br/>
<input type="hidden" name="Insert" value="true"/>
<a class="submit save" onclick="ArticleInsertSubmit(this); return false;">Enregistrer</a>
</fieldset>

</form>

<?=:js?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Article2.Html.New.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function ArticleInsertSubmit(form){
	while(form.tagName != "FORM") form = form.parentNode;
	var search;
	if(((search = $(form).find('input[name="Row.IdFournisseur"]')).length > 0
		|| (search = $(form).find('select[name="Row.IdFournisseur"]')).length > 0)
	&& search[0].value <= 0){
		alert("Le fournisseur est obligatoire");
		return false;
	}
	if($(form).find('input[name="Row.Name"]')[0].value == ""){
		alert("Le nom est obligatoire");
		return false;
	}
	edv.Wait.Show();
	var result = edvSubmit(form);
	if(result && result != ""){
		edv.Wait.Hide();
		alert(result);
		return;
	}
	$(edvDialog(form).edvGet.DOM).attr("name","<?=..Edit:Name?>");
	edvDialog(form).Refresh();
	edv.Wait.Hide();
	return true;
}


function ArticleFournisseurSelect(link){
	edvDialog.Show("<?=..Fournisseur.Html.List:Name?>", "edvArgs={SelectMode:'single'}"
			, {title:"Sélection d'un fournisseur"
			 , close : function(selectedItem){
					if(selectedItem){
						link.innerHTML = selectedItem.text;
						var form = link;
						while(form.tagName != "FORM") form = form.parentNode;
						$(form).find('input[name="Row.IdFournisseur"]')[0].value = selectedItem.id;					
					}
				}
			}
		);
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Article2.Html.New.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) throw new EDVException("aucun argument fourni");
if(!arguments.DataTable){
	//edvReturn(edvjs.json(arguments));
	if(session.User.IdFournisseur)
		arguments.IdFournisseur = session.User.IdFournisseur;
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;

	var cx = new edvData(..edvAppli.DataSource, true);
	var sqlSELECT = ""
	, sqlFROM = "";
	var nCtlog = 0;
	var ctlogs = cx.select("SELECT d.IdContact, d.IdDossier, d.Name"
		+ " FROM dossier d JOIN fournisseur f ON d.IdContact = f.IdContact"
		+ " WHERE TypeDossier = 'CTLOG'"
		+ " AND IdFournisseur = ?"
		, [arguments.IdFournisseur]);
	for(var ctlog in ctlogs.Rows){
		sqlSELECT += ", lgd" + nCtlog + ".IdDossier AS lgd" + nCtlog + "_IdDossier"
			+ ", lgd" + nCtlog + ".Line AS lgd" + nCtlog + "_Line"
			+ ", lgd" + nCtlog + ".Price AS lgd" + nCtlog + "_Price"
			+ ", lgd" + nCtlog + ".Unit AS lgd" + nCtlog + "_Unit"
		;
		sqlFROM += "\r\nLEFT JOIN lgdossier lgd" + nCtlog
			+ " ON lgd" + nCtlog + ".IdArticle = A.IdArticle"
			+ " AND lgd" + nCtlog + ".IdDossier = " + ctlog["IdDossier"]
			+ " AND lgd" + nCtlog + ".IdContact = " + ctlog["IdContact"]
			+ " AND lgd" + nCtlog + ".TypeDossier = 'CTLOG'"
		;
		nCtlog++;
	}

	var sql = "SELECT DISTINCT A.*, PC.Label AS CategoryLabel"
			+ ", T.IdFournisseur AS IdFournisseurT, T.Price AS PriceT, T.Unit AS UnitT"
			+ "\r\n" + sqlSELECT
			+ "\r\n FROM article A"
			+ " LEFT JOIN parameter PC"
				+ " ON A.Category = PC.IdParam"
				+ " AND PC.Domain = 'ARTCAT'"
			+ " LEFT JOIN tarif T"
				+ " ON T.IdFournisseur = A.IdFournisseur"
				+ " AND T.IdArticle = A.IdArticle"
				+ " AND CURDATE() BETWEEN DateFrom AND DateTo"
			+ "\r\n" + sqlFROM
			;
	var clauseWhere = "WHERE";
	if (arguments.SQLWhere && arguments.SQLWhere != ""){
		sql += " " + clauseWhere + " (" + arguments.SQLWhere + ")";
		if (clauseWhere == "WHERE") clauseWhere = "AND";
	}
	if(arguments.Category){
		sql += " " + clauseWhere + " A.Category = '" + arguments.Category + "'";
		if (clauseWhere == "WHERE") clauseWhere = "AND";
	}
	if(arguments.IdFournisseur){
		sql += " " + clauseWhere + " A.IdFournisseur = " + arguments.IdFournisseur;
		if (clauseWhere == "WHERE") clauseWhere = "AND";
	}

	if (arguments.Filter){
		if (arguments.Filter.ToUpper().StartsWith("WHERE "))
			sql += "\r\n " + clauseWhere + "(" + arguments.Filter.Substring(6) + ")";
		else if(int.TryParse(arguments.Filter))
			sql += "\r\n " + clauseWhere + " (IdArticle = " + arguments.Filter + ")";
		else
			sql += "\r\n " + clauseWhere + " (A.Name LIKE '%" + arguments.Filter + "%' OR A.CodeF LIKE '%" + arguments.Filter + "%')";
		if (clauseWhere == "WHERE") clauseWhere = "AND";
	}
	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += "\r\n ORDER BY " + arguments.OrderBy;
	else
		sql += "\r\n ORDER BY PC.SortIndex, PC.Label, A.Name";
	sql += " LIMIT " + (arguments.Limit ? arguments.Limit : "0")
		+ ", " + arguments.MaxRows;
	
	arguments.DataTable = cx.select(sql, [arguments.Id]);
	cx.close();
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}
var tableId = edv.Var.Guid(edvSender);
if(nCtlog == 0){
	?><pre class="edvError">Vous devez créer au moins un catalogue</pre><?
}?>
<span class="edvDataTable">
	<span class="edvRows" name="<?=:Domain?>Rows">
		<param name="Edit.Title" value="Article"/>
		<param class="edvProperty" name="edvArgs.IdFournisseur" value="<?=arguments.IdFournisseur?>"/>
		<param class="edvProperty" name="edvArgs.Category" value="<?=arguments.Category?>"/>

<table class="article" id="<?=tableId?>">
<thead><th colspan="5"/>
<?
	var ctlgEdit = ..Catalogue.Html.Edit:Name;
	nCtlog = 0;
	for(ctlog in ctlogs.Rows){
		?><th class="ctlog title" iddossier="<?=ctlog["IdDossier"]?>"><span><?
			?><a onclick="edvDialog(this).Show('<?=ctlgEdit?>'<?
				?>, 'edvArgs.IdContact=<?=ctlog["IdContact"]?>&edvArgs.IdDossier=<?=ctlog["IdDossier"]?>&edvArgs.TypeDossier=CTLOG'<?
				?>, {title: $(this).text()});"><?=ctlog["Name"]?><?
		?></a></span><?
		nCtlog++;
	}
?></thead><tbody><?
for(var dtRow in arguments.DataTable.Rows){
	var image = arguments.FormatEMail || dtRow.IsNull("Image") || dtRow["Image"] == "" ? "" : dtRow["Image"];
	?><tr idarticle="<?=dtRow["IdArticle"]?>" <?if(dtRow["Enabled"]==0) echo("class=\"notEnabled\"")?>><?
	if(session.User.IdFournisseur == dtRow["IdFournisseur"]){
		?><td class="actions"><?
			/*?><a class="edvicon edvimgDelete" onclick="return !edvDataTable(this).Rows.DeleteRow('edvargs={Id:<?=dtRow["IdArticle"]?>}')">&nbsp;</a><?
			?><a class="edvicon edvimgAdd" onclick="return !edvDataTable(this).Rows.Copy('edvargs={Id:<?=dtRow["IdArticle"]?>}')">&nbsp;</a><?
			?><a class="edvicon edvimgEdit" onclick="return !edvDataTable(this).Rows.Edit('edvargs={Id:<?=dtRow["IdArticle"]?>}')">&nbsp;</a><?*/
	}	
	?><td><?if(image != ""){
	?><div class="imgArticle"><img src="Article.Image/<?=image?>" width="16" class="article"></div><?
	}
	?><a class="article" href="#<?=dtRow["IdArticle"]?>"><?=dtRow["Name"]?></a><?

	?><td class="SortIndex" v="<?=dtRow["SortIndex"]?>"><?
	?><td class="Price"><?
		if(dtRow.IsNull("IdFournisseurT") && dtRow["Enabled"]==1){
			?><span class="Price edvAlert">pas de tarif</span><?
		}
		else {
			?><?=dtRow.IsNull("PriceT") ? "&nbsp;" : Double(dtRow["PriceT"]).ToString("# ##0.00").Replace(" ", "&nbsp;") + "&nbsp;€"?><?
		}

	?><td class="Unit"><?
		if(dtRow.IsNull("IdFournisseurT") && dtRow["Enabled"]==1){
		}
		else {
			?><?=dtRow.IsNull("UnitT") || dtRow["UnitT"].Trim() == "" ? ""
				: "&nbsp;/&nbsp;" + dtRow["UnitT"]?><?
		}

	nCtlog = 0;
	for(ctlog in ctlogs.Rows){
		?><td class="ctlog<?=dtRow.IsNull("lgd" + nCtlog + "_Line") ? "" : " in"?>"><?
			?><?=dtRow.IsNull("lgd" + nCtlog + "_Line") ? "&nbsp;" : Double(dtRow["lgd" + nCtlog + "_Price"]).ToString("0.00") + "&nbsp;€"?><?
		nCtlog++;
	}
	?></tr><?
}
?></tbody>
</table>
</span></span>
<script>$(document.body).ready(function(){
	$("#<?=tableId?>").CEShopAdmin("initArticlesList");
})</script>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Article2.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.Article2.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[999]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Html.Rows.Submit-->
                            <VAR ShortName="Submit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?if(!arguments || !arguments.articles) edvReturn("Arguments manquants");
var errors;
try {
	if(session.User.IdFournisseur)
		arguments.IdFournisseur = session.User.IdFournisseur;
	if(!arguments.IdFournisseur)
		edvReturn("Fournisseur inconnu");
	var idContact = arguments.IdContact;
	var cx = edv.Data(..edvAppli.DataSource);
	cx.transaction();
	for(var idArticle in arguments.articles){
		for(var field in arguments.articles[idArticle]){
			var value = arguments.articles[idArticle][field];
			if(edvTools.TryParse(value, EDVType.Double))
				value = edvTools.Parse(value, EDVType.Double);
			if(field.StartsWith("ctlog_")){
				if(!idContact)
					idContact = cx.select("SELECT IdContact FROM fournisseur WHERE IdFournisseur = ?", [int(arguments.IdFournisseur)]).Rows[0][0];
				var idDossier = int(field.Substring(6));
				if(value){
					field = "Price";
					errors = cx.execute("UPDATE lgdossier SET `" + field + "` = ? WHERE IdArticle = ? AND IdDossier = ? AND IdContact = ? AND TypeDossier = 'CTLOG'"
						, [value, int(idArticle), int(idDossier), idContact]);
					if(errors == 0){
						var maxLine = cx.select("SELECT MAX(Line) AS MaxLine FROM lgdossier WHERE IdDossier = ? AND IdContact = ? AND TypeDossier = 'CTLOG'"
							, [int(idDossier), idContact]);
						if(!(maxLine instanceof DataTable))
							throw new EDVException(maxLine);
						if(maxLine.Rows.Count && !maxLine.Rows[0].IsNull(0))
							maxLine = maxLine.Rows[0][0];
						else
							maxLine = 0;
						errors = cx.execute("INSERT INTO lgdossier (IdContact, IdDossier, TypeDossier, Line, IdArticle, Unit, Quantity, Price, Forfait)"
							+ " SELECT ?, ?, 'CTLOG', ?, IdArticle, Unit, Quantity, Price, Forfait FROM tarif WHERE IdArticle = ? AND IdFournisseur = ?"
							, [idContact, int(idDossier), maxLine + 1, int(idArticle), int(arguments.IdFournisseur)]);
						if(errors == 0)
							throw new EDVException("Validez le tarif de l'article avant le tarif catalogue.");
						if(!edvTools.TryParse(errors, EDVType.Integer))
							throw new EDVException(errors);
						errors = cx.execute("UPDATE lgdossier SET `" + field + "` = ? WHERE IdArticle = ? AND IdDossier = ? AND IdContact = ? AND TypeDossier = 'CTLOG'"
							, [value, int(idArticle), int(idDossier), idContact]);
					}
				}
				else {
					errors = cx.execute("DELETE FROM lgdossier WHERE IdArticle = ? AND IdDossier = ? AND IdContact = ? AND TypeDossier = 'CTLOG'"
						, [int(idArticle), int(idDossier), idContact]);
				}
			}
			else if(field == "Unit" || field == "Price") {
				errors = cx.execute("UPDATE tarif SET `" + field + "` = ? WHERE IdArticle = ? AND IdFournisseur = ?"
					, [value, int(idArticle), int(arguments.IdFournisseur)]);
				if(errors == 0){
					errors = cx.execute("INSERT INTO tarif (IdFournisseur, IdArticle, DateFrom, DateTo, Unit, Quantity, Price, Forfait)"
						+ " VALUES(?, ?, ?, ?, ?, ?, ?, ?)"
						, [int(arguments.IdFournisseur), int(idArticle), edv.Coopeshop.DateMini, edv.Coopeshop.DateMaxi, "", 1, 0,0]);
					if(!edvTools.TryParse(errors, EDVType.Integer))
						throw new EDVException(errors);
					errors = cx.execute("UPDATE tarif SET `" + field + "` = ? WHERE IdArticle = ? AND IdFournisseur = ?"
						, [value, int(idArticle), int(arguments.IdFournisseur)]);
				}
				if(field == "Unit")
					errors = cx.execute("UPDATE lgdossier SET `" + field + "` = ? WHERE IdArticle = ?"
						+ " AND TypeDossier = 'CTLOG'"
						+ " AND IdDossier IN "
							+ "(SELECT IdDossier FROM dossier d"
							+ "  JOIN fournisseur f ON d.IdContact = f.IdContact"
							+ " WHERE TypeDossier = 'CTLOG' AND IdFournisseur = ?)"
						, [value, int(idArticle), int(arguments.IdFournisseur)]);
				
			}
			else {
				errors = cx.execute("UPDATE article SET `" + field + "` = ? WHERE IdArticle = ?"
					, [value, int(idArticle)]);
			}
			if(!edvTools.TryParse(errors, EDVType.Integer))
				throw new EDVException(errors);
			errors = false;
		}
	}
}
catch(err){
	errors = err;
}
cx.close(errors);
edvReturn(errors ? errors : "");
?>]]></Value>
                                <!--.EDV.CoopEShop.DB.Article2.Html.Rows.Submit._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.Article2.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Article2.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.DB.Article2.Insert.LastId-->
                        <VAR ShortName="LastId" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[411]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Article2.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Article2.Params-->
                    <VAR ShortName="Params" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                        <!--.EDV.CoopEShop.DB.Article2.Params.Html-->
                        <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?=:List?>]]></Value>
                            <!--.EDV.CoopEShop.DB.Article2.Params.Html.Delete-->
                            <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
if(arguments.Execute){
	if(arguments.Id == 0)
		throw new EDVException("Identifiant incorrecte");
	var sql = "DELETE FROM article"
			+ " WHERE IdArticle = ?";
	var result = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (typeof(result) === "string")
		throw new EDVException(result);
	echo("");
}
else {
	var cx = new edvData(..edvAppli.DataSource, true);
	var sql = "SELECT 1"
			+ " FROM lgdossier"			
			+ " WHERE IdArticle = ?"
			+ " LIMIT 1";
	arguments.DataTable = cx.select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count>0)
		throw new EDVException("Cet article est déjà utilisé<br/>et ne peut être supprimé.");
		
	var sql = "SELECT A.*"
			+ " FROM article A"			
			+ " WHERE A.IdArticle = ?";
	arguments.DataTable = cx.select(sql, [arguments.Id]);
	cx.close();
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count==0)
		throw new EDVException("Article inconnu");
	var dtRow = arguments.DataTable.Rows[0];
	?>
	<div class="MessageBox edvEditor">
		Etes vous sûr de vouloir supprimer l'article "<?=dtRow["Name"]?>" ?
		<br><a class="submit delete" href="?" onclick="return ArticleDeleteExecute(<?=arguments.Id?>)">
		Supprimer</a>
		<script>
			function ArticleDeleteExecute(id){
				var result;
				if((result = edvGetHTML("<?=:Name?>", "edvargs={Id:" + id + ", Execute:true}"))==""
				|| typeof(result) != "string")
					return true;
				alert(result);
				return false;
			}
		</script>
	</div>
<?}?>]]></Value>
                                <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.Delete._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Params.Html.Edit-->
                            <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?
if(!arguments) arguments = {};
if(!arguments.DataRow && !arguments.DataTable){
	if (!arguments.Id) arguments.Id = ..Insert.LastId;
	var sql = "SELECT DISTINCT A.IdFournisseur, AP.*, PC.Label AS ParamLabel, PC.ValueType"
			+ " FROM article A"
			+ " INNER JOIN parameter PC"
				+ " ON PC.Domain = 'ARTPARAM'"
			+ " LEFT JOIN articleparam AP"
				+ " ON AP.IdArticle = ?"
				+ " AND AP.IdParam = PC.IdParam"
	//edvInfo = sql;
	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucun enregistrement.");		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
?>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdParam" value="<?=dtRow["IdParam"]?>"/>
<input type="hidden" name="Row.IdArticle" value="<?=dtRow["IdArticle"]?>"/>
<label<?=dtRow["Enabled"] == 0 ? " class=\"dataRowNotEnabled\"" : ""?>>Actif
	<input id="chkUserEnabled" type="checkbox" <?=dtRow["Enabled"] ? "checked=\"checked\"" : ""?>
		onclick="document.getElementById('txtchkUserEnabled').value=this.checked; $(this.parentNode).toggleClass('dataRowNotEnabled',!this.checked);">
	    <input type="hidden" id="txtchkUserEnabled" name="Row.Enabled" value="<?=dtRow["Enabled"]?>">
</label>
<br/>
<label><?=dtRow["ParamLabel"]?> : </label><input name="Row.Value" size="33" value="<?=dtRow["Value"]?>">
<br/>
<?if(session.User.IdFournisseur == dtRow["IdFournisseur"]){?>
	<input type="hidden" name="Update" value="true"/>
	<a href="#<?=arguments.Id?>" class="submit save" onclick="ArticleParamSubmitCheck(this); return false;">Enregistrer</a>
<?}?>
</fieldset>
</form>
<?=:js?>]]></Value>
                                <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.Edit.js-->
                                <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                    <Value><![CDATA[<script>
function ArticleParamSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	/*if($(form).find('input[name="Row.Value"]')[0].value == ""){
		alert("La saisie du nom est obligatoire");
		return false;
	}*/
	edv.Wait.Show();
	edvSubmit(form);
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                    <!--.EDV.CoopEShop.DB.Article2.Params.Html.Edit.js._Where-->
                                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                    </VAR>
                                </VAR>
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.Edit._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Params.Html.List-->
                            <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?
if(!arguments) arguments = {};
if(!arguments.MaxRows)
	arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;
arguments.IdFournisseur = arguments.IdFournisseur && arguments.IdFournisseur != null 
				? arguments.IdFournisseur 
				: session.User.IdFournisseur != undefined && session.User.IdFournisseur != null
					? session.User.IdFournisseur
					: edv.Coopeshop.Fournisseurs.OnlyOne;
if(!arguments.IdArticle) 
	arguments.IdArticle = ..Row.IdArticle;
//	throw new EDVException("L'argument d'article n'existe pas");
var rowsHtml = Rows(arguments);
?>
<span class="edvDataTable articleParams">
	<span class="title">Paramètres</span>
	
	<span class="edvRows" name="<?=:Domain?>Rows">
		<param name="Edit.Title" value="Paramètre de l'article"/>
		<param class="edvProperty" name="edvArgs.IdFournisseur" value="<?=arguments.IdFournisseur?>"/>
		<param class="edvProperty" name="edvArgs.IdArticle" value="<?=arguments.IdArticle?>"/>
		<?=rowsHtml?>
	</span>
</span>


]]></Value>
                                <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.List._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Params.Html.New-->
                            <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?if(!arguments) arguments = {};
?>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.Enabled" value="true"/>

<?if(arguments.IdFournisseur && arguments.IdFournisseur>0) {?>
	<input type="hidden" name="Row.IdFournisseur" value="<?=arguments.IdFournisseur?>"/>
<?}
else {?>
	<?=..Fournisseur.Html.Combo({Id : arguments.IdFournisseur, name: "Row.IdFournisseur"})?>
	<br/>
<?}?>
<label>Nom : </label><input name="Row.Name" size="33" value="" onchange="$(this.parentNode).find('input[name=\'Row.ShortName\']')[0].value=this.value">
<br/>
<label>Nom court : </label><input name="Row.ShortName" size="33" value="">
<br/>
<label>Categorie : </label><?=..Parameter.Html.Combo({Domain : 'ARTCAT', name : "Row.Category"})?>
<br/>
<label>Code F : </label><input name="Row.CodeF" size="16" maxlength="16" value="">

<br/>
<input type="hidden" name="Insert" value="true"/>
<a class="submit save" onclick="ArticleInsertSubmit(this); return false;">Enregistrer</a>
</fieldset>

</form>

<?=:js?>
]]></Value>
                                <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.New.js-->
                                <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                    <Value><![CDATA[<script>
function ArticleInsertSubmit(form){
	while(form.tagName != "FORM") form = form.parentNode;
	var search;
	if(((search = $(form).find('input[name="Row.IdFournisseur"]')).length > 0
		|| (search = $(form).find('select[name="Row.IdFournisseur"]')).length > 0)
	&& search[0].value <= 0){
		alert("Le fournisseur est obligatoire");
		return false;
	}
	if($(form).find('input[name="Row.Name"]')[0].value == ""){
		alert("Le nom est obligatoire");
		return false;
	}
	edv.Wait.Show();
	var result = edvSubmit(form);
	if(result && result != ""){
		edv.Wait.Hide();
		alert(result);
		return;
	}
	$(edvDialog(form).edvGet.DOM).attr("name","<?=..Edit:Name?>");
	edvDialog(form).Refresh();
	edv.Wait.Hide();
	return true;
}


function ArticleFournisseurSelect(link){
	edvDialog.Show("<?=..Fournisseur.Html.List:Name?>", "edvArgs={SelectMode:'single'}"
			, {title:"Sélection d'un fournisseur"
			 , close : function(selectedItem){
					if(selectedItem){
						link.innerHTML = selectedItem.text;
						var form = link;
						while(form.tagName != "FORM") form = form.parentNode;
						$(form).find('input[name="Row.IdFournisseur"]')[0].value = selectedItem.id;					
					}
				}
			}
		);
}
</script>
]]></Value>
                                    <!--.EDV.CoopEShop.DB.Article2.Params.Html.New.js._Where-->
                                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                    </VAR>
                                </VAR>
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.New._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Params.Html.Rows-->
                            <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?
/*arguments = {IdFournisseur : 4
	, IdArticle : ..Row.IdArticle
	};
*/
if(!arguments) throw new EDVException("aucun argument fourni");
if(!arguments.DataTable){
	if(session.User.IdFournisseur)
		arguments.IdFournisseur = session.User.IdFournisseur;
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	var sql = "SELECT DISTINCT A.Name, A.IdFournisseur, A.IdArticle, PC.IdParam, AP.*, PC.Label AS ParamLabel, PC.ValueType"
			+ " FROM article A"
			+ " INNER JOIN parameter PC"
				+ " ON PC.Domain = 'ARTPARAM'"
			+ " LEFT JOIN articleparam AP"
				+ " ON AP.IdArticle = A.IdArticle"
				+ " AND AP.IdParam = PC.IdParam"
			;
	var clauseWhere = "WHERE";
	if (arguments.SQLWhere && arguments.SQLWhere != ""){
		sql += " " + clauseWhere + " (" + arguments.SQLWhere + ")";
		if (clauseWhere == "WHERE") clauseWhere = "AND";
	}
	if(arguments.IdFournisseur){
		sql += " " + clauseWhere + " A.IdFournisseur = " + arguments.IdFournisseur;
		if (clauseWhere == "WHERE") clauseWhere = "AND";
	}
	if(arguments.IdArticle){
		sql += " " + clauseWhere + " A.IdArticle = " + arguments.IdArticle;
		if (clauseWhere == "WHERE") clauseWhere = "AND";
	}
	else {
		sql += " " + clauseWhere + " A.Enabled = 1";
		if (clauseWhere == "WHERE") clauseWhere = "AND";
	}

	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY " + arguments.OrderBy;
	else
		sql += " ORDER BY PC.Label, A.Name";
	
	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}?>
<ul class="articleParam">
<?var curArticle;
for(var dtRow in arguments.DataTable.Rows){
	if(curArticle != dtRow["IdArticle"]) {
		if (curArticle) echo("</ul>");
		curArticle = dtRow["IdArticle"];
		?><ul class="sub"><?if(!arguments.IdArticle) {
			?><span class="category"><?=dtRow["Name"]?></span><?
		}
	}
	?>	<li>	<a class="articleParam<?if(dtRow["Enabled"]==0) echo(" notEnabled")?>" href="#<?=dtRow["IdArticle"]?>" 
				onclick="edvDataTable(this).Rows.Edit('edvargs={IdArticle:<?=dtRow["IdArticle"]?>, IdParam:\'<?=dtRow["IdParam"]?>\'}', {title:this.innerHTML});return false;">
				<?=dtRow["ParamLabel"]?>
			</a>
			<?if(!dtRow.IsNull("Value")){?>
				<span class="paramValue"><?=dtRow["Value"]?></span>
			<?}

			if(!dtRow.IsNull("Value") && session.User.IdFournisseur == dtRow["IdFournisseur"]){?>
				<a href="" onclick="return !edvDataTable(this).Rows.DeleteRow('edvargs={IdArticle:<?=dtRow["IdArticle"]?>, IdParam:\<?=dtRow["IdParam"]?>\'}')">
					<img src="Images/Cross16.png" alt="Supprimer" width="12"></a>
			<?}
			else echo("&nbsp;");?>
			</li>
<?}
if (curArticle) echo("</ul>");
?>
</ul>
]]></Value>
                                <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.Rows.Filter-->
                                <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.Rows.MaxRows-->
                                <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                    <Value><![CDATA[40]]></Value>
                                </VAR>
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.Rows._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Params.Html.View-->
                            <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <!--.EDV.CoopEShop.DB.Article2.Params.Html.View._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Params.Html._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Article2.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.Article2.Row.Category-->
                        <VAR ShortName="Category" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[Colis]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.CodeF-->
                        <VAR ShortName="CodeF" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Article2.Row.Enabled-->
                        <VAR ShortName="Enabled" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Value><![CDATA[True]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.IdArticle-->
                        <VAR ShortName="IdArticle" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[408]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.IdArticleRef-->
                        <VAR ShortName="IdArticleRef" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.IdFournisseur-->
                        <VAR ShortName="IdFournisseur" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[10]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.Image-->
                        <VAR ShortName="Image" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <!--.EDV.CoopEShop.DB.Article2.Row.Image.File-->
                            <VAR ShortName="File" ClassName="VarFile" AutoReset="0" Securized="0" ReadOnly="0" ValueType="File">
                                <!--.EDV.CoopEShop.DB.Article2.Row.Image.File.OnChanging-->
                                <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                    <Script><![CDATA[when(..:Changing && .. != "")
{
	/*var files = Directory.GetFiles(Path.GetTempPath(), "*." + ..);
	if(files.length == 0)
		edvError = "Impossible de trouver le fichier " + Path.Combine(Path.GetTempPath(), "*." + ..);
	else {
		.. = files[files.length-1];
	}*/
	var dest = ..edvAppli.Images.Articles + ..IdArticle + "." + Path.GetFileName(..);
	File.Copy(.., dest, true);
	... = ..IdArticle + "." + Path.GetFileName(..);
}
null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Row.Image.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Changing)
{
	File = "";
}
null;]]></Script>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Article2.Row.Image.OnChecking-->
                            <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Checking && (..).StartsWith("#delete="))
{
	var lFile = ..edvAppli.Images.Articles + (..).Substring(8);
	if(File.Exists(lFile))
		File.Delete(lFile);
	else
		edvInfo = lFile + " n'existe pas";
	.. = "";
}
null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.IsLot-->
                        <VAR ShortName="IsLot" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Value><![CDATA[False]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.Name-->
                        <VAR ShortName="Name" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[test1]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.ShortName-->
                        <VAR ShortName="ShortName" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[test1]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.SortIndex-->
                        <VAR ShortName="SortIndex" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[999]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.Stock-->
                        <VAR ShortName="Stock" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.StockDate-->
                        <VAR ShortName="StockDate" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[01/01/0001 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Article2.Row.Unit-->
                        <VAR ShortName="Unit" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Article2.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.Article2.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Article2.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM article
WHERE IdArticle = :IDARTICLE]]></Value>
                        <!--.EDV.CoopEShop.DB.Article2.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Article2.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO article (IdFournisseur, IdArticleRef, Name, ShortName, Category, IsLot, Enabled, CodeF, Unit, Stock, StockDate, Image, SortIndex)
VALUES(:IDFOURNISSEUR, :IDARTICLEREF, :NAME, :SHORTNAME, :CATEGORY, :ISLOT, :ENABLED, :CODEF, :UNIT, :STOCK, :STOCKDATE, :IMAGE, :SORTINDEX)
]]></Value>
                        <!--.EDV.CoopEShop.DB.Article2.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Article2.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT a.*
FROM article a
WHERE a.IdArticle = :ID
]]></Value>
                        <!--.EDV.CoopEShop.DB.Article2.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Article2.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Article2.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE article
SET IdFournisseur = :IDFOURNISSEUR,
IdArticleRef = :IDARTICLEREF,
Name = :NAME,
ShortName = :SHORTNAME,
Category = :CATEGORY,
IsLot = :ISLOT,
CodeF = :CODEF,
Unit = :UNIT,
Stock = :STOCK,
StockDate = :STOCKDATE,
Enabled = :ENABLED,
Image = :IMAGE,
SortIndex = :SORTINDEX
WHERE IdArticle = :IDARTICLE]]></Value>
                        <!--.EDV.CoopEShop.DB.Article2.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Article2.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.Article2.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Article2.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.Catalogue-->
                <VAR ShortName="Catalogue" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="MySQL" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="MySQL"><xs:complexType><xs:sequence><xs:element name="IdContact" type="xs:int" /><xs:element name="IdDossier" type="xs:int" /><xs:element name="TypeDossier" type="xs:string" /><xs:element name="DateDossier" type="xs:dateTime" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="IdClient" type="xs:int" minOccurs="0" /><xs:element name="ClosedDate" type="xs:dateTime" minOccurs="0" /><xs:element name="Status" type="xs:string" minOccurs="0" /><xs:element name="Visibility" type="xs:string" minOccurs="0" /><xs:element name="IdDossierRef" type="xs:int" minOccurs="0" /><xs:element name="TypeDossierRef" type="xs:string" minOccurs="0" /><xs:element name="Comment" type="xs:string" minOccurs="0" /><xs:element name="IdUser" type="xs:int" minOccurs="0" /><xs:element name="UpdateDate" type="xs:dateTime" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType><xs:unique name="Constraint1" msdata:PrimaryKey="true"><xs:selector xpath=".//MySQL" /><xs:field xpath="IdContact" /><xs:field xpath="IdDossier" /><xs:field xpath="TypeDossier" /></xs:unique></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.Catalogue.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Catalogue.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Catalogue.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.Catalogue.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.Catalogue.Html.Combo-->
                        <VAR ShortName="Combo" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
var sql = "SELECT D.IdDossier, D.Name"
		+ " FROM dossier D"
		+ " INNER JOIN fournisseur F"
			+ " ON D.IdContact = F.IdContact"
		+ " WHERE D.TypeDossier = 'CTLOG'";
if (arguments.IdFournisseur)
	sql += " AND F.IdFournisseur = ?"
		+ " ORDER BY D.Name";
else
	sql += " LIMIT 0";

arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.IdFournisseur]);
if (!(arguments.DataTable instanceof DataTable))
	throw new EDVException(arguments.DataTable);
?><select name="<?=arguments.name?>" value="false" 
	onchange="<?=arguments.onClick ? arguments.onClick : ""?>"
	class="<?=arguments.className ? arguments.className : ""?>">
	<option value="0" selected="selected">tous les catalogues</option>
<?
for(var dtRow in arguments.DataTable.Rows){?>
	<option value="<?=dtRow ["IdDossier"]?>"><?=dtRow["Name"]?></option>
<?}
?>
</select>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.Combo._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
var cx = new edvData(..edvAppli.DataSource, true);
if(arguments.Execute){
	
	if (!session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdContact + arguments.TypeDossier])
		throw new EDVException("Accès non conforme");
	session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdContact + arguments.TypeDossier]=undefined;
	var sql = "DELETE FROM lgdossier"
		+ " WHERE IdDossier = ?"
		+ " AND IdContact = ?"
		+ " AND TypeDossier = ?";				
	var result = cx.execute(sql, [arguments.IdDossier, arguments.IdContact, arguments.TypeDossier]);
	if (typeof(result) === "string")
		throw new EDVException(result);
		
	var sql = "DELETE FROM dossier"
		+ " WHERE IdDossier = ?"
		+ " AND IdContact = ?"
		+ " AND TypeDossier = ?";				
	var result = cx.execute(sql, [arguments.IdDossier, arguments.IdContact, arguments.TypeDossier]);
	cx.close();
	if (typeof(result) === "string")
		throw new EDVException(result);
	echo("");
}

else {

	var sql = "SELECT D.IdDossier, D.DateDossier, D.Status, F.IdFournisseur, F.Name AS NameF"
		+ ", Count(LG.Line) AS NbLines"
		+ " FROM dossier D"
		+ " INNER JOIN fournisseur F"
			+ " ON D.IdContact = F.IdContact"
		+ " LEFT JOIN lgdossier LG"
			+ " ON LG.IdContact = D.IdContact"
			+ " AND LG.IdDossier = D.IdDossier"
			+ " AND LG.TypeDossier = D.TypeDossier"
		+ " WHERE D.IdDossier = ?"
		+ " AND D.IdContact = ?"
		+ " AND D.TypeDossier = ?"
		+ " GROUP BY D.IdDossier, D.DateDossier, D.Status, F.IdFournisseur, F.Name";
	//edvInfo = sql;
	arguments.DataTable = cx.select(sql, [arguments.IdDossier, arguments.IdContact, arguments.TypeDossier]);
	cx.close();
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count==0)
		throw new EDVException("Dossier inconnu");
	var dtRow = arguments.DataTable.Rows[0];
	session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdContact + arguments.TypeDossier]=true;
	?>
	<div class="MessageBox edvEditor">
		Etes vous sûr de vouloir supprimer le dossier n°<?=dtRow["IdDossier"]?>		
		<?if(session.User.IdFournisseur != dtRow["IdFournisseur"]){?>
			<br>à <?=dtRow["NameF"]?>
		<?}?>
		<br>du <?=dtRow["DateDossier"].ToString("ddd dd MMM yyyy HH:mm")?> ?
		<br><a class="submit delete" href="?" onclick="return DossierDeleteExecute(<?=arguments.Id?>)">
		Supprimer</a>
		<script>
			function DossierDeleteExecute(id){
				var result;
				if((result = edvGetHTML("<?=:Name?>", "edvargs={IdDossier:<?=arguments.IdDossier?>, IdContact:<?=arguments.IdContact?>, TypeDossier : \'<?=arguments.TypeDossier?>\', Execute:true}"))==""
				|| typeof(result) != "string")
					return true;
				alert(result);
				return false;
			}
		</script>
	</div>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if(!arguments.DataRow && !arguments.DataTable){
	var cx = new edvData(session.DataSource);
	var sql = "SELECT D.*, F.Name AS NameF, F.Message AS MessageF"
			+ " FROM dossier D"
			+ " INNER JOIN fournisseur F"
				+ " ON D.IdContact = F.IdContact";
	if (arguments.IdDossier){
		sql += " WHERE D.IdDossier = ?"
				+ " AND D.IdContact = ?"
				+ " AND D.TypeDossier = ?";				
		arguments.DataTable = cx.select(sql, [arguments.IdDossier, arguments.IdContact, "CTLOG"]);
	}
	else {
		sql += " WHERE D.IdClient = ?"
			+ " AND D.TypeDossier = ?"
			+ " ORDER BY DateDossier DESC"
			+ " LIMIT 0,1";				
		arguments.DataTable = cx.select(sql, ..edvAppli.DataSource, [..edvAppli.User.Id, "CTLOG"]);
	}
	cx.close();
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucun enregistrement.");		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
?>
<form method="post" action="?" class="edvEditor dossier cmde">
<fieldset>
<legend>Catalogue <?=dtRow["IdDossier"]?> créé le <?=dtRow["DateDossier"].ToString("dddd dd MMMM yyyy HH:mm")?></legend>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdDossier" value="<?=dtRow["IdDossier"]?>"/>
<input type="hidden" name="Row.TypeDossier" value="<?=dtRow["TypeDossier"]?>"/>
<input type="hidden" name="Row.IdDossierRef" value="<?=dtRow["IdDossierRef"]?>"/>
<input type="hidden" name="Row.TypeDossierRef" value="<?=dtRow["TypeDossierRef"]?>"/>
<input type="hidden" name="Row.IdContact" value="<?=dtRow["IdContact"]?>"/>
<input type="hidden" name="Row.IdClient" value="<?=dtRow["IdClient"]?>"/>
<?if(dtRow["Status"]!="CLOSED" && !dtRow.IsNull("MessageF") && dtRow["MessageF"] != ""){
	?><pre class="messageF"><?=dtRow["MessageF"]?></pre><?}
?><label>Titre :</label><input name="Row.Name" value="<?=dtRow["Name"]?>" size="72" onchange="CatalogueSubmitCheck(this);"/>
<br>
<label>Commentaire : </label><textarea name="Row.Comment" cols="70" rows="2" maxlength="255" onchange="CatalogueSubmitCheck(this);"><?=dtRow["Comment"]?></textarea>
<br>
<label>Visiblité : </label><?=HTML.RADIO({ 
	"type" : "radio"
	, "name" : "Row.Visibility" 
	, "value" : dtRow.IsNull("Visibility") ? "PUBLIC" : dtRow["Visibility"]
	, "Values" : cx.select("SELECT IdParam, Label FROM parameter WHERE Domain = 'CTLOG.VIS' ORDER BY SortIndex, Label")
}, edvSender, edvClient)?>
<input type="hidden" name="Update" value="true"/>
<a href="#<?=dtRow["IdDossier"]?>" class="submit save" style="text-decoration: none;"
	onclick="CatalogueSubmitCheck(this); return false;">&nbsp;</a>
<?if (dtRow["Status"]=="CLOSED"){?>
	<div class="closed">Dossier terminé</div>
<?}?>
</fieldset>
</form>
<?=:js?>
<?=..Params.Html(arguments)?>
<span class="edvRows" name="<?=:Domain?>Rows">
	<?=..LgCatalogue.Html.Rows({Id : dtRow["IdDossier"], IdContact : dtRow["IdContact"], TypeDossier : dtRow["TypeDossier"], Status : dtRow["Status"]})?>
</span>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function CatalogueSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	edv.Wait.Show();
	edvSubmit(form);
	edv.Wait.Hide();
	return true;
}
</script>

]]></Value>
                                <!--.EDV.CoopEShop.DB.Catalogue.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
if(!arguments.MaxRows)
	arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;

var rowsHtml = Rows(arguments);
?>
<span class="edvDataTable">
	<span class="title">Mes Catalogues</span>
	<span class="edvNavigator">
		<a href="" onclick="LoadPageInner('<?=New:Name?>');return false;"><img src="Images/Plus16.png" alt="Nouveau"/></a>
		&nbsp;
		<param class="edvProperty" name="MaxRows" value="<?=arguments.MaxRows?>"/>
		<input class="filter" size="8" value="<?=Rows.Filter?>"
			onchange="edvDataTable(this).Navigator.SetFilter(this.value)"
			onkeydown="if(/msie|Trident/i.test(navigator.userAgent) && getKeyPress(event)==13) this.onchange();"/>
		&nbsp;<a href="" onclick="edvDataTable(this).Navigator.RefreshRows();return false;"><img src="Images/Search16.png"/></a>
		&nbsp;
		<a <?if(arguments.Limit==0){?>style="display:none"<?}?> 
			class="previous" href="#" onclick="edvDataTable(this).Navigator.Previous()">&lt;&lt; précédent</a>
		<span class="current" style="display:none"><?
			if(arguments.DataTable.Rows.Count == 0){?>
				<i>fin de liste</i>
			<?}
		?></span>
		<a <?if(arguments.DataTable.Rows.Count < arguments.MaxRows){?>style="display:none"<?}?> 
			class="next" href="#" onclick="edvDataTable(this).Navigator.Next()">suivant &gt;&gt;</a>
		
	</span>

	<span class="edvRows" name="<?=:Domain?>Rows">
		<param class="edvProperty" name="Edit.Title" value="Catalogue"/>
		<?=rowsHtml?>
	</span>
	

</span>


]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
..Error="";
..Row.IdContact = session.User.IdUser;
..Row.IdClient = 0;
..Row.TypeDossier="CTLOG";
..Row.DateDossier = DateTime.Now;
..Row.IdFournisseur = session.User.IdFournisseur;
..Row.Name="Catalogue du " + DateTime.Now.Date.ToString("ddd dd/MM/yyyy");
..Row.Comment ="";
..Row.IdUser = session.IdUser;
..Row.ClosedDate = DateTime.MinValue;
..Row.IdDossierRef = 0;
..Row.Status = "";
..Row.ClosedDate = DateTime.MinValue;
..Row.Visibility = 'FRIEND';
..Insert;
if (..Error == "") {
	?><div class="edvEditor">
	<?=Edit({"IdDossier" : ..Row.IdDossier, "IdContact" : ..Row.IdContact, "TypeDossier" : ..Row.TypeDossier }, edvClient)?>
	</div>
<?}
else {?>
	<p class="edvError"><?=..Error?></p>
<?}
?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments.DataTable){
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	var cx = new edvData(session.DataSource);
	var sqlArgs = ['CTLOG'];
	var sql = "SELECT PS.Label AS StatusLabel, F.Name AS NameF"
			+ ", D.IdDossier, D.IdContact, D.TypeDossier, D.DateDossier, D.Status, D.Name, D.Comment"
			+ ", Count(LG.Line) AS NbLines"
			+ " FROM dossier D"
			+ " INNER JOIN fournisseur F"
				+ " ON D.IdContact = F.IdContact"
			+ " LEFT JOIN lgdossier LG"
				+ " ON LG.IdContact = D.IdContact"
				+ " AND LG.IdDossier = D.IdDossier"
				+ " AND LG.TypeDossier = D.TypeDossier"
			+ " LEFT JOIN parameter PS"
				+ " ON D.Status = PS.IdParam"
				+ " AND PS.Domain = 'CMDSTA'"
			+ " WHERE D.TypeDossier = ?"
			+ " AND F.IdFournisseur = ?"
			;
	if (arguments.IdFournisseur)
		sqlArgs.push(arguments.IdFournisseur);
	else
		sqlArgs.push(session.User.IdFournisseur);
	
	if (arguments.SQLWhere && arguments.SQLWhere != "")
		sql += " AND (" + arguments.SQLWhere + ")";
		
	if (arguments.Filter && arguments.Filter != ""){
		if (arguments.Filter.ToUpper().StartsWith("WHERE "))
			sql += " AND (" + arguments.Filter.Substring(6) + ")";
		else
			sql += " AND (" + arguments.Filter + ")";
	}
	sql += " GROUP BY PS.Label, F.Name"
		+ ", D.IdDossier, D.IdContact, D.TypeDossier, D.DateDossier, D.Status, D.Name, D.Comment";
				
	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY " + arguments.OrderBy;
	else
		sql += " ORDER BY D.DateDossier DESC";
	sql += " LIMIT " + arguments.Limit + ", " + arguments.MaxRows;
	
	arguments.DataTable = cx.select(sql, sqlArgs);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}?>
<table class="dossiers catalogue edvExpanderRoot">
<?
for(var dtRow in arguments.DataTable.Rows){
	var isClosed = !dtRow.IsNull("Status") && dtRow["Status"]=="CLOSED";
	?>	<tr><td><span class="edvExpander" name="">
			<param name="edvArgs" value="{IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:'<?=dtRow["TypeDossier"]?>'}"/>
			<?if(!dtRow.IsNull("name") && dtRow["name"]!="") {?>
				<span class="name"><?=dtRow["name"]?></span><?}
			?>
		<td><?=dtRow["NbLines"] == 0 ? "aucune ligne" : dtRow["NbLines"] + " ligne" + (dtRow["NbLines"]==1 ? "" : "s")?>
		<td>&nbsp;&nbsp;
			<?if(!isClosed){?>
				<a href="" onclick="return !edvDataTable(this).Rows.DeleteRow('edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=dtRow["TypeDossier"]?>\'}')">
					<img src="/edv/Images/Trash.png" alt="Supprimer"></a>
			<?}
			else {?>
				<a href="" onclick="return !edvDataTable(this).Rows.DeleteRow('edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=dtRow["TypeDossier"]?>\', Status:\'\'}',{title:'Réactivation'})">
					<img src="Images/Plus16.png" alt="Réactiver"></a>
			<?}?>

		<?if(!dtRow.IsNull("Comment") && dtRow["Comment"]!="") {?>
			<tr><td colspan="2">
				<pre><?=dtRow["Comment"]?></pre>
		<?}?>
		</tr>
<?}
?>
</table>

<script>
$(document).ready(function(){
	$(".catalogue.edvExpanderRoot").edvExpander({
		"expand" : function(){
			edvDataTable(this).Rows.Edit("edvArgs=" + $(this).children("param[name=\"edvArgs\"]").val()
				, {"title" : "Catalogue"
				});
		}
	});
});
</script>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[20]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Html.Select-->
                        <VAR ShortName="Select" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Arguments incorrects");
var cx = new edvData(session.DataSource);
var args = [session.User.IdContact];
var sql = "SELECT D.*, IdFournisseur, F.Name AS NameF, C.ZipCode, C.City"
		+ " FROM dossier D"
		+ " INNER JOIN fournisseur F"
			+ " ON D.IdContact = F.IdContact"
		+ " INNER JOIN contact C"
			+ " ON C.IdContact = F.IdContact"
		+ " INNER JOIN vw_fourn_contacts fc"
			+ " ON F.IdFournisseur = fc.IdFournisseur"
			+ " AND fc.IdFriend = ?"
		;
sql += " WHERE D.TypeDossier = 'CTLOG'"
	+ " AND D.ClosedDate = '0001-01-01'";
if (arguments.IdFournisseur){
	sql += " AND F.IdFournisseur = ?";
	args.push(arguments.IdFournisseur);
}
sql += " ORDER BY F.Name, D.Name";
arguments.DataTable = cx.select(sql, args);
if (!(arguments.DataTable instanceof DataTable))
	throw new EDVException(arguments.DataTable);
?>
<script>
	function linkCatalogueOnClick(IdContact, IdDossier, IdFournisseur){
		if(typeof(IdContact)==="object")
		{
			var form = IdContact;
			
		}
		<?if(arguments.onClick){?>
			cboSelectCatalogueOnClick.call(link);
		<?}?>
	}
	<?if(arguments.onClick){?>
		function cboSelectCatalogueOnClick(){
			<?=arguments.onClick?>}
	<?}
	if (arguments.DataTable.Rows.Count == 1){?>
		linkCatalogueOnClick(arguments.DataTable.Rows
	<?}?>
</script>
<ul class="edvRows">
<?var curFournisseur;
for(var dtRow in arguments.DataTable.Rows){
		if(curFournisseur != dtRow["IdFournisseur"]) {
			if (curFournisseur) echo("</ul>");
			curFournisseur = dtRow["IdFournisseur"];
			var fName = "";
			if(!dtRow.IsNull("ZipCode") && dtRow["ZipCode"])
				fName += dtRow["ZipCode"].Substring(0,2) + " - ";
			
			fName += dtRow["NameF"];
			?><ul class="sub"><span class="Category"><?=fName?></span><?
		}
		arguments.DataRow = dtRow;
	?>	<li><a href="" name="<?=dtRow["IdContact"]?>|<?=dtRow["IdDossier"]?>|<?=dtRow["IdFournisseur"]?>"
			onclick="linkCatalogueOnClick(this); return false;"><?=dtRow["Name"]?></a></li>
<?}
if (curFournisseur) echo("</ul>");
?>
</ul>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.Select._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.Catalogue.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Catalogue.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.DB.Catalogue.Insert.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Checking) {
	var cx = new edvData(..edvAppli.DataSource, true);
	if (..Row.IdContact == 0){
		var sql = "SELECT IdContact FROM fournisseur"
				+ " WHERE IdFournisseur = ?";
		var lRows = cx.select(sql, [..Row.IdFournisseur]);
		if (!(lRows instanceof DataTable))
			throw new EDVException(lRows);
		..Row.IdContact = lRows.Rows[0][0];
	}
	var idDossier = int(DateTime.Now.ToString("yyMMdd") + "000");
	var sql = "SELECT MAX(IdDossier) FROM dossier"
		+ " WHERE IdContact = ? AND TypeDossier = ?"
		+ " AND IdDossier > ?";
	var dt = cx.select(sql, [..Row.IdContact, ..Row.TypeDossier, idDossier]);
	cx.close();
	if (dt.Rows.Count > 0 && dt.Rows[0].IsNull(0))
		..Row.IdDossier = idDossier + 1;
	else
		..Row.IdDossier = dt.Rows[0][0] + 1;
	..Row.DateDossier = DateTime.Now;
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Catalogue.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Catalogue.Params-->
                    <VAR ShortName="Params" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                        <!--.EDV.CoopEShop.DB.Catalogue.Params.Html-->
                        <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?var paramDomain : String = "CTLOG.PARAM";
if(!arguments) throw new EDVException("Arguments manquants");
var sql = "SELECT P.IdParam, PD.*, P.Label, P.ValueType, P.Data AS PData"
		+ " FROM parameter P"
		+ " LEFT JOIN paramdossier PD"
		+ " 	ON P.IdParam = PD.IdParam"
		+ " 	AND PD.IdDossier = ?"
		+ " 	AND PD.IdContact = ?"
		+ " 	AND PD.TypeDossier = ?"
		+ " WHERE P.Domain = ?";				
var cx = new edvData(session.DataSource);
var dataTable = cx.select(sql, [arguments.IdDossier, arguments.IdContact, "CTLOG", paramDomain]);
if (!(dataTable instanceof DataTable))
	throw new EDVException(dataTable);		
if (dataTable.Rows.Count == 0)
	edvReturn(null);		

?>
<form method="post" action="?" class="edvEditor dossier params">
<fieldset>
<input type="hidden" name="edvroot" value="<?=..:Name?>"/>
<input type="hidden" name="edvcode" value="Save"/>
<input type="hidden" name="edvargs.Domain" value="<?=paramDomain?>"/>
<input type="hidden" name="edvargs.IdDossier" value="<?=arguments.IdDossier?>"/>
<input type="hidden" name="edvargs.TypeDossier" value="CTLOG"/>
<input type="hidden" name="edvargs.IdContact" value="<?=arguments.IdContact?>"/>
<table>
<?for(var dtRow in dataTable.Rows){?>
	<tr><td><input type="hidden" name="edvargs.IdParam" value="<?=dtRow["IdParam"]?>"/>
	<input type="hidden" name="edvargs.action" value="<?=dtRow.IsNull("IdDossier") ? "ins" : "upd"?>"/>
	<?=dtRow["Label"]?> :<td><?
	var data = dtRow.IsNull("Data") ? "" : dtRow["Data"];
	switch(dtRow["ValueType"]){
	case "BOOL" :
		?><?=edv.{HTML}.CheckBox({
			"value" : data
			, "name" : "edvargs.Data"
		}, edvSender, edvClient)?><?
		break;
	case "SELECT" :
		var values = dtRow["PData"];
		if(values.StartsWith("SELECT ", StringComparison.OrdinalIgnoreCase)){
			var dtValues = cx.select(values);
			if(dtValues instanceof DataTable){
				var isArray = true;
				values = [["", ""]];
				var labelIndex = dtValues.Columns.Count == 1 ? 0 : 1;
				for(var param in dtValues.Rows)
					values.push( [ param[0], param[labelIndex] ] );
			}
			else
				values = dtValues;
		}
		else
			values = values.split(newline);
		?><select name="edvargs.Data" value="<?=data?>"><?
		for(var i = 0; i < values.length; i++){
			var kvp = isArray ? values[i] : values[i].split(/[,\t]/g);
			?><option value="<?=kvp[0]?>"<?=data==kvp[0] ? " selected=\"selected\"" : ""?>><?
			?><?=kvp[1]?></option><?
		}?></select><?
		break;
	default:
		?><input name="edvargs.Data" value="<?=data?>" size="7"/><?
		break;
	}
}?>
</table>
<a href="#<?=dtRow["IdDossier"]?>" class="submit save" style="text-decoration: none;"
	onclick="edvSubmit(this); return false;">&nbsp;</a>
</fieldset>
</form>
]]></Value>
                            <!--.EDV.CoopEShop.DB.Catalogue.Params.Html._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Params.Save-->
                        <VAR ShortName="Save" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?=edvInfo = edv.json(arguments)?>
<?/*arguments = {
"Domain" : "CTLOG.PARAM",
"IdDossier" : "111127001",
"TypeDossier" : "CTLOG",
"IdContact" : "131",
"IdParam" : "CLOSED.DAY,CLOSED.TIME",
"action" : "ins,ins",
"Data" : "Jeudi,23:30"}
*/?>
<?
arguments.action = arguments.action.split(",");
arguments.IdParam = arguments.IdParam.split(",");
arguments.Data = arguments.Data.split(",");
var results = [];
for(var i : int = 0; i < arguments.action.length; i++)
	switch(arguments.action[i]){
		case "insert" :
		case "ins" :
			results.push(edv.Data.Open("INSERT INTO paramdossier (IdContact, IdDossier, TypeDossier, IdParam, Data)"
				+ " VALUES(?,?,?,?,?)", ..edvAppli.DataSource
				, [arguments.IdContact, arguments.IdDossier, arguments.TypeDossier, arguments.IdParam[i], arguments.Data[i]]
				, "MySQL", true));
			break;

		case "update" :
		case "upd" :
			results.push(edv.Data.Open("UPDATE paramdossier SET Data = ?"
				+ " WHERE IdContact = ? AND IdDossier = ? AND TypeDossier = ? AND IdParam = ?", ..edvAppli.DataSource
				, [arguments.Data[i], arguments.IdContact, arguments.IdDossier, arguments.TypeDossier, arguments.IdParam[i]]
				, "MySQL", true));
			break;
	
		default: break;
	}
echo(edvInfo = edv.json(results));
?>]]></Value>
                            <!--.EDV.CoopEShop.DB.Catalogue.Params.Save._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Catalogue.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.ClosedDate-->
                        <VAR ShortName="ClosedDate" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[01/01/0001 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.Comment-->
                        <VAR ShortName="Comment" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.DateDossier-->
                        <VAR ShortName="DateDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[18/12/2013 21:49:14]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.IdClient-->
                        <VAR ShortName="IdClient" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.IdContact-->
                        <VAR ShortName="IdContact" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[378]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.IdDossier-->
                        <VAR ShortName="IdDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[131218001]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.IdDossierRef-->
                        <VAR ShortName="IdDossierRef" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.IdFournisseur-->
                        <VAR ShortName="IdFournisseur" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[10]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.IdUser-->
                        <VAR ShortName="IdUser" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.Name-->
                        <VAR ShortName="Name" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[Catalogue 1]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.Status-->
                        <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.TypeDossier-->
                        <VAR ShortName="TypeDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[CTLOG]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.TypeDossierRef-->
                        <VAR ShortName="TypeDossierRef" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.UpdateDate-->
                        <VAR ShortName="UpdateDate" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[01/01/0001 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Catalogue.Row.Visibility-->
                        <VAR ShortName="Visibility" ClassName="VarSelection" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Selection">
                            <Value><![CDATA[HIDE]]></Value>
                            <!--.EDV.CoopEShop.DB.Catalogue.Row.Visibility.Values-->
                            <VAR ShortName="Values" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Text" />
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Catalogue.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.Catalogue.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Catalogue.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM article
WHERE IdArticle = :IDARTICLE]]></Value>
                        <!--.EDV.CoopEShop.DB.Catalogue.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Catalogue.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO dossier (IdContact, IdDossier, TypeDossier, DateDossier, IdClient, ClosedDate, Status, Visibility, IdDossierRef, TypeDossierRef, Name, Comment, IdUser)
VALUES(:IDCONTACT, :IDDOSSIER, :TYPEDOSSIER, :DATEDOSSIER, :IDCLIENT, :CLOSEDDATE, :STATUS, :VISIBILITY, :IDDOSSIERREF, :TYPEDOSSIERREF, :NAME, :COMMENT, <?=..edvAppli.User.Id?>)
]]></Value>
                        <!--.EDV.CoopEShop.DB.Catalogue.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Catalogue.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * FROM dossier 
WHERE IdContact = :IDCONTACT
AND IdDossier = :ID

]]></Value>
                        <!--.EDV.CoopEShop.DB.Catalogue.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Catalogue.SQLSelect.IDCONTACT-->
                        <VAR ShortName="IDCONTACT" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Catalogue.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Catalogue.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE dossier
SET ClosedDate = :CLOSEDDATE
, Status = :STATUS
, IdDossierRef = :IDDOSSIERREF
, TypeDossierRef = :TYPEDOSSIERREF
, Name = :NAME
, Comment = :COMMENT
, Visibility = :VISIBILITY
WHERE IdContact = :IDCONTACT
AND IdDossier = :IDDOSSIER
AND TypeDossier = :TYPEDOSSIER
]]></Value>
                        <!--.EDV.CoopEShop.DB.Catalogue.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Catalogue.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.Catalogue.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Catalogue.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.CheckUp-->
                <VAR ShortName="CheckUp" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <!--.EDV.CoopEShop.DB.CheckUp.EcartsTarifCatalogue-->
                    <VAR ShortName="EcartsTarifCatalogue" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?var sql = "SELECT lgd.Price AS ctlogPrice, t.Price, lgd.Unit AS ctlogUnit, t.Unit, a.Name"
	+ " FROM article a"
	+ " INNER JOIN lgdossier lgd"
	+ " ON a.IdArticle = lgd.IdArticle"
	+ " INNER JOIN tarif t"
	+ " ON lgd.IdArticle = t.IdArticle"
	+ " AND (lgd.Price <> t.Price"
	+ " OR lgd.Unit <> t.Unit)"
	+ " WHERE TypeDossier='CTLOG'"
	;
	
	var dt = edv.Data.Open(sql, ..edvAppli.DataSource);
	echo(HTML.TABLE(dt));	
?>
<?=dt.Rows.Count?> ligne(s)]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.DB.CheckUp.EcartsTarifCatalogue._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CheckUp.UpdateTarif2Catalogue-->
                    <VAR ShortName="UpdateTarif2Catalogue" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?
if(edvClient.MessageBox("Cette mise à jour écrase les tarifs de tous les catalogues sur la base du tarif des articles."
		+ newline + "Etes vous sûr de vouloir écraser ces données ?", "Confirmation", MessageBoxButtons.YesNo, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button2)
		!= DialogResult.Yes)
	throw new EDVException("Abandon par l'utilisateur");
?>UPDATE lgdossier, tarif
SET lgdossier.Price = tarif.Price
, lgdossier.Unit = tarif.Unit
WHERE lgdossier.TypeDossier = 'CTLOG'
AND lgdossier.IdArticle = tarif.IdArticle
<?=edv.Data.Execute(_echocode.ToString(), ..edvAppli.DataSource);?>]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.DB.CheckUp.UpdateTarif2Catalogue._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CheckUp._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.DB.CleanUp-->
                <VAR ShortName="CleanUp" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                    <!--.EDV.CoopEShop.DB.CleanUp.OnChanging-->
                    <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                        <Script><![CDATA[when(..:Changing) {
	var cx = new edvData(..edvAppli.DataSource, true);
	var sql;
	var title;
	title="Purge des lignes de dossiers sans dossier";
	sql = "DELETE FROM lgdossier"
		+ " WHERE NOT EXISTS("
			+ "SELECT * FROM dossier D"
			+ " WHERE D.IdContact = lgdossier.IdContact"
			+ " AND D.IdDossier = lgdossier.IdDossier"
			+ " AND D.TypeDossier = lgdossier.TypeDossier"
		+ ")";
	var result = cx.execute(sql);
	edvInfo = :Name + "\t" + title + " = " + result;

	title="Purge les dossiers anciens sans lignes de dossier";
	sql = "DELETE FROM dossier"
		+ " WHERE NOT EXISTS("
			+ "SELECT * FROM lgdossier"
			+ " WHERE dossier.IdContact = lgdossier.IdContact"
			+ " AND dossier.IdDossier = lgdossier.IdDossier"
			+ " AND dossier.TypeDossier = lgdossier.TypeDossier"
		+ ") AND DateDossier < CURDATE()-1";
	var result = cx.execute(sql);
	cx.close();
	edvInfo = :Name + "\t" + title + " = " + result;
}
null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.DB.CmdeClient-->
                <VAR ShortName="CmdeClient" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="IdDossier" type="xs:int" minOccurs="0" /><xs:element name="TypeDossier" type="xs:string" minOccurs="0" /><xs:element name="DateDossier" type="xs:dateTime" minOccurs="0" /><xs:element name="IdClient" type="xs:int" minOccurs="0" /><xs:element name="ClosedDate" type="xs:dateTime" minOccurs="0" /><xs:element name="Status" type="xs:string" minOccurs="0" /><xs:element name="IdDossierRef" type="xs:int" minOccurs="0" /><xs:element name="TypeDossierRef" type="xs:string" minOccurs="0" /><xs:element name="Comment" type="xs:string" minOccurs="0" /><xs:element name="IdUser" type="xs:int" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.CmdeClient.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.CmdeClient.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.CmdeClient.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.CmdeClient.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
if(arguments.Status === undefined) arguments.Status = "CLOSED";
var sql;
var params;
if(arguments.Status == "DELETED"){
	sql = "DELETE FROM dossier"
		+ " WHERE IdDossier = ?"
		+ " AND IdContact = ?"
		+ " AND TypeDossier = ?";
	params = [arguments.IdDossier, arguments.IdContact, arguments.TypeDossier];
}
else {
	sql = "UPDATE dossier"
		+ " SET Status = ?"
		+ " WHERE IdDossier = ?"
		+ " AND IdContact = ?"
		+ " AND TypeDossier = ?";
	params = [arguments.Status, arguments.IdDossier, arguments.IdContact, arguments.TypeDossier];
}
var cx = new edvData(session.DataSource);
var result = cx.execute(sql, params);
if (isNaN(result))
	throw new EDVException(result);
switch(arguments.Status){
case "OK" :
	echo("Dossier réactivé");
	break;
case "DELETED" :
	echo("Dossier supprimé");
	break;
case "CLOSED" :
	echo("Dossier terminé");
	break;
default :
	echo("Dossier dans l'état " + arguments.Status);
	break;
}
?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?arguments.OnlyInLines = true;?>
<?=..Commande.Html.Edit(arguments, edvClient)?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function CommandeSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	edv.Wait.Show();
	edvSubmit(form);
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.CmdeClient.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Html.GroupedArticles-->
                        <VAR ShortName="GroupedArticles" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};

if(!arguments.DateDossier)
	arguments.DateDossier = DateTime.Now.AddDays(- DateTime.Now.DayOfWeek - (:IsSys ? 0 : 17));//Depuis le début de la semaine
var rowsHtml = :Rows(arguments);

?>
<span class="edvDataTable">
	<span class="title">Regroupement des commandes clients</span>
	<span class="edvNavigator">
		<?=..Catalogue.Html.Combo({IdFournisseur: session.User.IdFournisseur, name: "IdCatalogue", onClick: "reloadRows(this)"})?>
		<br/><label style="font-size:larger" class="noPrint"><input type="checkbox" name="Clients" onclick="reloadRows(this)"> avec détails</label>
		&nbsp;&nbsp;à partir du
			<input class="jqDateTimePicker" name="DateDossier" size="9"
				onchange="reloadRows(this)" value="<?=arguments.DateDossier.ToString("dd/MM/yyyy")?>">
	</span>

	<span class="edvRows" name="<?=:Name?>.Rows">
		<?=rowsHtml?>
	</span>

</span>

<script>
function reloadRows(dom){
/*	if (dom.name == "SELECT")
		edvDataTable(dom).Rows.edvArgs[dom.name] = dom.value;
	else
		edvDataTable(dom).Rows.edvArgs.Clients = dom.checked;
*/
	edvDataTable(dom).Rows.edvArgs[dom.name] = edv.HTMLElement.Value(dom);
	edv.Wait.Show();
	edvDataTable(dom).Rows.Refresh();
}
$(document).ready(function() {
    $(".jqDateTimePicker").datepicker({
						dateFormat: 'dd/mm/yy',
						dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
						dayNamesMin: ['Di', 'Lu', 'Ma', 'Me', 'Je', 'Ve', 'Sa'],
						dayNamesShort: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
						firstDay: 1,
						monthNames: ['Janvier','Février','Mars','Avril','Mai','Juin','Juillet','Aout','Septembre','Octobre','Novembre','Décember'],
						monthNamesShort: ['Jan','Fév','Mar','Avr','Mai','Jun','Jui','Aou','Sep','Oct','Nov','Déc']
					});
  });
</script>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.GroupedArticles.Rows-->
                            <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?arguments.Clients = (arguments.Clients || (arguments.Clients != undefined && arguments.Clients == null))
				&& ((typeof(arguments.Clients)==="string" && arguments.Clients == "true")
				   || typeof(arguments.Clients)!="string")
if(!arguments.IdContact)
	arguments.IdContact = session.User.IdUser;
if(!arguments.TypeDossier)
	arguments.TypeDossier = 'CMD';

var cx = new edvData(session.DataSource);
var dateMin = arguments.DateDossier ? edvTools.Parse(arguments.DateDossier, EDVType.DateTime) : DateTime.Now.Date.AddDays(- DateTime.Now.DayOfWeek - (:IsSys ? 0 : 17));//Depuis le début de la semaine
var sqlArgs = [arguments.IdContact, arguments.TypeDossier, dateMin];
var sql = "SELECT LG.IdArticle, A.Name AS NameA, A.Category, LG.Unit, PC.Label AS CategoryLabel"
	+ (arguments.Clients 
		? ", C.Name AS NameC, C.City, C.ZipCode, LG.Comment, D.IdDossier"
		  + ", LG.Quantity AS QuantitySum, 1 AS NbLines"
		: ", SUM(LG.Quantity) AS QuantitySum, COUNT(LG.Line) AS NbLines")
	+ "\nFROM dossier D"
	+ " INNER JOIN lgdossier LG"
		+ " ON LG.IdContact = D.IdContact"
		+ " AND LG.IdDossier = D.IdDossier"
		+ " AND LG.TypeDossier = D.TypeDossier"
	+ " INNER JOIN article A"
		+ " ON LG.IdArticle = A.IdArticle"
	+ " LEFT JOIN parameter PC"
		+ " ON A.Category = PC.IdParam"
		+ " AND PC.Domain = 'ARTCAT'"
	+ (arguments.Clients 
		? " INNER JOIN contact C"
			+ " ON C.IdContact = D.IdClient" : "")
	+ " WHERE LG.IdContact = ?"
	+ " AND LG.TypeDossier = ?"
	+ " AND D.DateDossier >= ?"
	+ " AND D.Status = 'OK'";

	if(arguments.IdCatalogue && arguments.IdCatalogue > 0){
		sql += " AND D.TypeDossierRef = ?"
			+ " AND D.IdDossierRef = ?";
		sqlArgs.push('CTLOG');
		sqlArgs.push(arguments.IdCatalogue);
	}	

	if(!arguments.Clients)
		sql += " GROUP BY A.Category, A.Name, LG.Unit, PC.Label";
		
	sql += " ORDER BY A.Category, A.Name"
		+ (arguments.Clients 
			? ", C.Name" : "")
		;
arguments.DataTable = cx.select(sql, sqlArgs);
if (!(arguments.DataTable instanceof DataTable))
	throw new EDVException(arguments.DataTable);		
?>

<ul class="article lgDossier grouped">
<?var commentSizeLimit : int = 16;
var curCategory;
var prevArticle;
for(var dtRow in arguments.DataTable.Rows){
	var isSameArticle= prevArticle == dtRow["IdArticle"];		
		
	if(curCategory != dtRow["Category"]) {
		if (curCategory) echo("</ul></li>");
		curCategory = dtRow["Category"];
		?><li><ul class="sub"><span class="category"><?=dtRow.IsNull("CategoryLabel") ? curCategory : dtRow["CategoryLabel"]?></span><?
	}

	?><li<?=isSameArticle ? " class=\"notSameArticle\"" : ""?>>
		<span class="article"><?=isSameArticle ? "&nbsp;" : dtRow["NameA"]?></span>
		<span class="quantity"><span class="number"><?=Double(dtRow["QuantitySum"]).ToString("# ##0.##")?></span>
			<span class="unit"><?=dtRow.IsNull("Unit") ? "" : dtRow["Unit"]?></span><?
			if(arguments.Clients && dtRow["Comment"] != "" && dtRow["Comment"].Length < commentSizeLimit){
				?>&nbsp;<span class="comment"><?=edv.Type.String.ToHtml(dtRow["Comment"])?></span><?}
		?></span>
		<?if(arguments.Clients){?>
			<span class="pour">pour&nbsp;</span>
			<?if(!arguments.FormatEMail){?>
				<a class="cmde" href="#<?=dtRow["IdDossier"]?>" 
					onclick="edvDialog(this).Show('<?=..Commande.Html.Edit:Name?>','edvargs={IdContact:<?=arguments.IdContact?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=arguments.TypeDossier?>\'}', {title:this.innerHTML, width:900});return false;"><?}
			?><span class="client"><?=dtRow["NameC"]?> (<?=dtRow["ZipCode"]?> <?=dtRow["City"]?>)</span>
			<?if(!arguments.FormatEMail){
				?></a><?}
			if(dtRow["Comment"] != "" && dtRow["Comment"].Length >= commentSizeLimit){
				?><br class="clear"><span class="article">&nbsp;</span><span class="comment"><?=edv.Type.String.ToHtml(dtRow["Comment"])?></span><?}	
		} else {?>
			<span class="nbpaniers">pour <?=dtRow["NbLines"]?> panier<?=dtRow["NbLines"]<=1 ? "" : "s"?></span>
		<?}?>
	</li>
	<?
	prevArticle=dtRow["IdArticle"];
}
if (curCategory) echo("</ul></li>");
?>
</ul>
<?if(arguments.DataTable.Rows.Count>0 && !arguments.FormatEMail){
	var jso = edvjs.Extend( {}, arguments);
	jso.DataTable = undefined;
	?>
	<div class="noPrint">
	<br>
	<br>
	<center>
	<a href="?" onclick="edvDialog(this).Show('<?=:Domain?>SendEMail', 'edvargs=<?=edv.json(jso).Replace("\"","\\'").Replace("\n","").Replace("\r","")?>');return false;">
	<img src="/edv/Images/SendMsg.png" alt=""/> Cliquez ici pour recevoir la liste des commandes par message électronique
	</a>
	</center>
	</div>
<?}?>
	

]]></Value>
                                <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                                <!--.EDV.CoopEShop.DB.CmdeClient.Html.GroupedArticles.Rows._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.GroupedArticles.SendEMail-->
                            <VAR ShortName="SendEMail" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?=Rows(edvjs.Extend({IdContact : session.User.IdUser, FormatEMail : true}, arguments))?>
<?
	..User.EMail.New({
			Message : _echocode.ToString().Replace("\t","").Replace(newline," ")
			, To : session.User.EMail
			, ReplyTo : session.User.EMail
			, Subject : ..edvAppli.Title + " - regroupement des articles depuis le " + arguments.DateDossier.ToString()
		}
		, edvClient);
	..User.EMail.Send = true;
	edvServer.WaitUntil("!..User.EMail.Send", 16000, edvClient, :Object);
	_echocode = new StringBuilder();
?>
<?if(..User.EMail.Status == "Ok"){?>
Le message est bien envoyé.
<?}
else {?>
Erreur d'envoi : <?=..User.EMail.Status?>
<?}?>
]]></Value>
                                <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                                <!--.EDV.CoopEShop.DB.CmdeClient.Html.GroupedArticles.SendEMail._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.GroupedArticles._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {Details : false};
if(!arguments.MaxRows)
	arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;
if(!arguments.DateDossier)
	arguments.DateDossier = DateTime.Now.Date.AddDays(-DateTime.Now.DayOfWeek);
var rowsHtml = Rows(arguments);
?>
<span class="edvDataTable">
	<span class="title">Commandes clients</span>
	<span class="edvNavigator noPrint">
		<param class="edvProperty" name="MaxRows" value="<?=arguments.MaxRows?>"/>
		<input class="filter" size="8" value="<?=Rows.Filter?>"
			onchange="edvDataTable(this).Navigator.SetFilter(this.value)"
			onkeydown="if(/msie|Trident/i.test(navigator.userAgent) && getKeyPress(event)==13) this.onchange();"/>
		&nbsp;<a href="" onclick="edvDataTable(this).Navigator.RefreshRows();return false;"><img src="Images/Search16.png"/></a>
		&nbsp;
		<a <?if(arguments.Limit==0){?>style="display:none"<?}?> 
			class="previous" href="#" onclick="edvDataTable(this).Navigator.Previous()">&lt;&lt; précédent</a>
		<span class="current" style="display:none"><?
			if(arguments.DataTable && arguments.DataTable.Rows.Count == 0){?>
				<i>fin de liste</i>
			<?}
		?></span>
		<a <?if(arguments.DataTable && arguments.DataTable.Rows.Count < arguments.MaxRows){?>style="display:none"<?}?> 
			class="next" href="#" onclick="edvDataTable(this).Navigator.Next()">suivant &gt;&gt;</a>
		
		&nbsp;<?=..Catalogue.Html.Combo({IdFournisseur: session.User.IdFournisseur, name: "IdCatalogue", onClick: "reloadRows(this)"})?>
		<br><label style="font-size:larger"><input type="checkbox" name="Details" onclick="reloadRows(this)"> avec détails</label>
		&nbsp;&nbsp;à partir du
			<input class="jqDateTimePicker" name="DateDossier" size="9"
				onchange="reloadRows(this)" value="<?=arguments.DateDossier.ToString("dd/MM/yyyy")?>">
		&nbsp;&nbsp; avec dossiers <label style="font-size:larger"><input type="checkbox" name="Closed" checked="checked" onclick="reloadRows(this)">terminés</label>
		&nbsp;<label style="font-size:larger"><input type="checkbox" name="Suspended" onclick="reloadRows(this)">suspendus</label>
		&nbsp;<label style="font-size:larger"><input type="checkbox" name="NotValidated" checked="checked" onclick="reloadRows(this)">non validés</label>
	</span>

	<span class="edvRows" name="<?=:Domain?>Rows">
		<param class="edvProperty" name="edvArgs.DateDossier" value="<?=arguments.DateDossier.ToString("dd/MM/yyyy")?>"/>
		<param class="edvProperty" name="Edit.Title" value="Commande client"/>
		<?=rowsHtml?>
	</span>

</span>
<script>
function reloadRows(dom){
	edv.Wait.Show();
	edvDataTable(dom).Rows.edvArgs[dom.name] = edv.HTMLElement.Value(dom);
	edvDataTable(dom).Navigator.RefreshRows();
}
	$(document).ready(function() {
    $(".jqDateTimePicker").datepicker({
						dateFormat: 'dd/mm/yy',
						dayNames: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
						dayNamesMin: ['Di', 'Lu', 'Ma', 'Me', 'Je', 'Ve', 'Sa'],
						dayNamesShort: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
						firstDay: 1,
						monthNames: ['Janvier','Février','Mars','Avril','Mai','Juin','Juillet','Aout','Septembre','Octobre','Novembre','Décember'],
						monthNamesShort: ['Jan','Fév','Mar','Avr','Mai','Jun','Jui','Aou','Sep','Oct','Nov','Déc']
					});
  });

</script>



]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.List.SendEMail-->
                            <VAR ShortName="SendEMail" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?//edvInfo = :Name + " / arguments = " + edv.json(arguments);?>
<?=..Rows(edvjs.Extend({IdContact : session.User.IdUser, Details : true, FormatEMail : true}, arguments))?>
<?
	..User.EMail.New({
			Message : _echocode.ToString().Replace("\t","").Replace(newline," ")
			, To : session.User.EMail
			, ReplyTo : session.User.EMail
			, Subject : ..edvAppli.Title + " - les commandes de vos clients depuis le " + arguments.DateDossier.ToString()
		}
		, edvClient);
	..User.EMail.Send = true;
	edvServer.WaitUntil("!..User.EMail.Send", 16000, edvClient, :Object);
	_echocode = new StringBuilder();
?>
<?if(..User.EMail.Status == "Ok"){?>
Le message est bien envoyé.
<?}
else {?>
Erreur d'envoi : <?=..User.EMail.Status?>
<?}?>
]]></Value>
                                <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                                <!--.EDV.CoopEShop.DB.CmdeClient.Html.List.SendEMail._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
//if(!arguments) arguments = {};
if(!session.User) edvReturn("<a href=\"?\">Désolé, veuillez vous reconnecter.</a>");
if(!arguments.DataTable){
	var cx = new edvData(session.DataSource);
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	if(arguments.Closed === undefined) 
		arguments.Closed = true;
	if(arguments.NotValidated === undefined) 
		arguments.NotValidated = true;
		
	arguments.Details = edvTools.Parse(arguments.Details, EDVType.Boolean);
	arguments.Closed = edvTools.Parse(arguments.Closed, EDVType.Boolean);
	arguments.Suspended = edvTools.Parse(arguments.Suspended, EDVType.Boolean);
	arguments.NotValidated = edvTools.Parse(arguments.NotValidated, EDVType.Boolean);
	arguments.DateDossier = edvTools.Parse(arguments.DateDossier , EDVType.DateTime);
	
	var sqlArgs = ['CMD'];
	var sql = new StringBuilder();
	sql.Append("SELECT PS.Label AS StatusLabel"
			+ ", D.IdDossier, D.IdContact, D.TypeDossier, D.DateDossier, D.Status, D.Comment, D.IdClient"
			+ ", C.Name AS NameC, C.Address, C.City, C.ZipCode, C.Phone1, C.Phone2"
			+ ", Count(LG.Line) AS NbLines"
			+ (arguments.Details
				? ", A.Name as NameA, LG.Line, LG.Quantity, LG.Unit, LG.Comment as CommentLG" : "")
			+ " FROM dossier D"
			+ " INNER JOIN contact C"
				+ " ON D.IdClient = C.IdContact"
			+ " LEFT JOIN lgdossier LG"
				+ " ON LG.IdContact = D.IdContact"
				+ " AND LG.IdDossier = D.IdDossier"
				+ " AND LG.TypeDossier = D.TypeDossier"
			+ (arguments.Details
				? " LEFT JOIN article A"
					+ " ON A.IdArticle = LG.IdArticle" : "")
			+ " LEFT JOIN parameter PS"
				+ " ON D.Status = PS.IdParam"
				+ " AND PS.Domain = 'CMDSTA'"
			+ " WHERE D.TypeDossier = ?"
			+ " AND D.IdContact = ?"
			);
	
	if(arguments.IdContact)
		sqlArgs.push(arguments.IdContact);
	else
		sqlArgs.push(session.User.IdUser);

	if(arguments.IdCatalogue && arguments.IdCatalogue > 0){
		sql.Append(" AND D.TypeDossierRef = ?");
		sqlArgs.push('CTLOG');
		sql.Append(" AND D.IdDossierRef = ?");
		sqlArgs.push(arguments.IdCatalogue);
	}
	
	if (arguments.SQLWhere && arguments.SQLWhere != "")
		sql.Append(" AND (" + arguments.SQLWhere + ")");
	
	var status = ['OK'];
	if(arguments.Closed)
		status.push('CLOSED');
	if(arguments.Suspended)
		status.push('SUSPEND');

	if(arguments.NotValidated)
		status.push('NEW');

	if(status.length == 1)
		sql.Append(" AND (D.Status = '" + status + "'" + ")");
	else {
		sql.Append(" AND (D.Status IN (");
		for(var i : int = 0; i < status.length; i++){
			if (i>0) sql.Append(",");
			sql.Append("'" + status[i] + "'");
		}
		sql.Append("))");
	}

	if (arguments.Filter && arguments.Filter != ""){
		if (arguments.Filter.ToUpper().StartsWith("WHERE "))
			sql.Append(" AND (" + arguments.Filter.Substring(6) + ")");
		else if(int.TryParse(arguments.Filter))
			sql.Append(" AND (D.IdDossier = " + arguments.Filter + ")");
		else
			sql.Append(" AND (" + arguments.Filter + ")");
	}
	
	if(!arguments.DateDossier.Equals(DateTime.MinValue)){
		sql.Append(" AND (D.DateDossier >= ?)");
		sqlArgs.push(arguments.DateDossier);
	}
	sql.Append(" GROUP BY D.IdDossier, D.IdContact, D.TypeDossier, D.DateDossier, D.Status, D.Comment, D.IdClient"
		+ ", C.Name, C.Address, C.City, C.ZipCode"
		+ (arguments.Details
			? ", A.Name, LG.Line, LG.Quantity, LG.Unit, LG.Comment" : "")
		);

	if (arguments.OrderBy && arguments.OrderBy != "")
		sql.Append(" ORDER BY " + arguments.OrderBy);
	else
		sql.Append(" ORDER BY D.DateDossier DESC" 
			+ (arguments.Details
				? ", D.IdDossier, A.Category, A.Name, LG.Line" : "")
			);
	if(!arguments.Details)
		sql.Append(" LIMIT " + (arguments.Limit ? arguments.Limit : 0) + ", " + arguments.MaxRows);

	arguments.DataTable = cx.select(sql.ToString(), sqlArgs);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}?>
<ul class="dossiers cmdes<?=arguments.Details ? " details" : ""?>">
<?
var curDossier;
var inArticles;
for(var dtRow in arguments.DataTable.Rows){
	var addArticle = false;
	if(curDossier != dtRow["IdDossier"]) {
		if(inArticles) {
			echo("</ul></li>");	
			inArticles = false;
		}
		else if(arguments.Details && curDossier) 
			echo("</ul>");
		curDossier= dtRow["IdDossier"];
		var isNotOK = !dtRow.IsNull("Status") && dtRow["Status"] != "OK";
		var isClosed = !dtRow.IsNull("Status") && dtRow["Status"] == "CLOSED";
		?><li class="cmde <?if(isNotOK) echo(" notEnabled")?>"><?
			if(!arguments.FormatEMail){?><a class="cmde<?if(isNotOK) echo(" notEnabled")?>" href="#<?=dtRow["IdDossier"]?>" 
				onclick="edvDataTable(this).Rows.Edit('edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=dtRow["TypeDossier"]?>\'}', {title: $(this).text(), width:900});return false;"><?
			}
			?><span class="pour">pour&nbsp;</span><?=dtRow["NameC"]?> (<?
				?><?=dtRow.IsNull("Address") || dtRow["Address"] == "" ? ""
					: dtRow["Address"] + "&nbsp;"?><?
				?><?=dtRow["ZipCode"]?> <?=dtRow["City"]?><?
				?><?=dtRow.IsNull("Phone1") || dtRow["Phone1"] == "" ? "" : ", " + dtRow["Phone1"]?><?
				?><?=dtRow.IsNull("Phone2") || dtRow["Phone2"] == "" ? "" : ", " + dtRow["Phone2"]?>)<?
			if(!arguments.FormatEMail){?></a><?}
			?><br>n°<?=dtRow["IdDossier"]?> du <?=DateTime(dtRow["DateDossier"]).ToString("ddd dd MMM yyyy HH:mm")?><?
			
			if(!arguments.Details){
				if(dtRow["NbLines"] == 0) {
					?>, aucune ligne<?
				}
				else if(isNotOK) {
					?>, <span class="edvicon edvimgAlert"><?=dtRow["NbLines"] + " ligne" + (dtRow["NbLines"]==1 ? "" : "s")?></span><?
				}
				else {
					?>, <?=dtRow["NbLines"] + " ligne" + (dtRow["NbLines"]==1 ? "" : "s")?><?
				}
			}
			if(!arguments.FormatEMail)
				if((dtRow.IsNull("Status") || dtRow["Status"] == "NEW") && dtRow["NbLines"] == 0){
					?>&nbsp;<a href="" onclick="return !edvDataTable(this).Rows.DeleteRow('edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=dtRow["TypeDossier"]?>\', Status:\'DELETED\'}')"><?
						?><img src="/edv/Images/Trash.png" alt="Supprimer définitivement" width="12"></a><?
				}
				else if(!isNotOK){
					?>&nbsp;<a href="" onclick="return !edvDataTable(this).Rows.DeleteRow('edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=dtRow["TypeDossier"]?>\'}')"><?
						?><img src="Images/Cross16.png" alt="Supprimer" width="12"></a><?
				}
				else if(isClosed){
					?>&nbsp;<a href="" onclick="return !edvDataTable(this).Rows.DeleteRow('edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=dtRow["TypeDossier"]?>\', Status:\'OK\'}',{title:'Réactivation'})"><?
						?><img src="Images/Plus16.png" alt="Réactiver" width="12"></a><?
				}
				else {
					?>&nbsp;-&nbsp;<i><?=dtRow["StatusLabel"]?></i><?
				}
			if(!dtRow.IsNull("Comment") && dtRow["Comment"]!="") {
				?><pre><?=edv.Type.String.ToHtml(dtRow["Comment"])?></pre><?
			}
		if(arguments.Details)
			if(dtRow.IsNull("Line")){
				inArticles = false;
				curDossier = false;
			}
			else {
				?><ul class="sub"><?
				inArticles = true;
				addArticle = true;
			}
		if(!addArticle) 
			echo("</li>");
	}
	else
		addArticle = true;
	if(addArticle){
		?><li><?
			?><span class="article"><?=dtRow["NameA"]?></span><?
			?><span class="quantity"><?=dtRow["Quantity"].ToString("# ##0.##")?>&nbsp;&nbsp;<?=dtRow.IsNull("Unit") ? "" : dtRow["Unit"]?><?
				if(dtRow["CommentLG"] != ""){?>&nbsp;<span class="comment"><?=dtRow["CommentLG"]?></span><?}
			?></span><?
		?></li><?
	}
}
if(inArticles) 	echo("</ul></li>");	
else if(arguments.Details && curDossier) echo("</ul>");

?></ul><?
if(arguments.DataTable.Rows.Count>0 && !arguments.FormatEMail){
	var jso = edvjs.Extend( {}, arguments);
	jso.DataTable = undefined;
	?><center class="noPrint">
	<a href="?" onclick="edvDialog(this).Show('<?=List.SendEMail:Name?>',<?
		?> 'edvargs=<?=edv.json(jso).Replace("\"","\\'").Replace("\n","").Replace("\r","")?>');return false;">
	<img src="/edv/Images/SendMsg.png" alt=""/> Cliquez ici pour recevoir la liste des commandes par message électronique
	</a>
	</center><?
}?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[50]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.CmdeClient.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CmdeClient.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.DB.CmdeClient.Insert.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Checking){
	var cx = new edvData(..edvAppli.DataSource, true);
	if (..Row.IdContact==0){
		var sql = "SELECT IdContact FROM fournisseur"
				+ " WHERE IdFournisseur = ?";
		var lRows = cx.select(sql, [..Row.IdFournisseur]);
		if (!(lRows instanceof DataTable))
			throw new EDVException(lRows);
		..Row.IdContact = lRows.Rows[0][0];
	}
	var idDossier = int(DateTime.Now.ToString("yyMMdd") + "000");
	var sql = "SELECT MAX(IdDossier) FROM dossier"
		+ " WHERE IdContact = ? AND TypeDossier = ?"
		+ " AND IdDossier > ?";
	var dt = cx.select(sql, [..Row.IdContact, ..Row.TypeDossier, idDossier]);
	cx.close();
	if (dt.Rows.Count > 0 && dt.Rows[0].IsNull(0))
		..Row.IdDossier = idDossier + 1;
	else
		..Row.IdDossier = dt.Rows[0][0] + 1;
	..Row.DateDossier = DateTime.Now;
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CmdeClient.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.CmdeClient.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.ClosedDate-->
                        <VAR ShortName="ClosedDate" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[01/01/0001 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.Comment-->
                        <VAR ShortName="Comment" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.DateDossier-->
                        <VAR ShortName="DateDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[26/10/2011 16:58:51]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.IdClient-->
                        <VAR ShortName="IdClient" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[50]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.IdContact-->
                        <VAR ShortName="IdContact" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[42]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.IdDossier-->
                        <VAR ShortName="IdDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[111026005]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.IdDossierRef-->
                        <VAR ShortName="IdDossierRef" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.IdFournisseur-->
                        <VAR ShortName="IdFournisseur" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[1]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.IdUser-->
                        <VAR ShortName="IdUser" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.Status-->
                        <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.TypeDossier-->
                        <VAR ShortName="TypeDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[CMD]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.CmdeClient.Row.TypeDossierRef-->
                        <VAR ShortName="TypeDossierRef" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CmdeClient.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.CmdeClient.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CmdeClient.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM article
WHERE IdArticle = :IDARTICLE]]></Value>
                        <!--.EDV.CoopEShop.DB.CmdeClient.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CmdeClient.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO dossier (IdContact, IdDossier, TypeDossier, DateDossier, IdClient, ClosedDate, Status, IdDossierRef, TypeDossierRef, Comment, IdUser)
VALUES(:IDCONTACT, :IDDOSSIER, :TYPEDOSSIER, :DATEDOSSIER, :IDCLIENT, :CLOSEDDATE, :STATUS, :IDDOSSIERREF, :TYPEDOSSIERREF, :COMMENT, <?=..edvAppli.User.Id?>)
]]></Value>
                        <!--.EDV.CoopEShop.DB.CmdeClient.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CmdeClient.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * FROM dossier 
WHERE IdContact = :IDCONTACT
AND IdDossier = :ID

]]></Value>
                        <!--.EDV.CoopEShop.DB.CmdeClient.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.CmdeClient.SQLSelect.IDCONTACT-->
                        <VAR ShortName="IDCONTACT" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.CmdeClient.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CmdeClient.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE dossier
SET ClosedDate = :CLOSEDDATE
, Status = :STATUS
, IdDossierRef = :IDDOSSIERREF
, TypeDossierRef = :TYPEDOSSIERREF
, Comment = :COMMENT
WHERE IdContact = :IDCONTACT
AND IdDossier = :IDDOSSIER
AND TypeDossier = :TYPEDOSSIER
]]></Value>
                        <!--.EDV.CoopEShop.DB.CmdeClient.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.CmdeClient.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.CmdeClient.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.CmdeClient.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.Commande-->
                <VAR ShortName="Commande" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="IdDossier" type="xs:int" minOccurs="0" /><xs:element name="TypeDossier" type="xs:string" minOccurs="0" /><xs:element name="DateDossier" type="xs:dateTime" minOccurs="0" /><xs:element name="IdClient" type="xs:int" minOccurs="0" /><xs:element name="ClosedDate" type="xs:dateTime" minOccurs="0" /><xs:element name="Status" type="xs:string" minOccurs="0" /><xs:element name="IdDossierRef" type="xs:int" minOccurs="0" /><xs:element name="TypeDossierRef" type="xs:string" minOccurs="0" /><xs:element name="Comment" type="xs:string" minOccurs="0" /><xs:element name="IdUser" type="xs:int" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.Commande.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Commande.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Commande.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.Commande.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.Commande.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
var cx = new edvData(..edvAppli.DataSource, true);
if(arguments.Execute){
	
	if (!session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdContact + arguments.TypeDossier])
		throw new EDVException("Accès non conforme");
	session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdContact + arguments.TypeDossier]=undefined;
	
	var sql = "DELETE FROM lgdossier"
		+ " WHERE IdDossier = ?"
		+ " AND IdContact = ?"
		+ " AND TypeDossier = ?";				
	var result = cx.execute(sql, [arguments.IdDossier, arguments.IdContact, arguments.TypeDossier]);
	if (typeof(result) === "string"){
		cx.close();
		throw new EDVException(result);
	}
	var sql = "DELETE FROM dossier"
		+ " WHERE IdDossier = ?"
		+ " AND IdContact = ?"
		+ " AND TypeDossier = ?";				
	var result = cx.execute(sql, [arguments.IdDossier, arguments.IdContact, arguments.TypeDossier]);
	if (typeof(result) === "string"){
		cx.close();
		throw new EDVException(result);
	}
	echo("");
}

else {

	var sql = "SELECT D.IdDossier, D.DateDossier, D.Status, D.IdClient, F.IdFournisseur, F.Name AS NameF"
		+ ", C.Name as NameC, C.City, C.ZipCode"
		+ ", Count(LG.Line) AS NbLines"
		+ " FROM dossier D"
		+ " INNER JOIN contact C"
			+ " ON D.IdClient = C.IdContact"
		+ " INNER JOIN fournisseur F"
			+ " ON D.IdContact = F.IdContact"
		+ " LEFT JOIN lgdossier LG"
			+ " ON LG.IdContact = D.IdContact"
			+ " AND LG.IdDossier = D.IdDossier"
			+ " AND LG.TypeDossier = D.TypeDossier"
		+ " WHERE D.IdDossier = ?"
		+ " AND D.IdContact = ?"
		+ " AND D.TypeDossier = ?"
		+ " GROUP BY D.IdDossier, D.DateDossier, D.Status, D.IdClient, F.IdFournisseur, F.Name, C.Name, C.City, C.ZipCode";
	arguments.DataTable = cx.select(sql, [arguments.IdDossier, arguments.IdContact, arguments.TypeDossier]);
	if (!(arguments.DataTable instanceof DataTable)){
		cx.close();
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Dossier inconnu");
	}
	var dtRow = arguments.DataTable.Rows[0];
	session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdContact + arguments.TypeDossier]=true;
	?>
	<div class="MessageBox edvEditor">
		Etes vous sûr de vouloir supprimer le dossier n°<?=dtRow["IdDossier"]?>		
		<?if(session.User.IdFournisseur != dtRow["IdFournisseur"]){?>
			<br>à <?=dtRow["NameF"]?>
		<?}?>
		<?if(session.User.IdUser != dtRow["IdClient"]){?>
			<br>de <?=dtRow["NameC"]?> (<?=dtRow["ZipCode"]?> <?=dtRow["City"]?>) 
		<?}?>
		<br>du <?=dtRow["DateDossier"].ToString("ddd dd MMM yyyy HH:mm")?> ?
		<br><a class="submit delete" onclick="if(DossierDeleteExecute(<?=arguments.Id?>)) {edv.Wait.Show(); document.location.reload();}">
		Supprimer</a>
		<script><?/*TODO : IE ne charge pas les scripts à la volée*/?>
			function DossierDeleteExecute(id){
				var result;
				if((result = edvGetHTML("<?=:Name?>", "edvargs={IdDossier:<?=arguments.IdDossier?>, IdContact:<?=arguments.IdContact?>, TypeDossier : \'<?=arguments.TypeDossier?>\', Execute:true}"))==""
				|| typeof(result) != "string")
					return true;
				alert(result);
				return false;
			}
		</script>
	</div>
<?}
cx.close();
?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Commande.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?try {
if(!session.User){
	throw new EDVException("Client non connecté");	
}
?><param class="edvDialogOption" name="width" value="auto"/><?
if(!arguments) arguments = {};
if(!arguments.DataRow && !arguments.DataTable){
	var cx = new edvData(session.DataSource);
	var sql = "SELECT D.*, F.Name AS NameF, PS.Label AS StatusLabel, F.Message AS MessageF"
			+ ", C.Name AS NameC"
			+ ", CTLOG.Name AS NameCTLOG, CTLOG.Comment AS CommentCTLOG"
			+ ", PDClosedDay.Data AS ClosedDay, PDClosedTime.Data AS ClosedTime"
			+ " FROM dossier D"
			+ " INNER JOIN fournisseur F"
				+ " ON D.IdContact = F.IdContact"
			+ " INNER JOIN contact C"
				+ " ON D.IdClient = C.IdContact"
			+ " LEFT JOIN dossier CTLOG"
				+ " ON D.IdContact = CTLOG.IdContact"
				+ " AND D.IdDossierRef = CTLOG.IdDossier"
				+ " AND CTLOG.TypeDossier = 'CTLOG'"
			+ " LEFT JOIN parameter PS"
				+ " ON D.Status = PS.IdParam"
				+ " AND PS.Domain = 'CMDSTA'"
				
			+ " LEFT JOIN paramdossier PDClosedDay"
				+ " ON PDClosedDay.IdDossier = CTLOG.IdDossier"
				+ " AND PDClosedDay.TypeDossier = 'CTLOG'"
				+ " AND PDClosedDay.IdParam = 'CLOSED.DAY'"
			+ " LEFT JOIN paramdossier PDClosedTime"
				+ " ON PDClosedTime.IdDossier = CTLOG.IdDossier"
				+ " AND PDClosedTime.TypeDossier = 'CTLOG'"
				+ " AND PDClosedTime.IdParam = 'CLOSED.TIME'"
			;
	if (arguments.IdDossier){
		sql += " WHERE D.IdDossier = ?"
				+ " AND D.IdContact = ?"
				+ " AND D.TypeDossier = ?";				
		arguments.DataTable = cx.select(sql, [arguments.IdDossier, arguments.IdContact, "CMD"]);
	}
	else {
		sql += " WHERE D.IdClient = ?"
			+ " AND D.TypeDossier = ?"
			+ " ORDER BY DateDossier DESC"
			+ " LIMIT 0,1";				
		arguments.DataTable = cx.select(sql, [..edvAppli.User.Id, "CMD"]);
	}
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucun enregistrement.");		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
var comment = "";

var isClosed = !dtRow.IsNull("Status") && dtRow["Status"]=="CLOSED";
if(!isClosed && !dtRow.IsNull("MessageF")) comment=dtRow["MessageF"];
if(!dtRow.IsNull("CommentCTLOG")){
	if (comment != "") comment += newline;
	comment += dtRow["CommentCTLOG"];
}

var isToLateToChange : Boolean = false;
var closedDay = -1;
var closedTime = -1;
if(!dtRow.IsNull("ClosedDay")){
	closedDay = int(dtRow["ClosedDay"]);
	if(dtRow.IsNull("ClosedTime") || !dtRow["ClosedTime"].Contains(":"))
		closedTime = 24*60;
	else {
		closedTime = dtRow["ClosedTime"].split(":");
		closedTime = int(closedTime[0]) * 60 + int(closedTime[1]);
	}
}

isToLateToChange = (dtRow["IdClient"] == session.User.IdUser && closedDay>=0);
if(isToLateToChange){
	isToLateToChange = ((DateTime.Now.DayOfWeek == closedDay)
			&& DateTime.Now.AddMinutes(-1*closedTime).Date.Equals(DateTime.Now.Date)
		|| int(DateTime.Now.DayOfWeek) > closedDay)
		&& ((int(dtRow["DateDossier"].DayOfWeek) == closedDay 
			&& (dtRow["DateDossier"].Minute + dtRow["DateDossier"].Hour*60) < closedTime)
		|| int(dtRow["DateDossier"].DayOfWeek) < closedDay);
}
if(isToLateToChange){?>
	<p class="edvError">Il est trop tard pour changer cette commande.
	<br/>Vous pouvez créez une nouvelle commande complémentaire.
	<br/>Envoyez un message au fournisseur pour lui indiquer vos modifications.
	</p>
<?}
else if(closedDay >= 0){
	if(closedDay == 0) closedDay = 7;
	if (comment != "") comment += newline;
	comment += "Passez vos commandes jusqu'au " + DateTime.Parse(closedDay + "/01/2007").ToString("dddd")
			+ (closedTime>=0 ? " " + int(closedTime/60) + "h" + (closedTime % 60).ToString("00") : "");
}?>

<form method="post" action="?" class="EDVVisual edvEditor dossier cmde <?=dtRow["Status"]?>">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<legend>Commande <?=dtRow["IdDossier"]?> <?
if(session.User.IdUser == dtRow["IdClient"]){
	?>à <a href="" onclick="edvDialog.Show('<?=..Contact.Html.Edit:Name?>','edvargs={Id:<?=dtRow["IdContact"]?>}',{title:this.innerHTML},'edvEditor');return false;">
	<?=dtRow["NameF"]?></a><?}
else{
	?>de <a href="" onclick="edvDialog.Show('<?=..Contact.Html.Edit:Name?>','edvargs={Id:<?=dtRow["IdClient"]?>}',{title:this.innerHTML},'edvEditor');return false;">
	<?=dtRow["NameC"]?></a>
<?}
?> - <?=dtRow["DateDossier"].ToString("dddd dd MMMM yyyy HH:mm")?></legend>
<?=..Parameter.Html.Combo({Domain : 'CMDSTA', Id : dtRow["STATUS"], name : "Row.Status", className : "status"})?>
<?if(!dtRow.IsNull("NameCTLOG")){?>
	<span class="Catalogue"><?=dtRow["NameCTLOG"]?></span>
<?}?>
<?if(comment != ""){
	?><pre class="messageF"><?=edv.Type.String.ToHtml(comment)?></pre><?}
?>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdDossier" value="<?=dtRow["IdDossier"]?>"/>
<input type="hidden" name="Row.TypeDossier" value="<?=dtRow["TypeDossier"]?>"/>
<input type="hidden" name="Row.IdDossierRef" value="<?=dtRow["IdDossierRef"]?>"/>
<input type="hidden" name="Row.TypeDossierRef" value="<?=dtRow["TypeDossierRef"]?>"/>
<input type="hidden" name="Row.IdContact" value="<?=dtRow["IdContact"]?>"/>
<input type="hidden" name="Row.IdClient" value="<?=dtRow["IdClient"]?>"/>
Commentaire : <textarea name="Row.Comment" cols="70" rows="2" maxlength="255" onchange="CommandeSubmitCheck(this); "><?=edv.Type.String.ToHtml(dtRow["Comment"])?></textarea>
<input type="hidden" name="Update" value="true"/>
<a href="#<?=dtRow["IdDossier"]?>" class="submit save" style="text-decoration: none;"
	onclick="CommandeSubmitCheck(this); return false;">&nbsp;</a>
<?if (dtRow["Status"]=="CLOSED"){?>
	<div class="closed">Dossier terminé</div><?
}
?>
</fieldset>
</form><?
if(!arguments.FormatEMail){
	?><?=:js?><?
}
?><span class="edvRows" name="<?=:Domain?>Rows">
	<?=..LgCommande.Html.Rows({
				Id : dtRow["IdDossier"]
				, IdContact : dtRow["IdContact"]
				, TypeDossier : dtRow["TypeDossier"]
				, Status : (isToLateToChange ? "CLOSED" : dtRow["Status"])
				, OnlyInLines : arguments.OnlyInLines})?>
</span><?
if((!isClosed) && dtRow["IdClient"] == session.User.IdUser){
	if (dtRow["Status"] == "OK"){
		?><br><center><i>Les lignes vertes sont commandées</i></center><?
	}
	?><div class="status <?=dtRow["Status"]?>"><?
		if(!isToLateToChange){
			if(dtRow["Status"] == "OK" || dtRow["Status"] == "NEW"){
			?><a href="" onclick="return CommandeValidate(<?=dtRow["IdDossier"]?>,<?=dtRow["IdContact"]?>,<?=dtRow["IdClient"]?>);">
				<img src="Images/Valider.png" alt=""><?
			}
			if(dtRow["Status"] == "NEW") echo("Cliquez ici pour valider la nouvelle commande");
			else echo(dtRow["StatusLabel"]);
			if(dtRow["Status"] == "OK" || dtRow["Status"] == "NEW"){
			?></a><?
			}
		}
		else {
			?><p class="edvError">Il est trop tard pour changer cette commande.
			<br/>Vous pouvez créez une nouvelle commande complémentaire.
			<br/>Envoyez un message au fournisseur pour lui indiquer vos modifications.
			</p><?
		}
	?></div><?
}
}
catch(err){
	if(_echocode) _echocode = new StringBuilder();
?>
<p class="edvError">Désolé, une erreur est survenue.</p>
<a href="">cliquez ici pour rafraichir la page</a>
<?}?>

]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Commande.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function CommandeSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	edv.Wait.Show();
	edvSubmit(form);
	edv.Wait.Hide();
	return true;
}

function CommandeValidate(idDossier, idContact, idClient){
	edvDialog.Show("<?=..Validate:Name?>"
			, "edvargs={IdDossier:" + idDossier + ",IdContact:" + idContact + ",IdClient:" + idClient + ",TypeDossier:'CMD'}"
			, {
				title : "La commande est bien enregistrée"
				, close : function(){
					edv.Wait.Show();
					document.location.href="<?=..edvAppli.Url?>";
				}
			});
	return false;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Commande.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Commande.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
if(!arguments.MaxRows)
	arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;

var rowsHtml = Rows(arguments);
?>
<span class="edvDataTable">
	<span class="title">Mes commandes</span>
	<span class="edvNavigator">
		<a href="" onclick="LoadPageInner('<?=New:Name?>');return false;"><img src="Images/Plus16.png" alt="Nouveau"/></a>
		&nbsp;
		<param class="edvProperty" name="MaxRows" value="<?=arguments.MaxRows?>"/>
		<input class="filter" size="8" value="<?=Rows.Filter?>"
			onchange="edvDataTable(this).Navigator.SetFilter(this.value)"
			onkeydown="if(/msie|Trident/i.test(navigator.userAgent) && getKeyPress(event)==13) this.onchange();"/>
		&nbsp;<a href="" onclick="edvDataTable(this).Navigator.RefreshRows();return false;"><img src="Images/Search16.png"/></a>
		&nbsp;
		<a <?if(arguments.Limit==0){?>style="display:none"<?}?> 
			class="previous" href="#" onclick="edvDataTable(this).Navigator.Previous()">&lt;&lt; précédent</a>
		<span class="current" style="display:none"><?
			if(arguments.DataTable.Rows.Count == 0){?>
				<i>fin de liste</i>
			<?}
		?></span>
		<a <?if(arguments.DataTable.Rows.Count < arguments.MaxRows){?>style="display:none"<?}?> 
			class="next" href="#" onclick="edvDataTable(this).Navigator.Next()">suivant &gt;&gt;</a>
		
	</span>

	<div class="edvRows" name="<?=:Domain?>Rows">
		<param class="edvProperty" name="Edit.Title" value="Commande"/>
		<?=rowsHtml?>
	</div>

</span>


]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Commande.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if (!arguments) arguments={};
?>
<form class="EDVVisual" id="frmCommandeInsert" method="post" action="" autocomplete="off">
<fieldset><legend>Nouvelle commande</legend>
<input type="hidden" name="edvroot" value="<?=edvSender.Parent.Domain?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.Comment" value=""/>
<input type="hidden" name="Row.IdContact" value="0"/>
<input type="hidden" name="Row.IdClient" value="<?=..edvAppli.User.Id?>"/>
<input type="hidden" name="Row.TypeDossier" value="CMD"/>
<input type="hidden" name="Row.TypeDossierRef" value="CTLOG"/>
<input type="hidden" name="Row.IdDossierRef" value="0"/>
<input type="hidden" name="Row.IdFournisseur" value="0"/>
<input type="hidden" name="Row.Status" value="NEW"/>
<pre><h2>Auprès de qui souhaitez-vous passer commande ? </h2></pre>

<?
var args = [session.User.IdContact, session.User.IdContact];
/*var sql = "SELECT D.*, IdFournisseur, F.Name AS NameF"
		+ " FROM dossier D"
		+ " INNER JOIN fournisseur F"
			+ " ON D.IdContact = F.IdContact";
*/
var cx = new edvData(session.DataSource);
var sql = "SELECT D.`IdContact`, D.`IdDossier`, D.`TypeDossier`, D.`DateDossier`, D.`Name`, D.`IdClient`, D.`ClosedDate`, D.`Status`"
	+ ", D.IdDossierRef, D.`TypeDossierRef`, D.`Comment`, D.`IdUser`, D.`UpdateDate`"
	+ ", F.IdFournisseur, F.Name AS NameF, F.NbCmdes AS NbCmdesF, C.ZipCode, C.City"
	+ ", fc.FriendType, IFNULL(d.Visibility, '') AS Visibility"
	+ ", COUNT(Cmde.IdDossier) AS NbCmdes"
	+ " FROM dossier D"
	+ " INNER JOIN "
		+ " (SELECT Count(IdDossier) AS NbCmdes, MAX(DateDossier) AS LastDate, IdFournisseur, fournisseur.Name, fournisseur.IdContact"
			+ " FROM fournisseur"
			+ " LEFT JOIN dossier Cmde"
				+ " ON Cmde.IdContact = fournisseur.IdContact"
				+ " AND Cmde.IdClient = ?"
				+ " AND Cmde.TypeDossier = 'CMD'"
			+ " WHERE fournisseur.Enabled = 1"
			+ " GROUP BY IdFournisseur, fournisseur.Name, fournisseur.IdContact"
			+ ") F"
		+ " ON D.IdContact = F.IdContact"
		//+ " AND D.IdDossier = F.IdDossier"
	+ " INNER JOIN contact C"
		+ " ON C.IdContact = F.IdContact"
	+ " INNER JOIN vw_fourn_contacts fc"
		+ " ON F.IdFournisseur = fc.IdFournisseur"
		+ " AND fc.IdFriend = ?"
	+ " LEFT JOIN dossier Cmde"
		+ " ON Cmde.IdContact = d.IdContact"
		+ " AND Cmde.IdDossierRef = d.IdDossier"
		+ " AND Cmde.TypeDossierRef = 'CTLOG'"
		+ " AND Cmde.IdClient = ?"
		+ " AND Cmde.TypeDossier = 'CMD'"
;
sql += " WHERE D.TypeDossier = 'CTLOG'"
	+ " AND D.ClosedDate = '0001-01-01'";

args.push(session.User.IdUser);
args.push(session.User.IdUser);

sql += " GROUP BY D.`IdContact`, D.`IdDossier`, D.`TypeDossier`, D.`DateDossier`, D.`Name`, D.`IdClient`, D.`ClosedDate`, D.`Status`"
	+ ", D.IdDossierRef, D.`TypeDossierRef`, D.`Comment`, D.`IdUser`, D.`UpdateDate`"
	+ ", F.IdFournisseur, F.Name, F.NbCmdes, C.ZipCode, C.City"
	+ ", fc.FriendType, IFNULL(d.Visibility, '')";
	
sql += " ORDER BY LastDate DESC, F.Name, D.Name";
//edvInfo = sql;
arguments.DataTable = cx.select(sql, args);
if (!(arguments.DataTable instanceof DataTable))
	throw new EDVException(arguments.DataTable);
?>
<script>
	<?if (arguments.DataTable.Rows.Count == 1){?>
		
	<?}?>
</script>
<ul class="edvRows selectCatalogue edvExpanderRoot">
<?var curFournisseur;
for(var dtRow in arguments.DataTable.Rows){
	if(! edv.Coopeshop.friendVisible( dtRow["FriendType"], dtRow["Visibility"] ))
		continue;
	if(curFournisseur != dtRow["IdFournisseur"]) {
		if (curFournisseur) echo("</ul>");
		curFournisseur = dtRow["IdFournisseur"];
		
		var fName = "";
		if(!dtRow.IsNull("ZipCode") && dtRow["ZipCode"])
			fName += dtRow["ZipCode"].Substring(0,2) + " - ";
		
		fName += dtRow["NameF"];

		//fName += ", FriendType = " + dtRow["FriendType"];

		var nbCmdes = dtRow.IsNull("NbCmdesF") ? 0 : dtRow["NbCmdesF"];

		?><li><span class="edvExpander <?=nbCmdes ? "expanded" : ""?> fournisseur"><?
			?><span class="edvicon imgEDVTypeUser"></span></span><?
			?><a onclick="edvDialog.Show('<?=..Fournisseur.Html.Edit:Name?>','edvargs={Id:<?=curFournisseur?>}',{title:this.innerHTML},'edvEditor'); return false;"><?
			?><?=fName?></a><?
			if(nbCmdes){
				?><span style="margin-left:1em; font-size:smaller;"><?
					?><?=nbCmdes + " commande" + (nbCmdes > 1 ? "s" : "")?><?
					?> passé<?=nbCmdes > 1 ? "s" : ""?><?
				?></span><?
			}
			?><ul class="sub edvExpanderDestination"<?=nbCmdes ? "" : " style=\"display: none;\""?>><?
	}
	arguments.DataRow = dtRow;
	
	nbCmdes = dtRow.IsNull("NbCmdes") ? 0 : dtRow["NbCmdes"];
	?><li><a class="edvicon <?=nbCmdes ? "edvimgNext" : ""?>" name="<?=dtRow["IdContact"]?>|<?=dtRow["IdDossier"]?>|<?=dtRow["IdFournisseur"]?>"<?
		?> onclick="CommandeInsertSubmit(this); return false;"><?=dtRow["Name"]?></a><?
		if(nbCmdes){
			?><span class="edvicon edvimgPrevious" style="margin-left:1em; font-size:smaller;"><?=nbCmdes?> commande<?=nbCmdes > 1 ? "s" : ""?></span><?
		}
		?></li><?
}
if (curFournisseur) echo("</ul>");
?>
</ul>

<input type="hidden" name="Insert" value="true"/>
</fieldset>

</form>
<?=:js?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Commande.Html.New.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function CommandeInsertSubmit(link, waitNoHide){
	var form = link;
	
	while(form.tagName != "FORM") form = form.parentNode;
	var ids=$(link).attr("name").split("|");
	
	$(form).find("input[name='Row.IdContact']").val(ids[0]);
	$(form).find("input[name='Row.IdDossierRef']").val(ids[1]);
	$(form).find("input[name='Row.IdFournisseur']").val(ids[2]);
	
	edv.Wait.Show();
	var result = edvSubmit(form);
	if(result){
		alert(result);
		edv.Wait.Hide();
		return false;
	}
	LoadPageInner("<?=..Edit:Name?>");

	alert("Pour ajouter des articles, il suffit de saisir une quantité et de cliquer sur le + en vert, en fin de ligne.\nLes lignes sur fond vert sont déjà ajoutées à la commande.\r\n\r\nA la fin de la saisie de vos articles, pensez à valider la commande par le lien en bas de page.\nVous pouvez revenir modifier cette commande même après validation.");

	if(!waitNoHide) edv.Wait.Hide();
	return true;
}

edv.Wait.Hide();
$(document).ready(function(){
	$("#frmCommandeInsert").edvExpander();
});
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Commande.Html.New.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Commande.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments.DataTable){
	var cx = new edvData(session.DataSource);
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	var sqlArgs = ['CMD'];
	var sql = "SELECT PS.Label AS StatusLabel, F.Name AS NameF"
			+ ", D.IdDossier, D.IdContact, D.TypeDossier, D.DateDossier, D.Status, D.IdClient, D.Comment"
			+ ", CTLOG.Name AS NameCTLOG"
			+ ", Count(LG.Line) AS NbLines"
			+ ", PDClosedDay.Data AS ClosedDay, PDClosedTime.Data AS ClosedTime"
			+ " FROM dossier D"
			+ " INNER JOIN fournisseur F"
				+ " ON D.IdContact = F.IdContact"
			+ " LEFT JOIN lgdossier LG"
				+ " ON LG.IdContact = D.IdContact"
				+ " AND LG.IdDossier = D.IdDossier"
				+ " AND LG.TypeDossier = D.TypeDossier"
			+ " LEFT JOIN dossier CTLOG"
				+ " ON CTLOG.IdContact = D.IdContact"
				+ " AND CTLOG.IdDossier = D.IdDossierRef"
				+ " AND CTLOG.TypeDossier = 'CTLOG'"
			+ " LEFT JOIN parameter PS"
				+ " ON D.Status = PS.IdParam"
				+ " AND PS.Domain = 'CMDSTA'"
				
			+ " LEFT JOIN paramdossier PDClosedDay"
				+ " ON PDClosedDay.IdDossier = CTLOG.IdDossier"
				+ " AND PDClosedDay.TypeDossier = 'CTLOG'"
				+ " AND PDClosedDay.IdParam = 'CLOSED.DAY'"
			+ " LEFT JOIN paramdossier PDClosedTime"
				+ " ON PDClosedTime.IdDossier = CTLOG.IdDossier"
				+ " AND PDClosedTime.TypeDossier = 'CTLOG'"
				+ " AND PDClosedTime.IdParam = 'CLOSED.TIME'"

			+ " WHERE D.TypeDossier = ?"
			+ " AND D.IdClient = ?"
			;
	if (arguments.IdClient)
		sqlArgs.push(arguments.IdClient);
	else
		sqlArgs.push(..edvAppli.User.Id);

	if(arguments.IdContact){
		sql += " AND IdContact = ?";
		sqlArgs.push(arguments.IdContact);
	}
	
	if (arguments.SQLWhere && arguments.SQLWhere != "")
		sql += " AND (" + arguments.SQLWhere + ")";
		
	if (arguments.Filter && arguments.Filter != ""){
		if (arguments.Filter.ToUpper().StartsWith("WHERE "))
			sql += " AND (" + arguments.Filter.Substring(6) + ")";
		else
			sql += " AND (" + arguments.Filter + ")";
	}
	sql += " GROUP BY PS.Label, F.Name"
		+ ", D.IdDossier, D.IdContact, D.TypeDossier, D.DateDossier, D.Status, D.IdClient, D.Comment"
		+ ", CTLOG.Name"
		+ ", PDClosedDay.Data, PDClosedTime.Data"
		;
				
	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY " + arguments.OrderBy;
	else
		sql += " ORDER BY D.DateDossier DESC";
	sql += " LIMIT " + arguments.Limit + ", " + arguments.MaxRows;
	
	arguments.DataTable = cx.select(sql, sqlArgs);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}
?><ul class="dossiers cmdes"><?

for(var dtRow in arguments.DataTable.Rows){
	var status = dtRow.IsNull("Status") ? "" : dtRow["Status"];
	var isClosed = !dtRow.IsNull("Status") && dtRow["Status"]=="CLOSED";
	
	var isToLateToChange : Boolean;
	var closedDay = -1;
	var closedTime = -1;
	if(!dtRow.IsNull("ClosedDay")){
		closedDay = int(dtRow["ClosedDay"]);
		if(dtRow.IsNull("ClosedTime") || !dtRow["ClosedTime"].Contains(":"))
			closedTime = 24*60;
		else {
			closedTime = dtRow["ClosedTime"].split(":");
			closedTime = int(closedTime[0]) * 60 + int(closedTime[1]);
		}
	}
	
	isToLateToChange = (dtRow["IdClient"] == session.User.IdUser && closedDay>=0);
	if(isToLateToChange){
		isToLateToChange = ((DateTime.Now.DayOfWeek == closedDay)
				&& DateTime.Now.AddMinutes(-1*closedTime).Date.Equals(DateTime.Now.Date)
			|| int(DateTime.Now.DayOfWeek) > closedDay)
			&& ((int(dtRow["DateDossier"].DayOfWeek) == closedDay
				&& (dtRow["DateDossier"].Minute + dtRow["DateDossier"].Hour*60) < closedTime)
			|| int(dtRow["DateDossier"].DayOfWeek) < closedDay);
	}
		?><li class="cmde <?=status?> <?=dtRow["NbLines"] == 0 ? "NoLine" : "WithLines"?>"><?
			?><span><a class="cmde<?if(isClosed) echo(" notEnabled")?>" href="#<?=dtRow["IdDossier"]?>"<?
				?> onclick="edvDataTable(this).Rows.Edit('edvargs={IdContact:<?=dtRow["IdContact"]?><?
					?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=dtRow["TypeDossier"]?>\'}'<?
					?>, {title: $(this).text(), width:'auto'});return false;"><?
			?><?=dtRow["DateDossier"].ToString("dddd dd MMMM yyyy à HH:mm")?><?
			?>, n°<?=dtRow["IdDossier"]?></a><?
			?><br>&nbsp;&nbsp; à <?=dtRow["NameF"]?> (<?=dtRow["NameCTLOG"]?>)<?
			?></span><?
			?><br/>&nbsp;&nbsp;-&nbsp;&nbsp;<?=dtRow["NbLines"] == 0 ? "aucune ligne" : dtRow["NbLines"] + " ligne" + (dtRow["NbLines"]==1 ? "" : "s")?><?
			if(!isClosed){
				?><a onclick="if(<?=isToLateToChange?>) alert('Il est trop tard pour supprimer cette commande');<?
							?> else !edvRows(this).DeleteRow('edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=dtRow["TypeDossier"]?>\'}'); return false;"<?
					?> title="supprimer ce dossier"><?
					?><img src="Images/Cross16.png" alt="Supprimer" width="12" style="margin-left:1.5em;margin-right:1em;"></a>&nbsp;<?
				if(status == "NEW"){
					?><span class="edvicon edvimgAlert status pointer"<?
					?> onclick="edvDataTable(this).Rows.Edit('edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>, TypeDossier:\'<?=dtRow["TypeDossier"]?>\'}', {title: $(this).text(), width:'auto'});return false;"><?
					?><?=dtRow["StatusLabel"]?>, à valider</span><?
				}
				else if(status != "OK"){
					?><span class="status"><?=dtRow["StatusLabel"]?></span><?
				?>&nbsp;<?}
			}
			if(!dtRow.IsNull("Comment") && dtRow["Comment"]!="") {
				?><pre><?=edv.Type.String.ToHtml(dtRow["Comment"])?></pre><?
			}
			?></li><?
}
?>
</ul>



]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Commande.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.Commande.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[20]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Commande.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Html.SendEMail-->
                        <VAR ShortName="SendEMail" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) throw new EDVException("Arguments inconnus");
if(!session.User || !session.User.EMail)
	throw new EDVException("Désolé, l'envoi du message a échoué.\r\nVeuillez vous reconnecter et consulter votre dernière commande.");
try {
	var cx = new edvData(session.DataSource);
	var sql = "SELECT D.*, F.Name AS NameF, C.EMail AS EMailF, PS.Label AS StatusLabel, F.Message AS MessageF"
			+ ", CTLOG.Name AS NameCTLOG, CTLOG.Comment AS CommentCTLOG"
			+ " FROM dossier D"
			+ " INNER JOIN fournisseur F"
				+ " ON D.IdContact = F.IdContact"
			+ " INNER JOIN contact C"
				+ " ON C.IdContact = F.IdContact"
			+ " LEFT JOIN dossier CTLOG"
				+ " ON D.IdContact = CTLOG.IdContact"
				+ " AND D.IdDossierRef = CTLOG.IdDossier"
				+ " AND CTLOG.TypeDossier = 'CTLOG'"
			+ " LEFT JOIN parameter PS"
				+ " ON D.Status = PS.IdParam"
				+ " AND PS.Domain = 'CMDSTA'";
	if (arguments.IdDossier){
		sql += " WHERE D.IdDossier = ?"
				+ " AND D.IdContact = ?"
				+ " AND D.TypeDossier = ?";				
		arguments.DataTable = cx.select(sql, [arguments.IdDossier, arguments.IdContact, "CMD"]);
	}
	else {
		sql += " WHERE D.IdClient = ?"
			+ " AND D.TypeDossier = ?"
			+ " ORDER BY DateDossier DESC"
			+ " LIMIT 0,1";				
		arguments.DataTable = cx.select(sql, [..edvAppli.User.Id, "CMD"]);
	}
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucun enregistrement.");		
	arguments.DataRow = arguments.DataTable.Rows[0];
	var dtRow = arguments.DataRow;
	var comment = "";
	var copyTo = "";
	var isClosed = !dtRow.IsNull("Status") && dtRow["Status"]=="CLOSED";
	if(!isClosed && !dtRow.IsNull("MessageF")) comment=dtRow["MessageF"];
	if(!dtRow.IsNull("CommentCTLOG") && dtRow["CommentCTLOG"] != ""){
		if (comment != "") comment += newline;
		comment += dtRow["CommentCTLOG"];
	}
	?><div style="font-family:Arial"><?
	if(dtRow["Status"] == "NEW"){
		copyTo = "admin@coopeshop.net";
		?>Attention : cette commande n'est pas définitivement enregistrée.
		<br>Votre fournisseur pourrait ne pas la prendre en compte.
		<br>
		<br>
		<?
	}
	?>Votre commande n°<?=dtRow["IdDossier"]?> à <b><?=dtRow["NameF"]?></b> du <?=dtRow["DateDossier"].ToString("dddd dd MMMM yyyy HH:mm")?>
	<?if(!dtRow.IsNull("NameCTLOG")){?>
	<br><i><?=dtRow["NameCTLOG"]?></i>
	<?}?>
	<?if(comment != ""){
		?><pre class="messageF"><?=edv.Type.String.ToHtml(comment)?></pre><?}
	?>
	<?if(!dtRow.IsNull("Comment") && dtRow["Comment"]!=""){?>
		<br>Commentaire : <pre><?=edv.Type.String.ToHtml(dtRow["Comment"])?></pre>
	<?}?>
	<span class="edvRows" name="<?=:Domain?>Rows">
		<?=..LgCommande.Html.Rows({Id : dtRow["IdDossier"], IdContact : dtRow["IdContact"], TypeDossier : dtRow["TypeDossier"], Status : "CLOSED", FormatEMail : true})?>
	</span>
	Avec tous nos remerciements.
	</div>
	<?
	..User.EMail.New({
			Message : _echocode.ToString().Replace("\t","").Replace(newline," ")
			, To : session.User.EMail
			, CC : copyTo
			, ReplyTo : dtRow["EMailF"]
			, Subject : ..edvAppli.Title + " - votre commande " + dtRow["IdDossier"] + " à " + dtRow["NameF"] + " - " + dtRow["DateDossier"].ToString("dddd dd MMMM yyyy HH:mm")
			}
		, edvClient);
	..User.EMail.Send = true;
	edvServer.WaitUntil("!..User.EMail.Send", 10000, edvClient, :Object);
	//reset des echo()
	_echocode = new StringBuilder();
	
	if(dtRow["Status"] == "NEW"){
		?>Attention : cette commande n'est pas définitivement enregistrée.
		<br>Votre fournisseur pourrait ne pas la prendre en compte
		<br>L'administrateur est prévenu.
		<br>
		<br><?
	}
	if(..User.EMail.Status == "Ok"){?>
	Le message est bien envoyé.
	<?}
	else {?>
	Erreur d'envoi du message : <?=..User.EMail.Status?>
	<?}
}
catch(err){
	edvError = :Name + "\t" + err;
	edvReturn("Désolé, l'envoi du message a échoué.\r\nVeuillez vous reconnecter et consulter votre dernière commande.");
}?>
]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Commande.Html.SendEMail._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Html.Validate-->
                        <VAR ShortName="Validate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<? try {
var sql = "UPDATE dossier"
		+ " SET Status = 'OK'"
		+ ", UpdateDate = CURRENT_TIMESTAMP"
		+ " WHERE IdContact = ?"
		+ " AND IdDossier = ?"
		+ " AND TypeDossier = ?"
		;
	var cx = new edvData(session.DataSource);
	var r = cx.execute(sql, [arguments.IdContact, arguments.IdDossier, arguments.TypeDossier]);
	if(r == 0) {
		edvError = :Name + " - attention : aucune modification par le update";
		?><p style="text-align:center; color:red; font-weight:bold;font-size:large">
		Attention : la validation est à contrôler en consultant votre dernière commande</p><?
	}
?>
<center>
<a href="?" onclick="edvDialog.Show('<?=SendEMail:Name?>', 'edvargs=<?=edvjs.json(arguments).Replace("\"","\\'").Replace("\n","").Replace("\r","")?>');return false;">
<img src="/edv/Images/SendMsg.png" alt=""/> Cliquez ici pour recevoir une copie
<br>de la commande par message électronique
</a>
</center>
<?}
catch(err){
	edvError = :Name + "\t" + err;
	?><p class="edvError">Désolé, une erreur est survenue.
	<br/>
	</p>
	<a href=".EDV.CoopEShop.edvsess?Visual.Inner.@=.EDV.CoopEShop.DB.Commande.Html.Edit&Visual.Menu.Arbre.MenuSelected=0">Afficher la dernière commande</a>
<?}?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Commande.Html.Validate._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.Commande.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Commande.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.DB.Commande.Insert.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Checking){
	var rowChildren = ..Row:GetChildren();
	var options = {
		IdContact : rowChildren["IdContact"].Value
		, IdFournisseur : rowChildren["IdFournisseur"].Value
		, TypeDossier : rowChildren["TypeDossier"].Value
		, Connexion : ..edvAppli.DataSource
	};
	rowChildren["IdDossier"].Value = ..Dossier.NewId(options, edvClient);
	rowChildren["IdContact"].Value = options.IdContact;
	rowChildren["DateDossier"].Value = DateTime.Now;
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Commande.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Commande.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.Commande.Row.ClosedDate-->
                        <VAR ShortName="ClosedDate" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[01/01/0001 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.Comment-->
                        <VAR ShortName="Comment" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Commande.Row.DateDossier-->
                        <VAR ShortName="DateDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[18/12/2013 23:31:13]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.IdClient-->
                        <VAR ShortName="IdClient" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[380]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.IdContact-->
                        <VAR ShortName="IdContact" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[16]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.IdDossier-->
                        <VAR ShortName="IdDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[131218001]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.IdDossierRef-->
                        <VAR ShortName="IdDossierRef" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[131215001]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.IdFournisseur-->
                        <VAR ShortName="IdFournisseur" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[8]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.IdUser-->
                        <VAR ShortName="IdUser" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.Status-->
                        <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[OK]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.TypeDossier-->
                        <VAR ShortName="TypeDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[CMD]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Commande.Row.TypeDossierRef-->
                        <VAR ShortName="TypeDossierRef" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[CTLOG]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Commande.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.Commande.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Commande.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM article
WHERE IdArticle = :IDARTICLE]]></Value>
                        <!--.EDV.CoopEShop.DB.Commande.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Commande.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO dossier (IdContact, IdDossier, TypeDossier, DateDossier, IdClient, ClosedDate, Status, IdDossierRef, TypeDossierRef, Comment, IdUser)
VALUES(:IDCONTACT, :IDDOSSIER, :TYPEDOSSIER, :DATEDOSSIER, :IDCLIENT, :CLOSEDDATE, :STATUS, :IDDOSSIERREF, :TYPEDOSSIERREF, :COMMENT, <?=..edvAppli.User.Id?>)
]]></Value>
                        <!--.EDV.CoopEShop.DB.Commande.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Commande.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * FROM dossier 
WHERE IdContact = :IDCONTACT
AND IdDossier = :ID

]]></Value>
                        <!--.EDV.CoopEShop.DB.Commande.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Commande.SQLSelect.IDCONTACT-->
                        <VAR ShortName="IDCONTACT" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Commande.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Commande.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE dossier
SET ClosedDate = :CLOSEDDATE
, Status = :STATUS
, IdDossierRef = :IDDOSSIERREF
, TypeDossierRef = :TYPEDOSSIERREF
, Comment = :COMMENT
WHERE IdContact = :IDCONTACT
AND IdDossier = :IDDOSSIER
AND TypeDossier = :TYPEDOSSIER
]]></Value>
                        <!--.EDV.CoopEShop.DB.Commande.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Commande.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.Commande.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Commande.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.Compte-->
                <VAR ShortName="Compte" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="NumCompte" type="xs:int" minOccurs="0" /><xs:element name="Nom" type="xs:string" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.Compte.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Compte.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Compte.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.Compte.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Compte.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Compte.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.Compte.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Compte.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM <?=Table?>
WHERE KEYINDEX = :KEYINDEX
AND KEYDATE = :KEYDATE]]></Value>
                        <!--.EDV.CoopEShop.DB.Compte.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Compte.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?//Démo?>
INSERT INTO <?=Table?> (REF_OPERATEUR, SCRIPT)
VALUES(1, 'edvInfo = "ok " + DateTime.Now.ToString()')
]]></Value>
                        <!--.EDV.CoopEShop.DB.Compte.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Compte.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * FROM <?=Table?>]]></Value>
                        <!--.EDV.CoopEShop.DB.Compte.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Compte.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE <?=Table?>
SET KEYINDEX = -1
WHERE KEYINDEX = :KEYINDEX
AND KEYDATE = :KEYDATE]]></Value>
                        <!--.EDV.CoopEShop.DB.Compte.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Compte.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.Compte.Table-->
                    <VAR ShortName="Table" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                        <Value><![CDATA[compte]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Compte.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.Contact-->
                <VAR ShortName="Contact" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="IdContactRef" type="xs:int" minOccurs="0" /><xs:element name="ContactType" type="xs:string" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="EMail" type="xs:string" minOccurs="0" /><xs:element name="Phone1" type="xs:string" minOccurs="0" /><xs:element name="Phone2" type="xs:string" minOccurs="0" /><xs:element name="Address" type="xs:string" minOccurs="0" /><xs:element name="ZipCode" type="xs:string" minOccurs="0" /><xs:element name="City" type="xs:string" minOccurs="0" /><xs:element name="Enabled" type="xs:short" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.Contact.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Contact.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.Contact.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.Contact.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
var cx = new edvData(session.DataSource, true);
if(arguments.Execute){
	if(arguments.Id == 0)
		throw new EDVException("Identifiant incorrecte");
	var sql = "DELETE FROM contact"
			+ " WHERE IdContact = ? OR IdContactRef = ?";
	var result = cx.execute(sql, [arguments.Id, arguments.Id]);
	if (typeof(result) === "string")
		throw new EDVException(result);
	sql = "DELETE FROM user"
			+ " WHERE IdUser = ?";
	result = cx.execute(sql, [arguments.Id]);
	sql = "DELETE FROM friend"
			+ " WHERE IdFriend = ? OR IdContact = ?";
	result = cx.execute(sql, [arguments.Id, arguments.Id]);
	cx.close();
	echo("");
}
else {
	var sql = "SELECT C.*, D.IdDossier, F.IdFournisseur"
			+ " FROM contact C"
			+ " LEFT JOIN dossier D"
				+ " ON D.IdClient = C.IdContact"
			+ " LEFT JOIN fournisseur F"
				+ " ON F.IdContact = C.IdContact"
			+ " WHERE C.IdContact = ?"
			+ " LIMIT 1"
			;
	arguments.DataTable = cx.select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count==0)
		throw new EDVException("Contact inconnu");
	if(!arguments.DataTable.Rows[0].IsNull("IdDossier"))
		throw new EDVException("Ce contact est utilisé dans les dossiers<br>et ne peut pas être supprimé.");
	if(!arguments.DataTable.Rows[0].IsNull("IdFournisseur"))
		throw new EDVException("Ce contact est un fournisseur<br>et ne peut pas être supprimé.");
	var dtRow = arguments.DataTable.Rows[0];
	?>
	<div class="MessageBox edvEditor">
		Etes vous sûr de vouloir supprimer le contact <?=dtRow["Name"]?> ?
		<br><a class="submit delete" href="?" onclick="return ContactDeleteExecute(<?=arguments.Id?>)">
		Supprimer</a>
		<script>
			function ContactDeleteExecute(id){
				var result;
				if((result = edvGetHTML("<?=:Name?>", "edvargs={Id:" + id + ", Execute:true}"))==""
				|| typeof(result) != "string")
					return true;
				alert(result);
				return false;
			}
			edvDialog(this).Options.width=900;
		</script>
	</div>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Contact.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!session || !session.User) {
	//throw new EDVException("Session non initialisée (" + edvClient.ClientID + ")");
}
else {
if(!arguments) arguments = {};
if(!arguments.DataRow && !arguments.DataTable){
	if (!arguments.Id) arguments.Id = ..SQLSelect.ID;
	var cx = new edvData(session.DataSource);
	var sql = "SELECT DISTINCT C.*, U.IdUser, ami.IdFriend, ami.FriendType, ptf.Label as ptfLabel"
			+ " FROM contact C"
			+ " LEFT JOIN contact CRef"
				+ " ON C.IdContactRef = CRef.IdContact"
			+ " LEFT JOIN user U"
				+ " ON (C.IdContact = U.IdUser OR CRef.IdContact = U.IdUser)"
			+ " LEFT JOIN friend ami"
				+ " ON (C.IdContact = ami.IdFriend AND ami.IdContact = ?)"
			+ " LEFT JOIN parameter ptf"
				+ " ON ptf.Domain = 'FriendType'"
				+ " AND ami.FriendType = ptf.IdParam"

			+ " WHERE C.IdContact = ? OR C.IdContactRef = ?"
			+ " ORDER BY C.ContactType";
	//edvInfo = sql;
	arguments.DataTable = cx.select(sql, [ session.User.IdContact, arguments.Id, arguments.Id ]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
var editable = (session.User.Rights[".Admin"]
	|| session.User.IdUser == dtRow["IdContact"]
	|| session.User.IdUser == dtRow["IdContactRef"]
	|| dtRow.IsNull("IdUser"));
var readonly = !editable ? " readonly=\"readonly\"" : "";
?>
<param class="edvDialogOption" name="width" value="500"/>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdContact" value="<?=dtRow["IdContact"]?>"/>
<input type="hidden" name="Row.IdContactRef" value="<?=dtRow["IdContactRef"]==0 ? dtRow["IdContact"] : dtRow["IdContactRef"]?>"/>
<input type="hidden" name="Row.ContactType" value="<?=dtRow["ContactType"]?>"/>
<input type="hidden" name="Row.Enabled" value="<?=dtRow["Enabled"]?>"/>

<label>Nom : </label><input name="Row.Name" size="33" value="<?=dtRow["Name"]?>"<?=readonly?>/>
<br style="clear:both"/>
<label>EMail : </label><input name="Row.Email" size="33" value="<?=dtRow["Email"]?>"<?=readonly?>/>
<img class="pointer" src="/edv/Images/SendMsg.png" alt="envoyer un message"
	onclick="edvDialog.Show('<?=..User.EMail.Edit:Name?>', 'edvargs={To:\'' + $(this).prev('input').val() + '\'}', {title : 'Envoi d\'un message', width:700}, 'edvEditor')"/>
<br/>
<label>Téléphones : </label><input name="Row.Phone1" size="15" value="<?=dtRow["Phone1"]?>"<?=readonly?>/>
<br/><label>&nbsp;</label><input name="Row.Phone2" size="15" value="<?=dtRow["Phone2"]?>"<?=readonly?>/>
<br/>
<label>Adresse : </label><textarea name="Row.Address" rows="2" cols="31"<?=readonly?>><?=dtRow["Address"]?></textarea>
<br/>
<label>Code postal : </label><input name="Row.ZipCode" size="6" value="<?=dtRow["ZipCode"]?>"<?=readonly?>>
<br/>
<label>Commune : </label><input name="Row.City" size="33" value="<?=dtRow["City"]?>"<?=readonly?>>
<br/>
<br/>
<?if(session.User.IdContact == dtRow["IdContact"]){//SELF
?><input type="hidden" name="Row.IsFriend" value="0"/><?
} else {
?><label><span class="edvicon edvimgStar<?=dtRow.IsNull("IdFriend") ? "Not" : ""?>"
	onmousedown="var $this = $(this).toggleClass('edvimgStarNot').toggleClass('edvimgStar')<?
		?>, $input = $this.children('input:first')<?
		?>, $select = $this.parent().nextAll('select:first');<?
		?>if(/edvimgStarNot/.test(this.className)){<?
			?> $input.attr('value', '0');<?
			?> $select.attr('disabled', 'disabled');<?
		?>}<?
		?>else {<?
			?> $input.attr('value', '1');<?
			?> $select.removeAttr('disabled');<?
		?>}<?
	?>"><?
	?><input type="hidden" name="Row.IsFriend" value="<?=dtRow.IsNull("IdFriend") ? "0" : "1"?>"/>Relation : </span></label><?
	?><?=HTML.SELECT({
		"name" : "Row.FriendType"
		, "value" : dtRow.IsNull("FriendType") ? "" : dtRow["FriendType"]
		, "Values" : new edvData(edv.Coopeshop.dataSource).select("SELECT IdParam, Label FROM parameter WHERE Domain = ?"
			+ " ORDER BY SortIndex, Label", ["FriendType"])
		, "disabled" : dtRow.IsNull("IdFriend") ? "disabled" : undefined
	}, edvSender, edvClient)?>
<br/><br/>
<?}
if(editable){
	if(dtRow.IsNull("IdUser")) {
		if(dtRow["IdContactRef"] == dtRow["IdContact"] || dtRow["IdContactRef"] == 0){
			?><small><a href="#<?=dtRow["IdContact"]?>" class="info add"
					onclick="edvDialog().Show('<?=..DB.User.Html.New:Name?>', 'edvArgs={Id:<?=dtRow["IdContact"]?>}', {title:'Nouvel utilisateur courant', Refresh:edvDialog(this)}, 'edvEditor');return false;">
				Créer l'utilisateur</a></small>
			<?}
	}
	else {
		?><a href="#<?=dtRow["IdUser"]?>" class="info user"
			onclick="edvDialog().Show('<?=..DB.User.Html.Edit:Name?>', 'edvArgs={Id:<?=dtRow["IdUser"]?>}', {title:'Utilisateur <?=dtRow["IdUser"]?>', Refresh:edvDialog(this)}, 'edvEditor');return false;">
		&nbsp;</a><?
	}		
}
if(editable){?>
	<input type="hidden" name="Update" value="true"/>
<?}
else{?>
	<input type="hidden" name="ValidateFriend" value="true"/>
<?}
?><a href="#<?=arguments.Id?>" class="submit save" onclick="ContactSubmitCheck(this); return false;">Enregistrer</a>
<?
if(dtRow["IdContactRef"] != 0 && dtRow["IdContactRef"] != dtRow["IdContact"]){
	echo("&nbsp;");
	?><a href="#ref" class="info contactRef"
		onclick="edvDialog(this).Show('<?=:Name?>','edvargs={Id:<?=dtRow["IdContactRef"]?>}', {title:this.innerHTML}, 'edvEditor');return false;">
		...</a>
	<?	
}
if(arguments.DataTable && arguments.DataTable.Rows && arguments.DataTable.Rows.Count>1){
	for(var i = 1; i < arguments.DataTable.Rows.Count; i++){
		dtRow= arguments.DataTable.Rows[i];
		echo("&nbsp;");
		?><a href="#<?=dtRow["ContactType"]?>" class="info contactSub"
			onclick="edvDialog(this).Show('<?=:Name?>','edvargs={Id:<?=dtRow["IdContact"]?>}', {title:this.innerHTML}, 'edvEditor');return false;">
			<?=dtRow["ContactType"]=="" ? dtRow["IdContact"] : dtRow["ContactType"]?></a>
		
	<?}
}?>
</fieldset>
</form>
<?=:js?>
<?}?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Contact.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function ContactSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	if($(form).find('input[name="Row.Email"]')[0].value == ""){
		alert("L'adresse email est obligatoire");
		return false;
	}
	if($(form).find('input[name="Row.Name"]')[0].value == ""){
		alert("La saisie de votre nom est obligatoire");
		return false;
	}
	edv.Wait.Show();
	edvSubmit(form);
	edvDialog(form).Close(); 
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Contact.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Contact.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
if(!arguments.MaxRows)
	arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;

var rowsHtml = Rows(arguments);
if(!arguments.DataTable)
	echo(rowsHtml);
else {
?>
<span class="edvDataTable">
	<span class="title">Contacts</span>
	<span class="edvNavigator">
		<a href="" onclick="edvDataTable(this).Navigator.NewRow();return false;"><img src="Images/Plus16.png" alt="Nouveau"/></a>
		&nbsp;
		<param class="edvProperty" name="MaxRows" value="<?=arguments.MaxRows?>"/>
		<input class="filter" size="8" value="<?=Rows.Filter?>"
			onchange="edvDataTable(this).Navigator.SetFilter(this.value)"
			onkeydown="if(/msie|Trident/i.test(navigator.userAgent) && getKeyPress(event)==13) this.onchange();"/>
		&nbsp;<a href="" onclick="edvDataTable(this).Navigator.RefreshRows();return false;"><img src="Images/Search16.png"/></a>
		&nbsp;
		<a <?if(arguments.Limit==0){?>style="display:none"<?}?> 
			class="previous" href="#" onclick="edvDataTable(this).Navigator.Previous()">&lt;&lt; précédent</a>
		<span class="current" style="display:none"><?
			if(arguments.DataTable.Rows.Count == 0){?>
				<i>fin de liste</i>
			<?}
		?></span>
		<a <?if(arguments.DataTable.Rows.Count < arguments.MaxRows){?>style="display:none"<?}?> 
			class="next" href="#" onclick="edvDataTable(this).Navigator.Next()">suivant &gt;&gt;</a>
		
	</span>

	<span class="edvRows" name="<?=:Domain?>Rows">
		<param class="edvProperty" name="Edit.Title" value="Contact"/>
		<?=rowsHtml?>
	</span>
	<?if(arguments.DataTable.Rows.Count > arguments.MaxRows / 2){
	?><span class="edvNavigator">
		<a href="" onclick="edvDataTable(this).Navigator.NewRow();return false;"><img src="Images/Plus16.png" alt="Nouveau"/></a>
		&nbsp;
		<param class="edvProperty" name="MaxRows" value="<?=arguments.MaxRows?>"/>
		<input class="filter" size="8" value="<?=Rows.Filter?>"
			onchange="edvDataTable(this).Navigator.SetFilter(this.value)"
			onkeydown="if(/msie/i.test(navigator.userAgent) && getKeyPress(event)==13) this.onchange();">
		&nbsp;<a href="" onclick="edvDataTable(this).Navigator.RefreshRows();return false;"><img src="Images/Search16.png"/></a>
		&nbsp;
		<a <?if(arguments.Limit==0){?>style="display:none"<?}?> 
			class="previous" href="#" onclick="edvDataTable(this).Navigator.Previous()">&lt;&lt; précédent</a>
		<span class="current" style="display:none"><?
			if(arguments.DataTable.Rows.Count == 0){?>
				<i>fin de liste</i>
			<?}
		?></span>
		<a <?if(arguments.DataTable.Rows.Count < arguments.MaxRows){?>style="display:none"<?}?> 
			class="next" href="#" onclick="edvDataTable(this).Navigator.Next()">suivant &gt;&gt;</a>
		
	</span><?
	}
	?>
</span>
<?}?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Contact.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
if(arguments.EMail){
	var dt = edv.Coopeshop.cx().select("SELECT IdContact, Name"
		+ " FROM contact"
		+ " WHERE EMail = ?", [ arguments.EMail ]);
	if(dt.Rows.Count > 0){
		edvReturn(Edit({ "Id" : dt.Rows[0][0] }, edvClient));
	}
}
if(!arguments.EMail){
?>
<param class="edvDialogOption" name="width" value="500"/>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<label>EMail : </label><input name="Row.EMail" size="34" value="<?=arguments.EMail ? arguments.EMail : ""?>">
<br/>
<br/>
<a class="submit save" onclick="ContactInsertCheckEMail(this); return false;">Continuer...</a>
</fieldset>

</form>
<?}
else {
	if(!arguments.Name)
		arguments.Name = (arguments.EMail).Split("@")[0];
?>
<param class="edvDialogOption" name="width" value="500"/>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdContact" value="-1"/>
<input type="hidden" name="Row.IdContactRef" value="<?=arguments.IdContactRef ? arguments.IdContactRef : 0?>"/>
<input type="hidden" name="Row.ContactType" value="<?=arguments.ContactType ? arguments.ContactType : ""?>"/>
<input type="hidden" name="Row.Enabled" value="true"/>

<label>EMail : </label><input name="Row.Email" size="34" value="<?=arguments.EMail?>" disabled="disabled"
	onchange="ContactInsertCheckEMail(this);">
<br/>
<label>Nom : </label><input name="Row.Name" size="34" value="<?=arguments.Name ? arguments.Name : ""?>">
<br/>
<label>Téléphones : </label><input name="Row.Phone1" size="14" value="">
<input name="Row.Phone2" size="14" value="">
<br/>
<label>Adresse : </label><textarea name="Row.Address" rows="2" cols="30"></textarea>
<br/>
<label>Code postal : </label><input name="Row.ZipCode" size="6" value="">
<br/>
<label>Commune : </label><input name="Row.City" size="34" value="">

<br/>
<input type="hidden" name="Row.IsFriend" value="true"/>
<input type="hidden" name="Row.FriendType" value=""/>

<input type="hidden" name="Insert" value="true"/>
<a class="submit save" onclick="ContactInsertSubmit(this); return false;">Enregistrer</a>
</fieldset>

</form>
<?}?>

<?=:js(arguments, edvClient)?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Contact.Html.New.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function ContactInsertSubmit(form){
	while(form.tagName != "FORM") form = form.parentNode;
	if($(form).find('input[name="Row.Email"]')[0].value == ""){
		alert("La saisie de votre adresse mail est obligatoire");
		return false;
	}
	if($(form).find('input[name="Row.Name"]')[0].value == ""){
		alert("La saisie de votre nom est obligatoire");
		return false;
	}

	edv.Wait.Show();
	edvSubmit(form);
	edvDialog(form).Close();
	edv.Wait.Hide();
	return true;
}
function ContactInsertCheckEMail(form){
	while(form.tagName != "FORM") form = form.parentNode;
	var $email = $(form).find('input[name="Row.EMail"]');
	if(!$email.val().indexOf("@") > 0){
		return true;
	}

	edv.Wait.Show();
	$(form)
		.parents(".ui-dialog:first")
			.find(".ui-dialog-title")
				.html("Contact existant")
				.end()
			.end()
		.replaceWith(edvGetCode("<?=edvTools.ParentName(me.Name)?>", "edvArgs.EMail=" + $email.val()));
	edv.Wait.Hide();
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Contact.Html.New.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Contact.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments.DataTable){
	var cx = new edvData(session.DataSource);
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	var sql = new StringBuilder();
	sql.AppendLine("SELECT C.IdContact, C.IdContactRef, C.ContactType, C.Name, C.EMail"
			+ ", C.Phone1, C.Phone2, C.Address, C.ZipCode, C.City, C.Enabled"
			+ ", U.IdUser, U.Enabled AS EnabledU"
			+ ", COUNT(CMD.IdDossier) AS NbCmdes"
			+ ", MAX(CMD.DateDossier) AS DateCmde"
			+ ", ami.IdFriend, ami.FriendType, ptf.Label AS ptfLabel"
			+ " FROM contact C");
	//ami	
	if(session.User.Rights && session.User.Rights[".Admin"] == 15)
		sql.AppendLine(" LEFT");
	if(session.User.IdFournisseur)
		sql.AppendLine(" JOIN vw_fourn_contacts ami"
			+ " ON ami.IdFournisseur = " + session.User.IdFournisseur
			+ " AND ami.IdFriend = c.IdContact"
			+ " AND NOT(ami.FriendType IN ('BAN', 'ZZZ'))"
		);
	else {
		sql.AppendLine(" JOIN friend ami"
			+ " ON ami.IdFriend = " + session.User.IdContact
			+ " AND ami.IdContact = c.IdContact"
		);
		sql.AppendLine(" AND NOT(ami.FriendType IN ('PUBLIC', 'ZZZ', 'BAN'))");
	}
	sql.AppendLine(" LEFT JOIN parameter ptf"
		+ " ON ptf.Domain = 'FriendType'"
		+ " AND ami.FriendType = ptf.IdParam");
	//
	sql.AppendLine(
			" LEFT JOIN user U"
				+ " ON C.IdContact = U.IdUser"
			+ " LEFT JOIN dossier CMD"
				+ " ON CMD.IdClient = U.IdUser"
				+ " AND CMD.TypeDossier = 'CMD'"
			+ " LEFT JOIN fournisseur F"
				+ " ON F.IdContact = CMD.IdContact");

	if (arguments.SQLWhere && arguments.SQLWhere != "")
		sql.AppendLine(" WHERE (" + arguments.SQLWhere + ")");
	else
		sql.AppendLine(" WHERE (C.IdContactRef = C.IdContact OR IFNULL(C.IdContactRef, 0) = 0)");

	if (arguments.Filter && arguments.Filter != "")
		if (arguments.Filter.ToUpper().StartsWith("WHERE "))
			sql.AppendLine(" " + arguments.Filter);
		else if(int.TryParse(arguments.Filter))
			sql.AppendLine(" AND (C.IdContact = " + arguments.Filter + " OR C.ZipCode = '" + arguments.Filter + "')");
		else
			sql.AppendLine(" AND (C.Name LIKE '%" + arguments.Filter + "%' OR C.EMail LIKE '%" + arguments.Filter + "%')");

	if (session.User.IdFournisseur
	&& (arguments.ofFournisseur
	|| !session.User.Rights[".Admin"] || (session.User.Rights[".Admin"] == 0)))
		sql.AppendLine(" AND (F.IdFournisseur = " + session.User.IdFournisseur
		 + " OR NOT IFNULL(ami.FriendType, 'ZZZ') IN ('PUBLIC', 'ZZZ', 'BAN'))");

	sql.AppendLine(" GROUP BY C.IdContact, C.IdContactRef, C.ContactType, C.Name, C.EMail"
			+ ", C.Phone1, C.Phone2, C.Address, C.ZipCode, C.City, C.Enabled"
			+ ", U.IdUser, U.Enabled, ami.IdFriend, ami.FriendType, ptf.Label");

	//edvInfo = me.Name + " " + sql.ToString();

	if (!session.User.Rights[".Admin"] || (session.User.Rights[".Admin"] == 0))
		sql.AppendLine(" HAVING NOT ami.IdFriend IS NULL OR COUNT(CMD.IdDossier) > 0");
			
	if (arguments.OrderBy && arguments.OrderBy != "")
		sql.AppendLine(" ORDER BY " + arguments.OrderBy);
	else
		sql.AppendLine(" ORDER BY C.Name, C.ContactType");

	sql.AppendLine(" LIMIT " + arguments.Limit + ", " + arguments.MaxRows);
	//throw new EDVException(sql.ToString());
	arguments.DataTable = cx.select(sql.ToString());
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	//edvInfo = me.Name + " : " + edvjs.json(sql);
}
?><ul>
<?for(var dtRow in arguments.DataTable.Rows){
	if (arguments.SelectDialog){
	?>	<li>	<a class="<?=dtRow.IsNull("IdUser") ? "contact" : "user"?>" href="#<?=dtRow["IdContact"]?>"<?
				?> onclick="edvDialog(this).Select(<?=dtRow["IdContact"]?>, $(this).text()); return false;"><?
			?><b><?=dtRow["Name"]?></b> (<?=dtRow["EMail"]?>, <?=dtRow["ZipCode"]?> <?=dtRow["City"]?>)</a></li><?
		?></li><?
	}
	else {
	?>	<li>	<a class="<?=dtRow.IsNull("IdUser") ? "contact" : "user";?><?=!dtRow["Enabled"] || !dtRow["EnabledU"] ? " notEnabled" : ""?>" href="#<?=dtRow["IdContact"]?>"<?
				?> onclick="edvDataTable(this).Rows.Edit('edvargs={Id:<?=dtRow["IdContact"]?>}', {title:$(this).text()});return false;"><?
			?><b><?=dtRow["Name"]?></b> (<?=dtRow["EMail"]?>, <?=dtRow["ZipCode"]?> <?=dtRow["City"]?>)<?
			if(!dtRow.IsNull("IdFriend")){
				?><span class="edvicon edvimgStar<?=dtRow.IsNull("FriendType") || dtRow["FriendType"] == "CUST" ? "Not" : ""?>"><?
					?><?=dtRow.IsNull("ptfLabel") ? "" : dtRow["ptfLabel"]?></span><?
			}
			?></a><?
			if(session.User.Rights[".Admin"] && (session.User.Rights[".Admin"] == 15)){
				?><a class="edvicon edvimgDelete" href="" onclick="return !edvRows(this).DeleteRow('edvargs={Id:<?=dtRow["IdContact"]?>}')"><?
				?></a><?
			}
			if(dtRow["NbCmdes"] > 0){
				?><span class="notEnabled"><?=dtRow["NbCmdes"]?> commande(s) (<?=DateTime(dtRow["DateCmde"]).ToString("d MMM yyyy")?>)</span><?
			}
		?></li><?
}	}

if(arguments.DataTable.Rows.Count == 0){
?>	<li><i>aucun résultat</i></li>
<?}
?></ul>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Contact.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.Contact.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[30]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Contact.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.Contact.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Contact.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.DB.Contact.Insert.LastId-->
                        <VAR ShortName="LastId" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                            <Value><![CDATA[380]]></Value>
                            <!--.EDV.CoopEShop.DB.Contact.Insert.LastId.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Changing)
{
	..Row.IdContact = ..;
	if(..Row.IdContactRef<=0) ..Row.IdContactRef = ..;
}
null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Insert.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Checking) {
	var dt = edv.Coopeshop.cx().select("SELECT IdContact, Name"
		+ " FROM contact"
		+ " WHERE EMail = ?", [ ..Row.Email ]);
	if(dt.Rows.Count > 0){
		..Error = "L'adresse email est déjà connue pour " + dt.Rows[0][1];
		.. = false;
	}
}
null;
]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Contact.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Contact.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.Contact.Row.Address-->
                        <VAR ShortName="Address" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[30 rue du crêt de la roche]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.City-->
                        <VAR ShortName="City" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[Chevinay]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.ContactType-->
                        <VAR ShortName="ContactType" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Contact.Row.Data-->
                        <VAR ShortName="Data" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Contact.Row.Domain-->
                        <VAR ShortName="Domain" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Contact.Row.EMail-->
                        <VAR ShortName="EMail" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[ktyduc@free.fr]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.Enabled-->
                        <VAR ShortName="Enabled" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Value><![CDATA[True]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.FriendType-->
                        <VAR ShortName="FriendType" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[NEIG]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.IdContact-->
                        <VAR ShortName="IdContact" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[74]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.IdContactRef-->
                        <VAR ShortName="IdContactRef" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[74]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.IdParam-->
                        <VAR ShortName="IdParam" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Contact.Row.IsFriend-->
                        <VAR ShortName="IsFriend" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Value><![CDATA[True]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.Label-->
                        <VAR ShortName="Label" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Contact.Row.Name-->
                        <VAR ShortName="Name" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[Catherine Ducroux]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.Phone1-->
                        <VAR ShortName="Phone1" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[04 74 70 30 44]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.Phone2-->
                        <VAR ShortName="Phone2" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[06 76 09 65 04]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.Row.Value-->
                        <VAR ShortName="Value" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Contact.Row.ValueType-->
                        <VAR ShortName="ValueType" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Contact.Row.ZipCode-->
                        <VAR ShortName="ZipCode" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[69210]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Contact.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.Contact.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Contact.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM contact
WHERE IdContact = :IDCONTACT


]]></Value>
                        <!--.EDV.CoopEShop.DB.Contact.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Contact.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO contact (IdContactRef, ContactType, Name, EMail, Phone1, Phone2, Address, ZipCode, City, Enabled)
VALUES(:IDCONTACTREF, :CONTACTTYPE, :NAME, LCASE(:EMAIL), :PHONE1, :PHONE2, :ADDRESS, :ZIPCODE, :CITY, :ENABLED)

]]></Value>
                        <!--.EDV.CoopEShop.DB.Contact.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Contact.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT *
FROM contact C
WHERE IdContact = :ID
]]></Value>
                        <!--.EDV.CoopEShop.DB.Contact.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[2]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Contact.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Contact.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE contact
SET IdContactRef = :IDCONTACTREF
, Name = :NAME
, EMail = LCASE(:EMAIL)
, Phone1 = :PHONE1
, Phone2 = :PHONE2
, Address = :ADDRESS
, ZipCode = :ZIPCODE
, City = :CITY
WHERE IdContact = :IDCONTACT


]]></Value>
                        <!--.EDV.CoopEShop.DB.Contact.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Contact.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Contact.ValidateFriend-->
                    <VAR ShortName="ValidateFriend" ClassName="" AutoReset="1" Securized="0" ReadOnly="1" ValueType="Boolean">
                        <Script><![CDATA[Update || Insert]]></Script>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.DB.Contact.ValidateFriend.OnChanging-->
                        <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Changing) {
	if(!session.User)
		throw new EDVException(me.Name + " : session incorrecte");
	var cx = new edvData(edv.Coopeshop.dataSource, true);
	var idUser = session.User.IdContact;
	var idFriend = ..Row.IdContact;
	var friendType = ..Row.FriendType;
	if(..Row.IsFriend){
		var r = cx.execute("UPDATE friend SET FriendType = ? WHERE (IdFriend = ? AND IdContact = ?) OR (IdFriend = ? AND IdContact = ?)"
			, [friendType, idUser, idFriend, idFriend, idUser]);
		//edvInfo = me.Name + " : " + r;
		if(r == 0){
			r = cx.execute("INSERT friend (FriendType, IdFriend, IdContact)"
				+ " VALUES(?, ?, ?), (?, ?, ?)"
				, [friendType, idUser, idFriend, friendType, idFriend, idUser]);
			//edvInfo = me.Name + " : " + r;
		}
	}
	else {
		var r = cx.execute("DELETE FROM friend WHERE (IdFriend = ? AND IdContact = ?) OR (IdFriend = ? AND IdContact = ?)"
			, [idUser, idFriend, idFriend, idUser]);
		//edvInfo = me.Name + " : " + r;
	}
	cx.close();
}
null;]]></Script>
                        </VAR>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.DB.DataTable-->
                <VAR ShortName="DataTable" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="NumCompte" type="xs:int" minOccurs="0" /><xs:element name="Nom" type="xs:string" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.DataTable.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.DataTable.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.DataTable.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.DataTable.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.DataTable.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.DataTable.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.DataTable.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.DataTable.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM <?=Table?>
WHERE KEYINDEX = :KEYINDEX
AND KEYDATE = :KEYDATE]]></Value>
                        <!--.EDV.CoopEShop.DB.DataTable.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.DataTable.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?//Démo?>
INSERT INTO <?=Table?> (REF_OPERATEUR, SCRIPT)
VALUES(1, 'edvInfo = "ok " + DateTime.Now.ToString()')
]]></Value>
                        <!--.EDV.CoopEShop.DB.DataTable.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.DataTable.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * FROM <?=Table?>]]></Value>
                        <!--.EDV.CoopEShop.DB.DataTable.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.DataTable.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE <?=Table?>
SET KEYINDEX = -1
WHERE KEYINDEX = :KEYINDEX
AND KEYDATE = :KEYDATE]]></Value>
                        <!--.EDV.CoopEShop.DB.DataTable.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.DataTable.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.DataTable.Table-->
                    <VAR ShortName="Table" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                        <Value><![CDATA[compte]]></Value>
                        <!--.EDV.CoopEShop.DB.DataTable.Table.Create-->
                        <VAR ShortName="Create" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <!--.EDV.CoopEShop.DB.DataTable.Table.Create.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Changing){
	var cx = new edvData(..Source, true);
	var sqls = edvcode(SQL:Object).Split(";");
	for(var i : int = 0; i < sqls.Length; i++)
		if (sqls[i].length > 4){
			var result = cx.execute(sqls[i]);
			if (typeof(result)==="string") {
				edvInfo = result;
				break;
			}
	}
	cx.close();
}
null;]]></Script>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.DataTable.Table.Create.SQL-->
                            <VAR ShortName="SQL" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[CREATE TABLE <?=..Table?>
(	KEYDATE DATE DEFAULT SYSDATE NOT NULL, 
	KEYINDEX NUMBER(2) DEFAULT 0 NOT NULL, 
	VARIABLE NVARCHAR2(250), 
	VALUE VARCHAR2(4000),
	SCRIPT VARCHAR2(4000),
	REF_OPERATEUR NUMBER(11) NOT NULL,
	KEEPTHIS NUMBER(1) DEFAULT NULL
);
CREATE INDEX IDX_<?=..Table?>_KEYDATE
	ON <?=..Table?> (KEYDATE) 
;
CREATE INDEX IDX_<?=..Table?>_KEYINDEX
	ON <?=..Table?> (KEYINDEX) 
;

]]></Value>
                                <!--.EDV.CoopEShop.DB.DataTable.Table.Create.SQL._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.DataTable.Table.Drop-->
                        <VAR ShortName="Drop" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <!--.EDV.CoopEShop.DB.DataTable.Table.Drop.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Changing){
	var cx = new edvData(..Source);
	var result = cx.execute(edvcode(SQL:Object));
	if (typeof(result)==="string") edvInfo = result;
}
null;]]></Script>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.DataTable.Table.Drop.SQL-->
                            <VAR ShortName="SQL" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[DROP TABLE <?=..Table?>]]></Value>
                                <!--.EDV.CoopEShop.DB.DataTable.Table.Drop.SQL._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.DataTable.Table.Exists-->
                        <VAR ShortName="Exists" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Value><![CDATA[True]]></Value>
                            <!--.EDV.CoopEShop.DB.DataTable.Table.Exists.Check-->
                            <VAR ShortName="Check" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                                <!--.EDV.CoopEShop.DB.DataTable.Table.Exists.Check.OnChanging-->
                                <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                    <Script><![CDATA[when(..:Changing || ..Create:Changed || ..Drop:Changed){
	var cx = new edvData(..Source);
	var result = cx.execute(edvcode(..SQL:Object));
	if (result instanceof DataTable)
		... = result.Rows.Count>0;
	else {
		edvError = result;
		... = false;
	}
}
null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.DataTable.Table.Exists.SQL-->
                            <VAR ShortName="SQL" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[SELECT 1 
FROM TAB
WHERE TNAME = '<?=(..Table).ToUpper()?>']]></Value>
                                <!--.EDV.CoopEShop.DB.DataTable.Table.Exists.SQL._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.DataTable.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.Dossier-->
                <VAR ShortName="Dossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Domain">
                    <!--.EDV.CoopEShop.DB.Dossier.NewId-->
                    <VAR ShortName="NewId" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[function(options){//options = {IdContact, IdFournisseur, TypeDossier, Connexion}
	//edvServer.Info = ".EDV.CoopEShop.DB.Dossier.NewId .EDV.CoopEShop.DB.Dossier.NewId .EDV.CoopEShop.DB.Dossier.NewId " + edvjs.json(options);
	if (options.IdContact == undefined || options.IdContact == 0)
		if(options.IdFournisseur){
			var sql = "SELECT IdContact FROM fournisseur"
					+ " WHERE IdFournisseur = ?";
			var lRows = (new edvData(options.Connexion)).select(sql, [options.IdFournisseur]);
			if (!(lRows instanceof DataTable))
				throw new EDVException(lRows);
			options.IdContact = lRows.Rows[0][0];
		}
	options.IdDossier = int(DateTime.Now.ToString("yyMMdd") + "000");
	var sql = "SELECT MAX(IdDossier) FROM dossier"
		+ " WHERE TypeDossier = ?"
		+ " AND IdDossier > ?";
	var args = [options.TypeDossier, options.IdDossier];
	if(options.IdContact !== undefined){
		sql += " AND IdContact = ?";
		args.push(options.IdContact);
	}

	var dt = (new edvData(options.Connexion)).select(sql, args);
	if (dt.Rows.Count > 0 && dt.Rows[0].IsNull(0))
		options.IdDossier = options.IdDossier + 1;
	else
		options.IdDossier = dt.Rows[0][0] + 1;
//	edvServer.Info = "options.IdDossier = options.IdDossier = " + options.IdDossier;
	return options.IdDossier;
}]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.DB.EMailAuto-->
                <VAR ShortName="EMailAuto" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="MySQL" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="MySQL"><xs:complexType><xs:sequence><xs:element name="MsgId" type="xs:int" minOccurs="0" /><xs:element name="IdUser" type="xs:int" minOccurs="0" /><xs:element name="MsgType" type="xs:string" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="Date" type="xs:dateTime" minOccurs="0" /><xs:element name="FromAddress" type="xs:string" minOccurs="0" /><xs:element name="ToAddress" type="xs:string" minOccurs="0" /><xs:element name="CC" type="xs:string" minOccurs="0" /><xs:element name="CCI" type="xs:string" minOccurs="0" /><xs:element name="ReplyTo" type="xs:string" minOccurs="0" /><xs:element name="Message" type="xs:string" minOccurs="0" /><xs:element name="Signature" type="xs:string" minOccurs="0" /><xs:element name="Bottom" type="xs:string" minOccurs="0" /><xs:element name="Attachments" type="xs:string" minOccurs="0" /><xs:element name="ContentType" type="xs:string" minOccurs="0" /><xs:element name="Subject" type="xs:string" minOccurs="0" /><xs:element name="Recur" type="xs:short" minOccurs="0" /><xs:element name="RecurStep" type="xs:int" minOccurs="0" /><xs:element name="RecurInterval" type="xs:string" minOccurs="0" /><xs:element name="RecurStart" type="xs:dateTime" minOccurs="0" /><xs:element name="RecurTime" type="xs:duration" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.EMailAuto.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.EMailAuto.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit(edvClient)?>]]></Value>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Html.CSS-->
                        <VAR ShortName="CSS" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.CSS._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
if(arguments.Execute){
	var cx = new edvData(session.DataSource);
	var sql = "DELETE FROM message"
		+ " WHERE IdUser = ?"
		+ " AND MsgId = ?";				
	var result = cx.execute(sql, [session.User.IdUser, arguments.MsgId]);
	if (typeof(result) === "string")
		throw new EDVException(result);
	if (typeof(result) === "string")
		throw new EDVException(result);
	echo("");
}

else {
	?>
	<div class="MessageBox edvEditor">
		Etes vous sûr de vouloir supprimer cet email automatique
		<br><a class="submit delete" href="?" onclick="return MessageDeleteExecute(<?=arguments.MsgId?>)">
		Supprimer</a>
		<script>
			function MessageDeleteExecute(id){
				var result;
				if((result = edvGetHTML("<?=:Name?>", "edvargs={MsgId:<?=arguments.MsgId?>, Execute:true}"))==""
				|| typeof(result) != "string")
					return true;
				alert(result);
				return false;
			}
		</script>
	</div>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if (!arguments.Id) arguments.Id = session.User.IdUser;
	var sql = "SELECT *"
	+ " FROM message"
	+ " WHERE IdUser = ?"
	+ " AND MsgId = ?"
	+ " AND MsgType = 'RECUR'";
var cx = edv.Data(..edvAppli.DataSource);
cx.connection();
if(!arguments.addNew){
	arguments.DataTable = cx.select(sql, [arguments.Id, arguments.MsgId]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);
}
if (arguments.addNew || arguments.DataTable.Rows.Count==0){
	cx.execute("INSERT INTO message (IdUser, MsgType, Name)"
		+ " VALUES(?, 'RECUR', 'Nouvel email automatique')", [arguments.Id]);
	arguments.MsgId = cx.lastInsertId();
	arguments.DataTable = cx.select(sql, [arguments.Id, arguments.MsgId]);
}
cx.close();
var dtRow : DataRow = arguments.DataTable.Rows[0];	
?>
<param class="edvDialogOption" name="width" value="auto"/>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdUser" value="<?=dtRow["IdUser"]?>"/>
<input type="hidden" name="Row.MsgId" value="<?=dtRow["MsgId"]?>"/>
<label>Titre&nbsp;:</label><input name="Row.Name" size="72" value="<?=edvTools.EscapeHtml(dtRow["Name"]).Replace("\"", "'")?>"/>
<br/>
<br/>
<label>Destinataires&nbsp;:</label><textarea name="Row.CCI" cols="70" rows="2"><?=edvTools.EscapeHtml(dtRow["CCI"])?></textarea>
<br/>
<br/>
<label>Objet&nbsp;:</label><input name="Row.Subject" size="72" value="<?=edvTools.EscapeHtml(dtRow["Subject"]).Replace("\"", "'")?>"/>
<br/>
<label>Texte&nbsp;:</label><textarea name="Row.Message" cols="70" rows="5"><?=edvTools.EscapeHtml(dtRow["Message"])?></textarea>
<br/>
<label>Signature&nbsp;:</label><textarea name="Row.Signature" cols="70" rows="2"><?=edvTools.EscapeHtml(dtRow["Signature"])?></textarea>
<br/>
<label>Bas de message&nbsp;:</label><textarea name="Row.Bottom" cols="70" rows="4"><?=edvTools.EscapeHtml(dtRow["Bottom"])?></textarea>
<br/>
<label><input type="checkbox"<?=dtRow["Recur"] == 1 ? " checked=\"checked\"" : ""?> name="Row.Recur"/>Récurrence</label>
	<select name="Row.RecurStep">
		<?for(var i : int = 1; i <= 14; ++i){
		?><option value="<?=i?>" <?=dtRow["RecurStep"] == i ? " selected=\"selected\"" : ""?>><?=i?></option>
		<?}?>
	</select>
	<select name="Row.RecurInterval">
		<option value="D"<?=dtRow["RecurInterval"] == "D" ? " selected=\"selected\"" : ""?>>jour(s)</option>
		<option value="M"<?=dtRow["RecurInterval"] == "M" ? " selected=\"selected\"" : ""?>>mois</option>
	</select>
	&nbsp;&nbsp;prochain envoi : <?=HTML.DateTimePicker({
		"name" : "Row.RecurStart"
		, "value" : (dtRow.IsNull("RecurStart") ? DateTime.Now.Date.AddDays(1) : dtRow["RecurStart"]).ToString("dd/MM/yyyy")
		, "size" : "12"
	})?>
	à <input name="Row.RecurTime" size="7" value="<?=dtRow.IsNull("RecurTime") ? "09:00" : dtRow["RecurTime"].ToString("HH:mm")?>"/>
<br/>
<?if(!dtRow.IsNull("Date")){
	?><span class="edvicon imgEDVTypeDateTime">Dernier envoi : <?=dtRow["Date"].ToString("dddd dd/MM/yyyy HH:mm")?></span>
	<br/>
<?}?>
<input type="hidden" name="Update" value="true"/>
<a href="#<?=dtRow["MsgId"]?>" class="submit preview edvicon imgEDVTypeVisualTrue" style="margin-left: 2em;"
	onclick="UserSubmitCheck(this, true); edvDialog.Show('<?=edvSender.Domain?>Preview'); return false;">Aperçu</a>
<a href="#<?=dtRow["MsgId"]?>" class="submit edvicon edvimgSendMsg" style="margin-left: 2em;"
	onclick="UserSubmitCheck(this, true); edvDialog.Show('<?=edvSender.Domain?>Send', 'edvArgs.test=1&edvArgs.Id=<?=dtRow["MsgId"]?>'); return false;">Envoyer un test</a>
<a href="#<?=dtRow["MsgId"]?>" class="submit save" onclick="UserSubmitCheck(this);return false;">Enregistrer</a>
</fieldset>
</form>
<?=:js?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.Edit.Dialog-->
                            <VAR ShortName="Dialog" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?var divId = edvTools.VarGUID(edvSender)?>
<div id="<?=divId?>" class="edvEditor edvDialog">
	<input class="edvProperty" type="hidden" name="Options.title" value="EMail automatique">
	<input class="edvProperty" type="hidden" name="Options.buttons" value="">
	<?=..(arguments, edvClient)?>
</div>
<script>
	edvDialog(document.getElementById("<?=divId?>")).Show();
</script>]]></Value>
                                <!--.EDV.CoopEShop.DB.EMailAuto.Html.Edit.Dialog._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function UserSubmitCheck(form, noClose){
	while(form.tagName != "FORM") form = form.parentNode;
	var value;
	if((value = $(form).find('input[name="Row.Subject"]')[0].value) == ""){
		alert("Veuillez saisir l'objet du message.");
		return false;
	}
	if((value = $(form).find('input[name="Row.RecurTime"]')[0].value) == ""
	|| !/^\d?\d:\d\d(:\d\d)?$/.test(value)){
		alert("Veuillez saisir une heure de récurrence au format HH:mm.");
		return false;
	}
	
	if($(form).find('input[name="Row.Recur"]:checked').length
	&& (value = $(form).find('select[name="Row.RecurStep"]')[0].value) == "1"
	&& (value = $(form).find('select[name="Row.RecurInterval"]')[0].value) == "D"
	){
		if(!confirm("Etes vous sûr de vouloir envoyer ce message tous les jours ?"))
			return false;
	}
	
	edv.Wait.Show();
	edvSubmit(form);
	if(!noClose)
		edvDialog(form).Close();
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.EMailAuto.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
if(!arguments.MaxRows)
	arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;

var rowsHtml = Rows(arguments);
?>
<span class="edvDataTable">
	<span class="title">Mes emails automatiques</span>

<span class="edvNavigator">
		<a href="" onclick="LoadPageInner('<?=New:Name?>', 'dialog');return false;"><img src="Images/Plus16.png" alt="Nouveau"/></a>
		
	</span>

	<span class="edvRows" name="<?=:Domain?>Rows">
		<param class="edvProperty" name="Edit.Title" value="Email automatique"/>
		<?=rowsHtml?>
	</span>
	

</span>


]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<div class="edvEditor"><?=Edit({"addNew" : true }, edvClient)?></div>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Html.Preview-->
                        <VAR ShortName="Preview" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if (!arguments.Id) arguments.Id = session.User.IdUser;
	var sql = "SELECT *"
	+ " FROM message"
	+ " WHERE IdUser = ?"
	+ " AND MsgType = 'RECUR'";
var cx = edv.Data(..edvAppli.DataSource);
cx.connection();
arguments.DataTable = cx.select(sql, [arguments.Id]);
if (!(arguments.DataTable instanceof DataTable))
	throw new EDVException(arguments.DataTable);
if (arguments.DataTable.Rows.Count==0){
	edvReturn("Le modèle n'existe pas.");
}
cx.close();
var dtRow : DataRow = arguments.DataTable.Rows[0];	
?>
<param class="edvDialogOption" name="title" value="<?=edvTools.EscapeHtml(dtRow["Subject"]).Replace("\"", "'")?>"/>
<div><?=dtRow["Message"].Replace("\n", "<br/>")?></div>
<div style="margin-top:1em;"><?=dtRow["Signature"].Replace("\n", "<br/>")?></div>
<div style="font-size:smaller; margin-top:1em;"><?=dtRow["Bottom"].Replace("\n", "<br/>")?></div>
]]></Value>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.Preview._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments.DataTable){
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	var sqlArgs = ['CTLOG'];
	var sql = "SELECT * FROM message"
			+ " WHERE MsgType = 'RECUR'"
			+ " AND IdUser = ?"
			;
	sql += " ORDER BY Date";
	sqlArgs.push(session.User.IdUser);
				
	var cx = edv.Data(..edvAppli.DataSource);
	cx.connection();
	arguments.DataTable = cx.select(sql, [session.User.IdUser]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);
	if (arguments.DataTable.Rows.Count==0){
		edvError = cx.execute("INSERT INTO message (IdUser, MsgType, Name)"
		+ " VALUES(?, 'RECUR', 'Nouvel email automatique')", [session.User.IdUser]);
		arguments.DataTable = cx.select(sql, sqlArgs);
	}
	cx.close();
}?>
<table class="dossiers catalogue edvExpanderRoot">
<?
for(var dtRow in arguments.DataTable.Rows){
	?>	<tr><td><span class="edvExpander" name="">
			<param name="edvArgs" value="{MsgId:<?=dtRow["MsgId"]?>}"/>
			<?if(!dtRow.IsNull("name") && dtRow["name"]!="") {?>
				<span class="name"><?=dtRow["name"]?></span><?}
			?>
		<td>&nbsp;&nbsp;
			<?if(!dtRow.IsNull("Date")){?>
				<span class="edvicon imgEDVTypeDateTime">Dernier envoi : <?=dtRow["Date"].ToString("dddd dd/MM/yyyy HH:mm")?></span>
			<?}?>
		<td>&nbsp;&nbsp;
			<?if(dtRow["Recur"] == 0 || dtRow.IsNull("RecurStart")){?>
				<span class="edvicon edvimgAlert">Désactivé</span>
			<?}
			else {?>
				<span class="edvicon imgEDVTypeDateTime">Prochain envoi : <?=dtRow["RecurStart"].ToString("dddd dd/MM/yyyy")?> à <?=dtRow["RecurTime"].ToString("HH:mm")?></span>
			<?}?>

		<td>&nbsp;&nbsp;
			<a href="" onclick="return !edvDataTable(this).Rows.DeleteRow('edvargs={MsgId:<?=dtRow["MsgId"]?>}')">
				<img src="/edv/Images/Trash.png" alt="Supprimer"></a>

		</tr>
<?}
?>
</table>

<script>
$(document).ready(function(){
	$(".catalogue.edvExpanderRoot").edvExpander({
		"expand" : function(){
			edvDataTable(this).Rows.Edit("edvArgs=" + $(this).children("param[name=\"edvArgs\"]").val()
				, {"title" : "Email automatique"
				});
		}
	});
});
</script>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[20]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Html.Send-->
                        <VAR ShortName="Send" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments || (!arguments.Id && !arguments.dataRow)) edvReturn("arguments manquants");
var dtRow : DataRow;
if(arguments.dataRow){
	dtRow = arguments.dataRow;
}
else {
	var sql = "SELECT m.*, c.Email"
		+ " FROM message m"
		+ " JOIN contact c ON m.IdUser = c.IdContact"
		+ " WHERE m.MsgId = ?"
		+ " AND m.MsgType = 'RECUR'";
	var cx = edv.Data(..edvAppli.DataSource);
	cx.connection();
	arguments.DataTable = cx.select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);
	if (arguments.DataTable.Rows.Count==0){
		edvReturn("Le modèle n'existe pas.");
	}
	cx.close();
	dtRow = arguments.DataTable.Rows[0];	
}
var varEMail = ..Robot.EMail:Object;
//dtRow["Email"] = "postmaster@edvariables.net";
varEMail["Subject"].Value = dtRow["Subject"];
varEMail["ReplyTo"].Value = dtRow["Email"];
varEMail["To"].Value = dtRow["Email"];
varEMail["CC"].Value = arguments.test ? "" : dtRow["CC"];
varEMail["CCI"].Value = arguments.test ? "" : dtRow["CCI"];
if(!arguments.test  && varEMail["CC"].Value == "" && varEMail["CCI"].Value == "") edvReturn("Ok. Aucun destinataire");
varEMail["IsHTML"].Value = true;
?><div style="font-family:Arial"><?
?><div><?=dtRow["Message"].Replace("\n", "<br/>")?></div><?
if(dtRow["Signature"]){
	?><div style="margin-top:1em;"><?=dtRow["Signature"].Replace("\n", "<br/>")?></div><?
}
if(dtRow["Bottom"]){
	?><div style="font-size:smaller; margin-top:1em;"><?=dtRow["Bottom"].Replace("\n", "<br/>")?></div><?
}
?></div>
<?
varEMail["Message"].Value = _echocode.ToString();
varEMail["Send"].Value = 1;
if(edvServer.WaitUntil("!" + varEMail["Send"].NameUpper, 10000, edvClient, edvSender))
	edvReturn(varEMail["Status"].Value == "Ok"
		? "Ok" + (arguments.test ? ", le message a été envoyé à vous seul." : "")
		: varEMail["Status"].Value);
edvReturn("Erreur d'envoi du message : " + varEMail["Status"].Value);
?>
]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Html.Send._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.EMailAuto.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.EMailAuto.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.EMailAuto.Robot-->
                    <VAR ShortName="Robot" ClassName="EDVPulse@EDVFunctions" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Boolean" SaveLocation="V">
                        <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail-->
                        <VAR ShortName="EMail" ClassName="EMail@EDVMail" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.AskConfirmation-->
                            <VAR ShortName="AskConfirmation" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                                <Value><![CDATA[False]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.Attachments-->
                            <VAR ShortName="Attachments" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Text" />
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.CC-->
                            <VAR ShortName="CC" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.CC.OnChecking-->
                                <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                    <Script><![CDATA[when(..:Checking) {
	var str = new StringBuilder();
	for(var m in Regex.Matches(.., ..edvAppli.EMail.RegexCleaner, RegexOptions.IgnoreCase)){
		if (str.Length) str.Append(";");
		str.Append(m.Value);
	}
	.. = str.ToString();
}
null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.CCI-->
                            <VAR ShortName="CCI" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                <Value><![CDATA[edid@free.fr]]></Value>
                                <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.CCI.OnChecking-->
                                <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                    <Script><![CDATA[when(..:Checking) {
	var str = new StringBuilder();
	for(var m in Regex.Matches(.., ..edvAppli.EMail.RegexCleaner, RegexOptions.IgnoreCase)){
		if (str.Length) str.Append(";");
		str.Append(m.Value);
	}
	.. = str.ToString();
}
null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.From-->
                            <VAR ShortName="From" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                                <Script><![CDATA[..edvAppli.EMail.From;]]></Script>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.IsHTML-->
                            <VAR ShortName="IsHTML" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                                <Value><![CDATA[True]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.LastTime-->
                            <VAR ShortName="LastTime" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                                <Value><![CDATA[20/12/2013 09:01:54]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.Message-->
                            <VAR ShortName="Message" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Text">
                                <Value><![CDATA[<div style="font-family:Arial"><div></div></div>
]]></Value>
                                <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.ReplyTo-->
                            <VAR ShortName="ReplyTo" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                <Value><![CDATA[demo@coopeshop.net]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.Send-->
                            <VAR ShortName="Send" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean" Control="EDVCtrlButton">
                                <Value><![CDATA[False]]></Value>
                                <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.Send.OnChecking-->
                                <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                    <Script><![CDATA[when(..:Checking && ..) {
	..LastTime = DateTime.Now;
	if(:IsSys)
		.. = false;
}
null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.Smtp-->
                            <VAR ShortName="Smtp" ClassName="Smtp@EDVMail" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                                <Script><![CDATA[..edvAppli.EMail.Smtp]]></Script>
                                <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.Smtp.Password-->
                                <VAR ShortName="Password" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Password">
                                    <Script><![CDATA[..edvAppli.EMail.Smtp.Password]]></Script>
                                </VAR>
                                <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.Smtp.Port-->
                                <VAR ShortName="Port" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer">
                                    <Script><![CDATA[..edvAppli.EMail.Smtp.Port]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.Status-->
                            <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                                <Value><![CDATA[Ok]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.Subject-->
                            <VAR ShortName="Subject" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                <Value><![CDATA[test]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.To-->
                            <VAR ShortName="To" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                <Value><![CDATA[demo@coopeshop.net]]></Value>
                                <!--.EDV.CoopEShop.DB.EMailAuto.Robot.EMail.To.OnChecking-->
                                <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                    <Script><![CDATA[when(..:Checking) {
	var str = new StringBuilder();
	for(var m in Regex.Matches(.., ..edvAppli.EMail.RegexCleaner, RegexOptions.IgnoreCase)){
		if (str.Length) str.Append(";");
		str.Append(m.Value);
	}
	.. = str.ToString();
}
null;]]></Script>
                                </VAR>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Robot.LastTime-->
                        <VAR ShortName="LastTime" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[20/12/2013 09:46:54]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Robot.Now-->
                        <VAR ShortName="Now" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Robot.OnChanging-->
                        <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when((..:Changing && ..) || Now) {
	LastTime = DateTime.Now;
	var sql = "SELECT m.*, c.Email"
		+ " FROM message m"
		+ " JOIN contact c ON m.IdUser = c.IdContact"
		+ " WHERE m.Recur = 1"
		+ " AND m.RecurStart + m.RecurTime <= NOW()"
		+ " AND m.MsgType = 'RECUR'";
	var cx = edv.Data(..edvAppli.DataSource);
	cx.connection();
	var dataTable = cx.select(sql);
	if (!(dataTable instanceof DataTable))
		throw new EDVException(dataTable);

	for(var row in dataTable.Rows){
		var r = ..Html.Send({
			dataRow : row
		});
		if(!r.StartsWith("Ok"))
			edvError = :Name + " - " + r;
		else {
			var nextDate = DateTime.Now.Date;
			if(row["RecurInterval"] == "D")
				nextDate = nextDate.AddDays(row["RecurStep"]);
			else if(row["RecurInterval"] == "M")
				nextDate = nextDate.AddMonths(row["RecurStep"]);
			else
				nextDate = nextDate.AddMonths(1);

			cx.execute("UPDATE message SET Date = ?, RecurStart = ?"
				+ " WHERE MsgId = ?"
				, [DateTime.Now, nextDate, row["MsgId"]]);
		}
	}
	cx.close();
}
null;]]></Script>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Robot.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Checking) {
	if(:IsSys
	|| (.{Sys}.Host != "ns390130:46000"))
		.. = false;
}
null;]]></Script>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Robot.Period-->
                        <VAR ShortName="Period" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Double">
                            <Script><![CDATA[3600000/4]]></Script>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Robot.Run-->
                        <VAR ShortName="Run" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean" SaveLocation="VX">
                            <!--.EDV.CoopEShop.DB.EMailAuto.Robot.Run.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when((..:Changing || :Scripting) && edvSender.IsSys) {
	.. = false;
}
null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.EMailAuto.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.Attachments-->
                        <VAR ShortName="Attachments" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.Bottom-->
                        <VAR ShortName="Bottom" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.CC-->
                        <VAR ShortName="CC" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.CCI-->
                        <VAR ShortName="CCI" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[edid@free.fr]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.ContentType-->
                        <VAR ShortName="ContentType" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.Date-->
                        <VAR ShortName="Date" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[01/01/0001 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.FromAddress-->
                        <VAR ShortName="FromAddress" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.IdUser-->
                        <VAR ShortName="IdUser" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[131]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.Message-->
                        <VAR ShortName="Message" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.MsgId-->
                        <VAR ShortName="MsgId" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[18]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.MsgType-->
                        <VAR ShortName="MsgType" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.Name-->
                        <VAR ShortName="Name" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[Nouvel email automatique]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.Recur-->
                        <VAR ShortName="Recur" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                            <Value><![CDATA[1]]></Value>
                            <!--.EDV.CoopEShop.DB.EMailAuto.Row.Recur.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Changing) {
	edvSender.Value = edvTools.Parse(edvSender.Value, EDVType.Boolean) ? 1 : 0;
}
null;
]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.RecurInterval-->
                        <VAR ShortName="RecurInterval" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[D]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.RecurStart-->
                        <VAR ShortName="RecurStart" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[10/09/2013 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.RecurStep-->
                        <VAR ShortName="RecurStep" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[1]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.RecurTime-->
                        <VAR ShortName="RecurTime" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                            <Value><![CDATA[07:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.ReplyTo-->
                        <VAR ShortName="ReplyTo" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.Signature-->
                        <VAR ShortName="Signature" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.Subject-->
                        <VAR ShortName="Subject" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[test]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.Row.ToAddress-->
                        <VAR ShortName="ToAddress" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                    </VAR>
                    <!--.EDV.CoopEShop.DB.EMailAuto.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM message
WHERE MsgId = :MSGID


]]></Value>
                        <!--.EDV.CoopEShop.DB.EMailAuto.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.EMailAuto.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO message (IdUser, MsgType, Name)
VALUES(:IDUSER, 'RECUR', 'Nouvel email automatique du <?=DateTime.Now.ToString()?>')

]]></Value>
                        <!--.EDV.CoopEShop.DB.EMailAuto.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.EMailAuto.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT *
FROM message
WHERE IdUser = :IDUSER
AND MsgType = 'RECUR']]></Value>
                        <!--.EDV.CoopEShop.DB.EMailAuto.SQLSelect.IDUSER-->
                        <VAR ShortName="IDUSER" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.EMailAuto.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.EMailAuto.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE message
SET Name = :NAME, ToAddress = :TOADDRESS, CC = :CC, CCI = :CCI, Message = :MESSAGE, Signature = :SIGNATURE, Bottom = :BOTTOM, Subject = :SUBJECT
, Recur = :RECUR, RecurStep = :RECURSTEP, RecurInterval = :RECURINTERVAL, RecurStart = :RECURSTART, RecurTime = :RECURTIME
WHERE MsgId = :MSGID


]]></Value>
                        <!--.EDV.CoopEShop.DB.EMailAuto.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.EMailAuto.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.Fournisseur-->
                <VAR ShortName="Fournisseur" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdFournisseur" type="xs:int" minOccurs="0" /><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="NumCompte" type="xs:int" minOccurs="0" /><xs:element name="Enabled" type="xs:short" minOccurs="0" /><xs:element name="Message" type="xs:string" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.Fournisseur.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Fournisseur.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Fournisseur.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.Fournisseur.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Html.Combo-->
                        <VAR ShortName="Combo" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
if(!arguments.GetOptions){
	var sql = "SELECT F.*, C.*"
			+ " FROM contact C"
			+ " INNER JOIN fournisseur F"
				+ " ON C.IdContact = F.IdContact"
	if (arguments.Id)
		sql += " WHERE IdFournisseur = ?";
	else
		sql += " LIMIT 0";

	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);
	if(arguments.onClick){?><script>
		function cboSelectFournisseurOnClick(){
		<?=arguments.onClick?>}
	</script><?}
	?><select name="<?=arguments.name?>" value="<?=arguments.Id ? arguments.Id : ""?>" 
		onclick="$(this).html(edvGetHTML('<?=:Name?>', 'edvArgs={GetOptions:true}')); this.onclick=<?=arguments.onClick ? "cboSelectFournisseurOnClick" : "null"?>;"
		class="<?=arguments.className ? arguments.className : ""?>">
	<?
	if (arguments.DataTable.Rows.Count == 0){?>
		</select>
	<?}
	else {?>
		<option value="<?=arguments.Id?>" selected="selected"><?=arguments.DataTable.Rows[0]["Name"]?></option>
		</select>
	<?}
}
else {
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	var sql = "SELECT F.*, C.*"
			+ " FROM contact C"
			+ " INNER JOIN fournisseur F"
				+ " ON C.IdContact = F.IdContact"
	if (arguments.SQLWhere && arguments.SQLWhere != "")
		sql += " WHERE (" + arguments.SQLWhere + ")";
	else
		sql += " WHERE (C.IdContactRef = C.IdContact OR C.IdContactRef = 0)";
	sql += " AND F.Enabled=1"
		+ " ORDER BY F.Name, C.Name";
	
	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		

	for(var dtRow in arguments.DataTable.Rows){
	?>	<option value="<?=dtRow["IdFournisseur"]?>">
			<?=dtRow["Name"]?> (<?=dtRow["ZipCode"]?> <?=dtRow["City"]?>)
	</option>
<?}	
}
?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Combo.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Combo.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[20]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Combo._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
var cx = new edvData(session.DataSource);
if(arguments.Execute){
	if(arguments.Id == 0)
		throw new EDVException("Identifiant incorrecte");
	var sql = "DELETE FROM fournisseur"
			+ " WHERE IdFournisseur = ?";
	var result = cx.execute(sql, [arguments.Id, arguments.Id]);
	if (typeof(result) === "string")
		throw new EDVException(result);
	echo("");
}
else {
	var sql = "SELECT F.*, A.IdArticle AS IdArticleA"
			+ " FROM fournisseur F"
			+ " LEFT JOIN article A"
				+ " ON F.IdFournisseur = A.IdFournisseur"
			+ " WHERE F.IdFournisseur = ?"
			+ " LIMIT 1";
	arguments.DataTable = cx.select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count==0)
		throw new EDVException("Fournisseur inconnu");
	if(!arguments.DataTable.Rows[0].IsNull("IdArticleA"))
		throw new EDVException("Ce fournisseur a des articles<br/>et ne peut être supprimé.");
	var dtRow = arguments.DataTable.Rows[0];
	?>
	<div class="MessageBox edvEditor">
		Etes vous sûr de vouloir supprimer le fournisseur <?=dtRow["Name"]?> ?
		<br><a class="submit delete" href="?" onclick="return FournisseurDeleteExecute(<?=arguments.Id?>)">
		Supprimer</a>
		<script>
			function FournisseurDeleteExecute(id){
				var result;
				if((result = edvGetHTML("<?=:Name?>", "edvargs={Id:" + id + ", Execute:true}"))==""
				|| typeof(result) != "string")
					return true;
				alert(result);
				return false;
			}
		</script>
	</div>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if(!arguments.DataRow && !arguments.DataTable){
	if (!arguments.Id) arguments.Id = session.User.IdFournisseur;
	var sql = "SELECT F.*, C.*, U.IdUser"
			+ " FROM fournisseur F"
			+ " INNER JOIN contact C"
				+ " ON C.IdContact = F.IdContact"
				+ " AND (C.IdContact = C.IdContactRef OR C.IdContactRef = 0)"
			+ " LEFT JOIN user U"
				+ " ON U.IdUser = F.IdContact"
			+ " WHERE F.IdFournisseur = ?";
	//edvInfo = sql;
	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucun enregistrement.");		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
?>
<param class="edvDialogOption" name="width" value="600"/>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdFournisseur" value="<?=dtRow["IdFournisseur"]?>"/>
<input type="hidden" name="Row.IdContact" value="<?=dtRow["IdContact"]?>"/>
<label<?=dtRow["Enabled"] == 0 ? " class=\"dataRowNotEnabled\"" : ""?>>Catalogues visibles : 
	<input id="chkUserEnabled" type="checkbox" <?=dtRow["Enabled"] ? "checked=\"checked\"" : ""?> 
		onclick="document.getElementById('txtchkUserEnabled').value=this.checked; $(this.parentNode).toggleClass('dataRowNotEnabled',!this.checked);"/>
    <input type="hidden" id="txtchkUserEnabled" name="Row.Enabled" value="<?=dtRow["Enabled"]?>"/>
</label>
<br style="clear:both"/>
<label>Nom : </label><input name="Row.Name" size="33" value="<?=edvTools.EscapeToAttribute(dtRow["Name"])?>"/>
<?if(session.User.Rights[".Admin"] && session.User.Rights[".Admin"] > 0) {
?><br/>
<label>Compte : </label><input name="Row.NumCompte" size="33" value="<?=dtRow["NumCompte"]?>"/>
<?}
else {
	?><input type="hidden" name="Row.NumCompte" value="<?=dtRow["NumCompte"]?>"/><?
}?><br/>
<label>Message : </label><textarea name="Row.Message" cols="45" rows="4" maxlength="255"><?=dtRow["Message"]?></textarea>
<br/>

<a href="#<?=dtRow["IdContact"]?>" class="info <?=dtRow.IsNull("IdUser") ? "contactRef" : "user"?>"
	onclick="edvDialog().Show('<?=..DB.Contact.Html.Edit:Name?>', 'edvArgs={Id:<?=dtRow["IdContact"]?>}', {title:'Fournisseur <?=dtRow["IdContact"]?>', Refresh:edvDialog(this)}, 'edvEditor');return false;">
&nbsp;</a>

<input type="hidden" name="Update" value="true"/>
<a href="#<?=arguments.Id?>" class="submit save" onclick="FournisseurSubmitCheck(this); return false;">Enregistrer</a>

<br/>
<?if(!dtRow.IsNull("IdUser") && session.User && session.User.Rights && session.User.Rights[".Admin"]){?>
	<br/>
	<a href="?edvcode=<?=..edvAppli.User.Login.Check:Name?>&<?=..edvAppli.User.Login.UserKey:Name?>=<?=dtRow["IdUser"]?>&edvargs={UserKey:<?=dtRow["IdUser"]?>, Password:'<?=edvCrypt.Encrypt(DateTime.Now.Date.ToString(),"edv")?>'}" class="submit save">Se connecter sous ce nom</a>
<?}
?>

</fieldset>
</form>
<?=:js?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Edit.Dialog-->
                            <VAR ShortName="Dialog" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?var divId = edvTools.VarGUID(edvSender)?>
<div id="<?=divId?>" class="edvEditor edvDialog">
	<input class="edvProperty" type="hidden" name="Options.title" value="Mon profil fournisseur">
	<input class="edvProperty" type="hidden" name="Options.buttons" value="">
	<?=..(arguments)?>
</div>
<script>
	edvDialog(document.getElementById("<?=divId?>")).Show();
</script>]]></Value>
                                <!--.EDV.CoopEShop.DB.Fournisseur.Html.Edit.Dialog._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function FournisseurSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	if($(form).find('input[name="Row.Name"]')[0].value == ""){
		alert("La saisie de votre nom est obligatoire");
		return false;
	}
	edv.Wait.Show();
	edvSubmit(form);
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Fournisseur.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
if(!arguments.MaxRows)
	arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;

var rowsHtml = Rows(arguments, edvClient);
?>
<span class="edvDataTable">
	<span class="title">Fournisseurs</span>
	<span class="edvNavigator">
		<a href="" onclick="edvDataTable(this).Navigator.NewRow();return false;"><img src="Images/Plus16.png" alt="Nouveau"/></a>
		&nbsp;
		<param class="edvProperty" name="MaxRows" value="<?=arguments.MaxRows?>"/>
		<input class="filter" size="8" value="<?=Rows.Filter?>"
			onchange="edvDataTable(this).Navigator.SetFilter(this.value)"
			onkeydown="if(/msie|Trident/i.test(navigator.userAgent) && getKeyPress(event)==13) this.onchange();"/>
		&nbsp;<a href="" onclick="edvDataTable(this).Navigator.RefreshRows();return false;"><img src="Images/Search16.png"/></a>
		&nbsp;
		<a <?if(arguments.Limit==0){?>style="display:none"<?}?> 
			class="previous" href="#" onclick="edvDataTable(this).Navigator.Previous()">&lt;&lt; précédent</a>
		<span class="current" style="display:none"><?
			if(arguments.DataTable.Rows.Count == 0){?>
				<i>fin de liste</i>
			<?}
		?></span>
		<a <?if(arguments.DataTable.Rows.Count < arguments.MaxRows){?>style="display:none"<?}?> 
			class="next" href="#" onclick="edvDataTable(this).Navigator.Next()">suivant &gt;&gt;</a>
		
	</span>

	<span class="edvRows" name="<?=:Domain?>Rows">
		<param class="edvProperty" name="Edit.Title" value="Fournisseur"/>
		<?=rowsHtml?>
	</span>

</span>


]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
//edvInfo = edvjs.json(session);
?>
<form class="EDVVisual" method="post" action="?">
<fieldset><legend>Devenir fournisseur</legend>
<pre style="max-width:80%">En devenant fournisseur, vous aurez la possibilité de créer
 vos propres catalogues d'articles.
Vous pouvez les proposer aux utilisateurs de CoopEShop
 ou uniquement à vos amis ou contacts.

Vous êtes entièrement responsable et gestionnaire des échanges 
 qui s'effectuent entre vous et vos clients. La communication est la clé de la confiance.

Utilisez les Petits Comptes Entre Amis pour gérer le solde de vos échanges.

Pensez aux autres : n'encombrez pas CoopEShop avec des catalogues publiques
 dont vous ne vous occuperiez plus. Merci.
Vous pouvez aisément désactiver votre compte fournisseur depuis votre profil Fournisseur.

Bonne découverte de CoopEShop !
</pre>
<br/><br/>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<?arguments.IdContact = session.User.IdContact;
if(arguments.IdContact) {?>
	<input type="hidden" name="Row.IdContact" value="<?=arguments.IdContact?>"/>
<?}
else {?>
	<input type="hidden" name="Row.IdContact" value="-1"/>
	<a href="" class="imgEDVTypePlus"
		onclick="FournisseurContactSelect(this); return false;">
		&nbsp;&nbsp;&nbsp;Sélectionnez un contact</a><br/>
<?}?>
<input type="hidden" name="Row.Enabled" value="true"/>

<label>Mon nom de fournisseur : </label><input name="Row.Name" size="33" value="<?=edvTools.EscapeToAttribute(session.User.Name)?>">
<?/*<br/>
<label>Compte : </label><input name="Row.NumCompte" size="33" value="">
*/?>
<br/><br/>
<input type="hidden" name="Insert" value="true"/>
<a class="submit save edvicon edvimgOk" style="color:blue"
 onclick="FournisseurInsertSubmit(this); edvDialog(this).Close(); <?
	?>document.location.href = $('#PageMenu .user > .imgEDVTypeFalse').attr('href');<?
	?>return false;">Créer le compte Fournisseur</a>
</fieldset>

</form>

<?=:js?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.New.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function FournisseurInsertSubmit(form){
	while(form.tagName != "FORM") form = form.parentNode;
	if($(form).find('input[name="Row.IdContact"]')[0].value <= 0){
		alert("Le contact est obligatoire");
		return false;
	}
	if($(form).find('input[name="Row.Name"]')[0].value == ""){
		alert("Le nom est obligatoire");
		return false;
	}
	edv.Wait.Show();
	edvSubmit(form);
	edvDialog(form).Refresh();
	edv.Wait.Hide();
	return true;
}


function FournisseurContactSelect(link){
	edvDialog.Show("<?=..Contact.Html.List:Name?>", "edvArgs={SelectDialog:true}"
			, {title:"Sélection d'un contact"
			 , close : function(selectedItem){
					if(selectedItem){
						link.innerHTML = selectedItem.text;
						var form = link;
						while(form.tagName != "FORM") form = form.parentNode;
						$(form).find('input[name="Row.IdContact"]')[0].value = selectedItem.id;					
					}
				}
			}
		);
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Fournisseur.Html.New.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments.DataTable){
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	var sql = "SELECT F.*, C.*, U.IdUser "
			+ " FROM contact C"
			+ " INNER JOIN fournisseur F"
				+ " ON C.IdContact = F.IdContact"
			+ " LEFT JOIN user U"
				+ " ON U.IdUser = C.IdContact";
	if (arguments.SQLWhere && arguments.SQLWhere != "")
		sql += " WHERE (" + arguments.SQLWhere + ")";
	else
		sql += " WHERE (C.IdContactRef = C.IdContact OR C.IdContactRef = 0)";

	if (arguments.Filter && arguments.Filter != "")
		if (arguments.Filter.ToUpper().StartsWith("WHERE "))
			sql += " " + arguments.Filter;
		else if(int.TryParse(arguments.Filter)){
			if (!session.User || !session.User.Rights[".Admin"] || (session.User.Rights[".Admin"] == 0))
				sql += " AND (IdFournisseur = " + arguments.Filter + " OR C.ZipCode = '" + arguments.Filter + "')";
		}
		else
			sql += " AND (C.Name LIKE '%" + arguments.Filter + "%' OR F.Name LIKE '%" + arguments.Filter + "%' OR C.EMail LIKE '%" + arguments.Filter + "%')";
	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY " + arguments.OrderBy;
	else
		sql += " ORDER BY F.Name, C.Name";
	sql += " LIMIT " + arguments.Limit + ", " + arguments.MaxRows;
	
	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}
?><ul>
<?for(var dtRow in arguments.DataTable.Rows){
	if (arguments.SelectMode && (arguments.SelectMode == true || arguments.SelectMode == 'single')){
	?>	<li>	<a class="<?=dtRow.IsNull("IdUser") ? "contact" : "user"?><?=dtRow["Enabled"]==0 ? " notEnabled" : ""?>" href="#<?=dtRow["IdFournisseur"]?>" 
				onclick="edvDialog(this).Select(<?=dtRow["IdFournisseur"]?>, this.text); return false;">
			<?=dtRow["Name"]?> (<?=dtRow["ZipCode"]?> <?=dtRow["City"]?>)</a></li>
	<?}
	else {?>
		<li>	<a class="<?=dtRow.IsNull("IdUser") ? "contact" : "user"?><?=dtRow["Enabled"]==0 ? " notEnabled" : ""?>" href="#<?=dtRow["IdFournisseur"]?>" 
				onclick="edvDataTable(this).Rows.Edit('edvargs={Id:<?=dtRow["IdFournisseur"]?>}', {title:this.innerHTML});return false;">
			<?=dtRow["Name"]?> (<?=dtRow["ZipCode"]?> <?=dtRow["City"]?>)</a>
			<a href="" onclick="return !edvRows(this).DeleteRow('edvargs={Id:<?=dtRow["IdFournisseur"]?>}')">
				<img src="Images/Cross16.png" alt="Supprimer" width="12"></a>
			</li>
<?}	}
?>
</ul>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[20]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.Fournisseur.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Fournisseur.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Fournisseur.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Fournisseur.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Row.Enabled-->
                        <VAR ShortName="Enabled" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Value><![CDATA[True]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Row.IdContact-->
                        <VAR ShortName="IdContact" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[16]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Row.IdFournisseur-->
                        <VAR ShortName="IdFournisseur" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[8]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Row.Message-->
                        <VAR ShortName="Message" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Fournisseur.Row.Name-->
                        <VAR ShortName="Name" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[Manu de Chevinay]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Fournisseur.Row.NumCompte-->
                        <VAR ShortName="NumCompte" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Fournisseur.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.Fournisseur.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Fournisseur.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM fournisseur
WHERE IdFournisseur = :IDFOURNISSEUR]]></Value>
                        <!--.EDV.CoopEShop.DB.Fournisseur.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Fournisseur.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO fournisseur (IdContact, Name, NumCompte, Enabled, Message)
VALUES(:IDCONTACT, :NAME, :NUMCOMPTE, :ENABLED, :MESSAGE)
]]></Value>
                        <!--.EDV.CoopEShop.DB.Fournisseur.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Fournisseur.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * FROM fournisseur
WHERE IdFournisseur = :ID]]></Value>
                        <!--.EDV.CoopEShop.DB.Fournisseur.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Fournisseur.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Fournisseur.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE fournisseur
SET IdContact = :IDCONTACT,
Name = :NAME,
NumCompte = :NUMCOMPTE,
Enabled = :ENABLED,
Message = :MESSAGE
WHERE IdFournisseur = :IDFOURNISSEUR]]></Value>
                        <!--.EDV.CoopEShop.DB.Fournisseur.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Fournisseur.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.Fournisseur.Table-->
                    <VAR ShortName="Table" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                        <Value><![CDATA[fournisseur]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Fournisseur.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Fournisseur.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <DOM ShortName="Fournisseurs">
                    <DOM ShortName="jso">
                        <!--.EDV.CoopEShop.DB.Fournisseurs.jso.Create-->
                        <VAR ShortName="Create" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <!--.EDV.CoopEShop.DB.Fournisseurs.jso.Create.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Changing || ((:Scripting || ..edvAppli.DataSource:Changing) && ..edvAppli.DataSource!="") || ..Fournisseur.Insert:Changed || ..Fournisseur.Update:Changed){
	var cx = new edvData(..edvAppli.DataSource);
	var dt = cx.select("SELECT IdFournisseur FROM Fournisseur"
		+ " WHERE Enabled = 1"
		//+ " LIMIT 2"
		);
	if(dt instanceof DataTable) {
		if (!edv.Coopeshop)
			edv.Coopeshop = {};
		edv.Coopeshop.Fournisseurs = {
			OnlyOne : dt.Rows.Count == 1 ? dt.Rows[0][0] : false
		};
	}
}
null;]]></Script>
                            </VAR>
                        </VAR>
                    </DOM>
                </DOM>
                <!--.EDV.CoopEShop.DB.LgCatalogue-->
                <VAR ShortName="LgCatalogue" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="MySQL" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="MySQL"><xs:complexType><xs:sequence><xs:element name="Category" type="xs:string" minOccurs="0" /><xs:element name="Label" type="xs:string" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="IdDossier" type="xs:int" minOccurs="0" /><xs:element name="TypeDossier" type="xs:string" minOccurs="0" /><xs:element name="Line" type="xs:int" minOccurs="0" /><xs:element name="IdArticle" type="xs:int" minOccurs="0" /><xs:element name="IdAnal" type="xs:string" minOccurs="0" /><xs:element name="Quantity" type="xs:decimal" minOccurs="0" /><xs:element name="Unit" type="xs:string" minOccurs="0" /><xs:element name="Price" type="xs:decimal" minOccurs="0" /><xs:element name="Forfait" type="xs:decimal" minOccurs="0" /><xs:element name="Comment" type="xs:string" minOccurs="0" /><xs:element name="CreationDate" type="xs:dateTime" minOccurs="0" /><xs:element name="CreationIdUser" type="xs:int" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?throw new EDVException("non développé")?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.LgCatalogue.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
var dtRow = arguments.DataRow;
var isLgDossier = !dtRow.IsNull("Line");
if(!arguments.FormatEMail){
	var image = arguments.FormatEMail || dtRow.IsNull("Image") || dtRow["Image"] == "" ? "" : dtRow["Image"];
}?>
<form method="post" action="?" class="edvEditor lgCmd">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdContact" value="<?=arguments.IdContact?>"/>
<input type="hidden" name="Row.IdDossier" value="<?=arguments.IdDossier?>"/>
<input type="hidden" name="Row.TypeDossier" value="<?=arguments.TypeDossier?>"/>
<input type="hidden" name="Row.Line" value="<?=isLgDossier ? dtRow["Line"] : 0?>"/>
<input type="hidden" name="Row.IdArticle" value="<?=dtRow["IdArticle"]?>"/>
<input type="hidden" name="Row.Quantity" value="0"/>
<?if(image != ""){
		?><div class="imgArticle"><img src="Article.Image/<?=image?>" class="article"></div>
		<?}?>
<span class="NameA<?=dtRow.IsNull("Enabled") || dtRow["Enabled"] == 1 ? "" : " notEnabled"?>"><?=dtRow["NameA"]?><?
	if(dtRow["SortIndex"] == 0){?><span class="edvicon edvimgStar">&nbsp;</span><?}
?></span>

<span class="Price"><?=dtRow.IsNull("PriceT") 
					? "&nbsp;"
					: Double(dtRow["PriceT"]).ToString("# ##0.##") + " €"?>
	<?=dtRow.IsNull("UnitT") 
		? "" 
		: " / " + dtRow["UnitT"]?></span>

<input name="Row.Price" value="<?=isLgDossier 
						? Double(dtRow["Price"]).ToString("# ##0.##") 
						:  Double(dtRow["PriceT"]).ToString("# ##0.##")?>" size="4" maxlength="8">
<input name="Row.Unit" value="<?=isLgDossier 
						? dtRow["Unit"] 
						:  dtRow["UnitT"]?>" size="6" maxlength="16">
<input name="Row.Comment" value="<?=isLgDossier && !dtRow.IsNull("Comment") ? dtRow["Comment"].Replace("\"","'") : ""?>" size="18" maxlength="255">
<?if(!arguments.Status || arguments.Status != "CLOSED"){?>
	<input type="hidden" name="<?=isLgDossier ? "Update" : "Insert"?>" value="true"/>
	
	<a href="#<?=isLgDossier ? "Update" + dtRow["Line"] : "Insert"?>" class="submit <?=isLgDossier ? "save" : "insert"?>"
		onclick="LgCatalogueSubmitCheck(this); return false;">&nbsp;</a>
	
	<a href="" class="submit delete"
		onclick="LgCatalogueDelete(this); return false;">&nbsp;</a>
<?}?>
</fieldset>
</form>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.LgCatalogue.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function LgCatalogueSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	var value;
	if(!isnumeric(value = $(form).find('input[name="Row.Price"]')[0].value)){
		alert("Merci de mettre un nombre en tarif");
		return false;
	}
	if(value == 0){
		alert("Attention, le tarif est à zéro");
	}
	edv.Wait.Show();
	var result = edvSubmit(form);	
	edv.Wait.Hide();
	if(result && result!=""){
		alert(result);
		return false;
	}
	$(form).find('input[name="Row.Line"]')[0].value=edvGet("<?=..Row.Line:Name?>");
	$(form).find('input[name="Insert"]').attr("name","Update");
	$(form).find('.submit.insert').removeClass("insert").addClass("save");
	$(form).removeClass("Out");
	$(form).addClass("LgDossier In");
	return true;
}

function LgCatalogueDelete(form){
	while(form.tagName != "FORM") form = form.parentNode;
	$(form).find('input[name="Update"]').attr("name","Delete");
	edv.Wait.Show();
	result = edvSubmit(form);
	edv.Wait.Hide();
	$(form).find('input[name="Delete"]').attr("name","Insert");
	$(form).find('.submit.save').removeClass("save").addClass("insert");
	$(form).removeClass("In");
	$(form).addClass("LgDossier Out");
	return true;
}
$(document).ready(function(){
	$(".edvEditor.dossier.params + span.edvRows").find(".edvExpander, ul > li > span.edvExpander").edvExpander({
		"onExpand" : function(){
			$(this).attr("name", "");
		}
	});
});
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.LgCatalogue.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.LgCatalogue.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<div name="<?=:Name?>">
<form method="post" action="">
<fieldset><legend>Nouveau Catalogue</legend>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdContact" value="0"/>
<input type="hidden" name="Row.IdClient" value="<?=..edvAppli.User.Id?>"/>
<input type="hidden" name="Row.TypeDossier" value="CTLOG"/>
Veuillez sélectionner un fournisseur : <?=..Fournisseur.Html.Combo({name : "Row.IdFournisseur", 
	onClick : "$(this.parentNode).children('a.submit')[0].style.display='inline'"})?>		

<input type="hidden" name="Insert" value="true"/>
<a href="" class="submit imgEDVTypeButton" style="padding-left:1.3em;display:none"
	onclick="CatalogueInsertSubmit(this); return false;">Continuer</a>
</fieldset>

</form>
<?=:js?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.LgCatalogue.Html.New.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>

function CatalogueInsertSubmit(form){
	while(form.tagName != "FORM") form = form.parentNode;
	edv.Wait.Show();
	var result = edvSubmit(form);
	if(result){
		alert(result);
		return false;
	}
	edvGetHTML("PageInner", "<?=..Visual.Inner.@:Name?>=<?=..Edit:Name?>");

	edv.Wait.Hide();
	return true;
}
function CatalogueSetIdFournisseur(form, idFournisseur){
	while(form.tagName != "FORM") form = form.parentNode;
	$(form).find('input[name="Row.IdFournisseur"]')[0].value=idFournisseur;
	$(form).find('a.submit')[0].style.display='inline';	
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.LgCatalogue.Html.New.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.LgCatalogue.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
var artsInDossier = {};
if(arguments.Id) arguments.IdDossier = arguments.Id;
var cx = new edvData(session.DataSource);
if(!arguments.DataTable){
	var sql = "SELECT D.Status, LG.*, A.Name AS NameA, A.Category, PC.Label AS CategoryLabel"
			+ ", T.Unit AS UnitT, T.Price AS PriceT, A.Image, A.SortIndex, A.Enabled"
			+ " FROM dossier D"
			+ " INNER JOIN lgdossier LG"
				+ " ON LG.IdContact = D.IdContact"
				+ " AND LG.IdDossier = D.IdDossier"
				+ " AND LG.TypeDossier = D.TypeDossier"
			+ " INNER JOIN article A"
				+ " ON LG.IdArticle = A.IdArticle"
			+ " LEFT JOIN parameter PC"
				+ " ON A.Category = PC.IdParam"
				+ " AND PC.Domain = 'ARTCAT'"
			+ " LEFT JOIN tarif T"
				+ " ON T.IdFournisseur = A.IdFournisseur"
				+ " AND T.IdArticle = A.IdArticle"
				+ " AND D.DateDossier BETWEEN T.DateFrom AND T.DateTo"
			+ " WHERE LG.IdContact = ?"
			+ " AND LG.IdDossier = ?"
			+ " AND LG.TypeDossier = ?"
			+ " ORDER BY PC.SortIndex, A.Category, A.Name, LG.Line";
	arguments.DataTable = cx.select(sql, [arguments.IdContact, arguments.IdDossier, arguments.TypeDossier]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}
if(!arguments.onlyOutRows){
	?><ul class="LgDossier In">
	<?var curCategory;
	for(var dtRow in arguments.DataTable.Rows){
		if(curCategory != dtRow["Category"]) {
			if (curCategory) echo("</ul>");
			curCategory = dtRow["Category"];
			?><li><span class="edvExpander expanded category"><?=dtRow.IsNull("CategoryLabel") ? curCategory : dtRow["CategoryLabel"]?></span>
			<ul class="edvExpanderDestination"><?
		}
		arguments.DataRow = dtRow;
		artsInDossier[dtRow["IdArticle"]] = true;
	?>	<li><?=Edit(arguments, edvClient)?></li>
	<?}
	if(curCategory) echo("</ul>");
	?>
	</ul>
	<?=Edit.js?>
<?}
else
	for(var dtRow in arguments.DataTable.Rows){
		artsInDossier[dtRow["IdArticle"]] = true;
	}
if(!arguments.Status || arguments.Status != "CLOSED"){
	if(arguments.onlyOutRows){
		sql = "SELECT Null AS Line, A.IdArticle, A.Name AS NameA, A.Category, PC.Label AS CategoryLabel"
				+ ", T.Unit AS UnitT, T.Price AS PriceT, A.Image, A.SortIndex, A.Enabled"
				+ " FROM dossier D"
				+ " INNER JOIN fournisseur F"
					+ " ON D.IdContact = F.IdContact"
				+ " INNER JOIN article A"
					+ " ON A.IdFournisseur = F.IdFournisseur"
					+ " AND A.Enabled = 1"
				+ " LEFT JOIN parameter PC"
					+ " ON A.Category = PC.IdParam"
					+ " AND PC.Domain = 'ARTCAT'"
				+ " INNER JOIN tarif T"
					+ " ON T.IdFournisseur = A.IdFournisseur"
					+ " AND T.IdArticle = A.IdArticle"
					+ " AND CURDATE() BETWEEN T.DateFrom AND T.DateTo"
				+ " WHERE D.IdContact = ?"
				+ " AND D.IdDossier = ?"
				+ " AND D.TypeDossier = ?"
				+ " ORDER BY PC.Label, A.Name";
		
		arguments.DataTable = cx.select(sql, [arguments.IdContact, arguments.IdDossier, arguments.TypeDossier]);
		if (!(arguments.DataTable instanceof DataTable))
			throw new EDVException(arguments.DataTable);		
		?>
		<ul class="LgDossier Out">
		<?curCategory = undefined;
		for(var dtRow in arguments.DataTable.Rows){
			if(!artsInDossier[dtRow["IdArticle"]]){
				if(curCategory != dtRow["Category"]) {
					if (curCategory) echo("</ul>");
					curCategory = dtRow["Category"];
					?><ul class="sub"><span class="category"><?=dtRow.IsNull("CategoryLabel") ? curCategory : dtRow["CategoryLabel"]?></span><?
				}
				arguments.DataRow = dtRow;
			?>	<li><?=Edit(arguments)?></li>
			<?}
		}
		if (curCategory) echo("</ul>");
	}
	else {
		?><br/><span class="edvExpander" name="edvcode=<?=:Name?><?
		?>&edvArgs.onlyOutRows=1<?
		?>&edvArgs={Id: <?=arguments.IdDossier?><?
		?>,IdContact: <?=arguments.IdContact?>, TypeDossier : '<?=arguments.TypeDossier?>'<?
		?>,Status: '<?=arguments.Status?>'}<?
		?>">articles hors catalogue</span>
		<?
	}
}
?>
</ul>
<?if(!arguments.onlyOutRows && (!arguments.Status || arguments.Status != "CLOSED")){?>
<br><center><i>Les lignes vertes sont ajoutées au catalogue</i></center>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.LgCatalogue.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.LgCatalogue.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Insert.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Checking){
	var sql = "SELECT MAX(Line) FROM lgdossier"
		+ " WHERE IdContact = ?"
		+ " AND TypeDossier = ?"
		+ " AND IdDossier = ?";
	var cx = new edvData(..edvAppli.DataSource);
	var dt = cx.select(sql, [..Row.IdContact, ..Row.TypeDossier, ..Row.IdDossier]);
	if (dt.Rows.Count > 0 && dt.Rows[0].IsNull(0))
		..Row.Line = 1;
	else
		..Row.Line = dt.Rows[0][0] + 1;
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.Category-->
                        <VAR ShortName="Category" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[PAIN]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.Comment-->
                        <VAR ShortName="Comment" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.CreationDate-->
                        <VAR ShortName="CreationDate" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[01/01/0001 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.CreationIdUser-->
                        <VAR ShortName="CreationIdUser" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.Forfait-->
                        <VAR ShortName="Forfait" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.IdAnal-->
                        <VAR ShortName="IdAnal" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.IdArticle-->
                        <VAR ShortName="IdArticle" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[409]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.IdContact-->
                        <VAR ShortName="IdContact" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[16]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.IdDossier-->
                        <VAR ShortName="IdDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[131215001]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.Label-->
                        <VAR ShortName="Label" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[Boulangerie]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.Line-->
                        <VAR ShortName="Line" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[2]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.Name-->
                        <VAR ShortName="Name" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[VIVARAIS blé 250g]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.Price-->
                        <VAR ShortName="Price" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                            <Value><![CDATA[10]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.Quantity-->
                        <VAR ShortName="Quantity" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.TypeDossier-->
                        <VAR ShortName="TypeDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[CTLOG]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Row.Unit-->
                        <VAR ShortName="Unit" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.LgCatalogue.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCatalogue.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM lgdossier 
WHERE IdContact=:IDCONTACT
AND IdDossier=:IDDOSSIER
AND TypeDossier=:TYPEDOSSIER
AND Line = :LINE]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCatalogue.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO lgdossier (IdContact,IdDossier,TypeDossier,Line,IdArticle,Quantity,Unit,Price,Forfait,Comment)
VALUES(:IDCONTACT,:IDDOSSIER,:TYPEDOSSIER,:LINE,:IDARTICLE,:QUANTITY,:UNIT,:PRICE,:FORFAIT,:COMMENT)
]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCatalogue.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT A.Category, CA.Label, A.Name, LG.*
FROM lgdossier LG
INNER JOIN article A
	ON A.IdArticle = LG.IdArticle
INNER JOIN parameter CA
	ON CA.Domain = 'ARTCAT'
	AND A.Category = CA.IdParam
WHERE IdDossier = :ID
ORDER BY CA.Label, A.Category

]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[111101001]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.SQLSelect.IDCONTACT-->
                        <VAR ShortName="IDCONTACT" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[4]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.SQLSelect.IDFOURN-->
                        <VAR ShortName="IDFOURN" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[4]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCatalogue.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE lgdossier 
SET IdArticle = :IDARTICLE
,Quantity = :QUANTITY
,Unit = :UNIT
,Price = :PRICE
,Forfait = :FORFAIT
,Comment = :COMMENT
WHERE IdContact=:IDCONTACT
AND IdDossier=:IDDOSSIER
AND TypeDossier=:TYPEDOSSIER
AND Line = :LINE]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCatalogue.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.LgCatalogue.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.LgCommande-->
                <VAR ShortName="LgCommande" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="IdDossier" type="xs:int" minOccurs="0" /><xs:element name="TypeDossier" type="xs:string" minOccurs="0" /><xs:element name="Line" type="xs:int" minOccurs="0" /><xs:element name="IdArticle" type="xs:int" minOccurs="0" /><xs:element name="Quantity" type="xs:decimal" minOccurs="0" /><xs:element name="Unit" type="xs:string" minOccurs="0" /><xs:element name="Price" type="xs:decimal" minOccurs="0" /><xs:element name="Forfait" type="xs:decimal" minOccurs="0" /><xs:element name="Comment" type="xs:string" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.LgCommande.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.LgCommande.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.LgCommande.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.LgCommande.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCommande.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?throw new EDVException("non développé")?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.LgCommande.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
var dtRow = arguments.DataRow;
var isLgDossier = !dtRow.IsNull("Line");
var onchange = !arguments.Status || arguments.Status != "CLOSED"
				? "onchange=\"LgCommandeSubmitCheck(this);\""
				: "";
				
var price : Double = dtRow.IsNull("PriceCTLOG") ? dtRow.IsNull("PriceT") ? "" : dtRow["PriceT"] : dtRow["PriceCTLOG"];
var unit = dtRow.IsNull("UnitCTLOG") ? dtRow.IsNull("UnitT") ? "" : dtRow["UnitT"] : dtRow["UnitCTLOG"];

if(!arguments.FormatEMail){
	var image = arguments.FormatEMail || dtRow.IsNull("Image") || dtRow["Image"] == "" ? "" : dtRow["Image"];
?><form method="post" action="?" class="edvEditor lgCmd">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdContact" value="<?=arguments.IdContact?>"/>
<input type="hidden" name="Row.IdDossier" value="<?=arguments.IdDossier?>"/>
<input type="hidden" name="Row.TypeDossier" value="<?=arguments.TypeDossier?>"/>
<input type="hidden" name="Row.Line" value="<?=isLgDossier ? dtRow["Line"] : 0?>"/>
<input type="hidden" name="Row.IdArticle" value="<?=dtRow["IdArticle"]?>"/>
<table><tbody><tr>
<td><div class="imgArticle"><?
	if(image != ""){
		?><img src="Article.Image/<?=image?>" class="article"/><?
	}?></div>
<td><span class="NameA"><?=dtRow["NameA"]?><?
	if(dtRow["SortIndex"] == 0){?><span class="edvicon edvimgStar">&nbsp;</span><?}
?></span>

<td><span class="Price"><?=price != "" ? price.ToString("# ##0.##") + " €" : "&nbsp;"?><?=unit != "" ? " / " + unit : ""?></span>

<td><label class="Quantity">Quantité&nbsp;:</label>
<td><input name="Row.Quantity" <?=onchange?>
	value="<?=isLgDossier ? Double(dtRow["Quantity"]).ToString("# ##0.##") : ""?>" size="4">
<td><input name="Row.Unit" value="<?=isLgDossier 
						? dtRow["Unit"] 
						:  unit.match(/[0-9]/) 
							? "" : unit?>"
	<?=onchange?> size="6" maxlength="16"/>
<td><input name="Row.Comment" value="<?=isLgDossier ? dtRow["Comment"].Replace("\"","'") : ""?>"
	<?=onchange?> size="18" maxlength="255"/>
<?if(!arguments.Status || arguments.Status != "CLOSED"){
	?><td><input type="hidden" name="<?=isLgDossier ? "Update" : "Insert"?>" value="true"/>

	<td><a href="#<?=isLgDossier ? "Update" + dtRow["Line"] : "Insert"?>" class="submit <?=isLgDossier ? "save" : "insert"?> edvicon "
		onclick="LgCommandeSubmitCheck(this); return false;">&nbsp;</a>
	<td><a href="" class="submit delete"
		onclick="LgCommandeDelete(this); return false;">&nbsp;</a>
<?}
?></table>
</fieldset></form><?
}
else {
?><span class="NameA"><?=dtRow["NameA"]?></span>
<span class="Price"><?=price != "" ? price.ToString("# ##0.##") + " €" : "&nbsp;"?><?=unit != "" ? " / " + unit : ""?></span>

<label class="Quantity">Quantité :</label>
	<?=isLgDossier ? dtRow["Quantity"].ToString("# ##0.##") : ""?>
	<?=isLgDossier 
		? dtRow["Unit"] 
		:  unit.match(/[0-9]/) 
			? "" : unit?>
<?=isLgDossier 	? dtRow["Comment"].Replace("\"","'") : ""?>
<?//_echocode = _echocode.Replace(newline," ");
}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.LgCommande.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function LgCommandeSubmitCheck(form){
	if(edv.Appli.submitting) return;
	edv.Appli.submitting = true;
	while(form.tagName != "FORM") form = form.parentNode;
	var $form = $(form);
	var value;
	if(!isnumeric(value = $form.find('input[name="Row.Quantity"]')[0].value)){
		alert("Merci de mettre un nombre en quantité");
		edv.Appli.submitting = false;
		return false;
	}
	if(value == 0){
		alert("Merci de préciser la quantité");
		edv.Appli.submitting = false;
		return false;
	}
	edv.Wait.Show();
	var result = edvSubmit(form);	
	edv.Wait.Hide();
	if(result && result!=""){
		alert(result);
		edv.Appli.submitting = false;
		return false;
	}
	$form.find('input[name="Row.Line"]')[0].value = edvGet("<?=..Row.Line:Name?>");
	$form.find('input[name="Insert"]').attr("name","Update");
	$form.find('.submit.insert').removeClass("insert").addClass("save");
	$form
		.removeClass("Out")
		.addClass("LgDossier")
		.addClass("In")
		;
	edv.Appli.submitting = false;
	return true;
}
function LgCommandeDelete(form){
	while(form.tagName != "FORM") form = form.parentNode;
	$(form).find('input[name="Update"]').attr("name","Delete");
	edv.Wait.Show();
	result = edvSubmit(form);
	edv.Wait.Hide();
	$(form).find('input[name="Delete"]').attr("name","Insert");
	$(form).find('.submit.save').removeClass("save").addClass("insert");
	$(form)
		.removeClass("In")
		.addClass("LgDossier")
		.addClass("Out")
		;
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.LgCommande.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.LgCommande.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<div name="<?=:Name?>">
<form method="post" action="">
<fieldset><legend>Nouvelle commande</legend>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdContact" value="0"/>
<input type="hidden" name="Row.IdClient" value="<?=..edvAppli.User.Id?>"/>
<input type="hidden" name="Row.TypeDossier" value="CMD"/>
Veuillez sélectionner un fournisseur : <?=..Fournisseur.Html.Combo({
	name : "Row.IdFournisseur", 
	onClick : "$(this.parentNode).children('a.submit')[0].style.display='inline'"
})?>		

<input type="hidden" name="Insert" value="true"/>
<a href="" class="submit imgEDVTypeButton" style="padding-left:1.3em;display:none"
	onclick="CommandeInsertSubmit(this); return false;">Continuer</a>
</fieldset>

</form>
<?=:js?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.LgCommande.Html.New.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function CommandeInsertSubmit(form){
	while(form.tagName != "FORM") form = form.parentNode;
	edv.Wait.Show();
	var result = edvSubmit(form);
	if(result){
		alert(result);
		return false;
	}
	edvGetHTML("PageInner", "<?=..Visual.Inner.@:Name?>=<?=..Edit:Name?>");

	edv.Wait.Hide();
	return true;
}
function CommandeSetIdFournisseur(form, idFournisseur){
	while(form.tagName != "FORM") form = form.parentNode;
	$(form).find('input[name="Row.IdFournisseur"]')[0].value=idFournisseur;
	$(form).find('a.submit')[0].style.display='inline';	
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.LgCommande.Html.New.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.LgCommande.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) edvReturn("arguments manquants");
var artsInDossier = {};
if(arguments.Id) arguments.IdDossier = arguments.Id;
var cx = new edvData(session.DataSource);
if(!arguments.DataTable){
	var args = [arguments.IdContact, arguments.IdDossier, arguments.TypeDossier];
	var sql = "SELECT D.IdClient, D.Status, LG.*, A.Name AS NameA, A.Image, A.SortIndex"
			+ ", CTLOG.Unit AS UnitCTLOG, CTLOG.Price AS PriceCTLOG"
			+ ", T.Unit AS UnitT, T.Price AS PriceT"
			+ " FROM dossier D"
			+ " INNER JOIN lgdossier LG"
				+ " ON LG.IdContact = D.IdContact"
				+ " AND LG.IdDossier = D.IdDossier"
				+ " AND LG.TypeDossier = D.TypeDossier"
			+ " INNER JOIN lgdossier CTLOG"
				+ " ON CTLOG.IdContact = D.IdContact"
				+ " AND CTLOG.IdDossier = D.IdDossierRef"
				+ " AND CTLOG.TypeDossier = 'CTLOG'"
				+ " AND CTLOG.IdArticle = LG.IdArticle"
			+ " INNER JOIN article A"
				+ " ON LG.IdArticle = A.IdArticle"
			+ " LEFT JOIN tarif T"
				+ " ON T.IdFournisseur = A.IdFournisseur"
				+ " AND T.IdArticle = A.IdArticle"
				+ " AND D.DateDossier BETWEEN T.DateFrom AND T.DateTo"
			+ " WHERE LG.IdContact = ?"
			+ " AND LG.IdDossier = ?"
			+ " AND LG.TypeDossier = ?"
			+ " ORDER BY LG.Line";
	arguments.DataTable = cx.select(sql, args);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}
?><ul class="LgDossier In"><?
for(var dtRow in arguments.DataTable.Rows){
	arguments.DataRow = dtRow;
	artsInDossier[dtRow["IdArticle"]] = true;
?>	<li><?=Edit(arguments, edvClient)?></li><?
}
?></ul><?
if(!arguments.FormatEMail) echo(Edit.js);
if(!arguments.OnlyInLines && (!arguments.Status || arguments.Status != "CLOSED")){
	sql = "SELECT Null AS Line, A.IdArticle, A.Name AS NameA, A.Image, A.Category, PC.Label AS CategoryLabel"
			+ ", CTLOG.Unit AS UnitCTLOG, CTLOG.Price AS PriceCTLOG"
			+ ", T.Unit AS UnitT, T.Price AS PriceT, A.SortIndex"
			+ " FROM dossier D"
			+ " INNER JOIN fournisseur F"
				+ " ON D.IdContact = F.IdContact"
			+ " LEFT JOIN lgdossier CTLOG"
				+ " ON CTLOG.IdContact = D.IdContact"
				+ " AND CTLOG.IdDossier = D.IdDossierRef"
				+ " AND CTLOG.TypeDossier = 'CTLOG'"
			+ " LEFT JOIN article A"
				+ " ON A.IdFournisseur = F.IdFournisseur"
				+ " AND CTLOG.IdArticle = A.IdArticle"
				+ " AND A.Enabled = 1"
			+ " LEFT JOIN parameter PC"
				+ " ON A.Category = PC.IdParam"
				+ " AND PC.Domain = 'ARTCAT'"
			+ " INNER JOIN tarif T"
				+ " ON T.IdFournisseur = A.IdFournisseur"
				+ " AND T.IdArticle = A.IdArticle"
				+ " AND CURDATE() BETWEEN T.DateFrom AND T.DateTo"
			+ " WHERE D.IdContact = ?"
			+ " AND D.IdDossier = ?"
			+ " AND D.TypeDossier = ?"
			+ " ORDER BY PC.SortIndex, PC.Label, A.Name";
	
	arguments.DataTable = cx.select(sql, [arguments.IdContact, arguments.IdDossier, arguments.TypeDossier]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	?><ul class="LgDossier Out"><?
	var curCategory;
	for(var dtRow in arguments.DataTable.Rows){
		if(!artsInDossier[dtRow["IdArticle"]]){
			if(curCategory != dtRow["Category"]) {
				if (curCategory) echo("</ul>");
				curCategory = dtRow["Category"];
				?><ul class="sub"><span class="category"><?=dtRow.IsNull("CategoryLabel") ? curCategory : dtRow["CategoryLabel"]?></span><?
			}
			arguments.DataRow = dtRow;
			?><li><?=Edit(arguments, edvClient)?></li><?
		}
	}
	if (curCategory) echo("</ul>");
}
?></ul>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.LgCommande.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.LgCommande.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCommande.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.DB.LgCommande.Insert.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Checking){
	var cx = edv.Data(session.DataSource);
	var dt;
	var varRowChildren = ..Row:GetChildren();
	var params = [varRowChildren["IdContact"].Value, varRowChildren["IdDossier"].Value, varRowChildren["TypeDossier"].Value, varRowChildren["IdArticle"].Value];
	dt = cx.select("SELECT Line"
		+ " FROM lgdossier"
		+ " WHERE IdContact = ?"
		+ " AND IdDossier = ?"
		+ " AND TypeDossier = ?"
		+ " AND IDARTICLE = ?"
		, params);
	if(dt.Rows.Count){
		.. = false;
		..Row.Line = dt.Rows[0][0];
		..Update;
	}
	else {
		params = [params[0], params[1], params[2]];
		var sql = "SELECT MAX(Line) FROM lgdossier"
			+ " WHERE IdContact = ?"
			+ " AND IdDossier = ?"
			+ " AND TypeDossier = ?"
			;
		dt = cx.select(sql, params);
		if (dt.Rows.Count > 0 && dt.Rows[0].IsNull(0))
			..Row.Line = 1;
		else
			..Row.Line = dt.Rows[0][0] + 1;
	}
	cx.close();
}
null;
]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCommande.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.LgCommande.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.Comment-->
                        <VAR ShortName="Comment" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.Forfait-->
                        <VAR ShortName="Forfait" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.IdArticle-->
                        <VAR ShortName="IdArticle" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[410]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.IdContact-->
                        <VAR ShortName="IdContact" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[16]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.IdDossier-->
                        <VAR ShortName="IdDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[131218001]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.Line-->
                        <VAR ShortName="Line" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[2]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.Price-->
                        <VAR ShortName="Price" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.Quantity-->
                        <VAR ShortName="Quantity" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                            <Value><![CDATA[1]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.TypeDossier-->
                        <VAR ShortName="TypeDossier" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[CMD]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.LgCommande.Row.Unit-->
                        <VAR ShortName="Unit" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[H]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCommande.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.LgCommande.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCommande.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM lgdossier 
WHERE IdContact=:IDCONTACT
AND IdDossier=:IDDOSSIER
AND TypeDossier=:TYPEDOSSIER
AND Line = :LINE]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCommande.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCommande.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO lgdossier (IdContact,IdDossier,TypeDossier,Line,IdArticle,Quantity,Unit,Price,Forfait,Comment)
VALUES(:IDCONTACT,:IDDOSSIER,:TYPEDOSSIER,:LINE,:IDARTICLE,:QUANTITY,:UNIT,:PRICE,:FORFAIT,:COMMENT)
]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCommande.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCommande.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * FROM lgdossier 
WHERE IdContact = :IDCONTACT
AND IdDossier = :ID

]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCommande.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.LgCommande.SQLSelect.IDCONTACT-->
                        <VAR ShortName="IDCONTACT" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.LgCommande.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCommande.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE lgdossier 
SET IdArticle = :IDARTICLE
,Quantity = :QUANTITY
,Unit = :UNIT
,Price = :PRICE
,Forfait = :FORFAIT
,Comment = :COMMENT
WHERE IdContact=:IDCONTACT
AND IdDossier=:IDDOSSIER
AND TypeDossier=:TYPEDOSSIER
AND Line = :LINE]]></Value>
                        <!--.EDV.CoopEShop.DB.LgCommande.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.LgCommande.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.LgCommande.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.LgCommande.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.Parameter-->
                <VAR ShortName="Parameter" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="Domain" type="xs:string" minOccurs="0" /><xs:element name="IdParam" type="xs:string" minOccurs="0" /><xs:element name="Label" type="xs:string" minOccurs="0" /><xs:element name="Value" type="xs:string" minOccurs="0" /><xs:element name="ValueType" type="xs:string" minOccurs="0" /><xs:element name="Data" type="xs:string" minOccurs="0" /><xs:element name="SortIndex" type="xs:int" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.Parameter.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Parameter.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.Parameter.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.Parameter.Html.Combo-->
                        <VAR ShortName="Combo" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};

var cx = new edvData(session.DataSource);
if(!arguments.GetOptions){
	var sql = "SELECT P.*"
			+ " FROM parameter P"
			+ " WHERE Domain = ?";
	if (arguments.Id)
		sql += " AND IdParam = ?";
	sql += " ORDER BY SortIndex, Label";
	if (!arguments.Id)
		sql += " LIMIT 0,0";

	arguments.DataTable = cx.select(sql, [arguments.Domain, arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0){?>
		<select name="<?=arguments.name?>" value="" <?=arguments.className ? "class=\"" + arguments.className + "\"" : ""?>
			onmousedown="$(this).html(edvGetHTML('<?=:Name?>', 'edvArgs={GetOptions:true, Domain:\'<?=arguments.Domain?>\'}')); this.onmousedown=null;">
		</select>
	<?}
	else {?>
		<select name="<?=arguments.name?>" value="<?=arguments.Id?>" <?=arguments.className ? "class=\"" + arguments.className + "\"" : ""?>
			onmousedown="$(this).html(edvGetHTML('<?=:Name?>', 'edvArgs={GetOptions:true, Domain : \'<?=arguments.Domain?>\', Id:\'<?=arguments.Id?>\'}')); this.onmousedown=null;">
		<option value="<?=arguments.Id?>" selected="selected"><?=arguments.DataTable.Rows[0]["Label"]?></option>
		</select>
	<?}
}
else {
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	var sql = "SELECT P.*"
			+ " FROM parameter P"
			+ " WHERE P.Domain = ?";
	if (arguments.SQLWhere && arguments.SQLWhere != "")
		sql += " AND (" + arguments.SQLWhere + ")";
	sql += " ORDER BY P.SortIndex, P.Label";
	
	arguments.DataTable = cx.select(sql, [arguments.Domain]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(!arguments.Id && arguments.value) arguments.Id = arguments.value;
	for(var dtRow in arguments.DataTable.Rows){
	?>	<option value="<?=dtRow["IdParam"]?>" <?=arguments.Id == dtRow["IdParam"] ? "selected=\"selected\"" : ""?>>
			<?=dtRow["Label"]?>
	</option>
<?}	
}
?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Combo.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Combo.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[20]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Combo._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) throw new EDVException("Aucun argument");
var sql;
var cx = new edvData(session.DataSource);
if(arguments.Domain == "ARTCAT"){
	sql = "SELECT 1"
		+ " FROM article a"
		+ " WHERE a.category = ?"
		+ " LIMIT 1";
	if(cx.select(sql, [arguments.Id]).Rows.Count > 0)
		throw new EDVException("Catégorie utilisée par au moins un article.");
}
if(arguments.Execute){
	if(arguments.Domain == '' || arguments.IdParam == '')
		throw new EDVException("Identifiants incorrects");
	sql = "DELETE FROM parameter "
		+ " WHERE Domain = ? AND IdParam = ?";
	var result = cx.execute(sql, [arguments.Domain, arguments.Id]);
	if (typeof(result) === "string")
		throw new EDVException(result);
	echo("");
}
else {
	
	sql = "SELECT Domain, IdParam"
		+ " FROM parameter P"
		+ " WHERE P.Domain = ? AND P.IdParam = ?";
	arguments.DataTable = cx.select(sql, [arguments.Domain, arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Paramètre inconnu");
	var dtRow = arguments.DataTable.Rows[0];
	
?><div class="MessageBox edvEditor">
	Etes vous sûr de vouloir supprimer le paramètre <?=dtRow["Domain"]?>/<?=dtRow["IdParam"]?> ?
	<br><a class="submit delete" href="?" onclick="return ParameterDeleteExecute('<?=arguments.Domain?>','<?=arguments.Id?>')">
	Supprimer</a>
	<script>
	function ParameterDeleteExecute(domain, id){
		var result;
		if((result = edvGetHTML("<?=:Name?>", "edvargs={Domain:'" + domain + "', Id:'" + id + "', Execute:true}"))==""
		|| typeof(result) != "string")
			return true;
		alert(result);
		return false;
	}
	</script>
</div>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if(!arguments.DataRow && !arguments.DataTable){
	var cx = new edvData(session.DataSource);
	var sql = "SELECT P.*, D.Label AS DomainLabel"
			+ " FROM parameter P"
			+ " LEFT JOIN parameter D"
				+ " ON D.Domain = '.'"
				+ " AND P.Domain = D.IdParam"
			+ " WHERE P.Domain = ?"
			+ " AND P.IdParam = ?";
	//edvInfo = sql;
	arguments.DataTable = cx.select(sql, [arguments.Domain,arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucune ligne pour ces paramètres : " + edvjs.json(arguments));		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
?>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.Domain" value="<?=dtRow["Domain"]?>"/>
<input type="hidden" name="Row.IdParam" value="<?=dtRow["IdParam"]?>"/>

<label>Nom : </label><input name="Row.Label" size="33" value="<?=dtRow["Label"]?>">
<br/>
<label>Valeur : </label><textarea name="Row.Value" rows="4" cols="50"><?=dtRow["Value"]?></textarea>
<br/>
<label>Type : </label><input name="Row.ValueType" size="8" value="<?=dtRow["ValueType"]?>">
<br/>
<label>Données : </label><textarea name="Row.Data" rows="4" cols="50"><?=dtRow["Data"]?></textarea>
<br/>
<label>Index du tri : </label><input name="Row.SortIndex" size="8" value="<?=dtRow["SortIndex"]?>">
<br/>

<input type="hidden" name="Update" value="true"/>
<a href="#<?=arguments.Domain?>/<?=arguments.Id?>" class="submit save" onclick="ParameterSubmit(this); return false;">Enregistrer</a>

</fieldset>
</form>
<?=:js?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function ParameterSubmit(form){
	while(form.tagName != "FORM") form = form.parentNode;
	if($(form).find('input[name="Row.IdParam"]')[0].value == ""){
		alert("L'identifiant est obligatoire");
		return false;
	}
	if($(form).find('input[name="Row.Domain"]')[0].value == ""){
		alert("Le domaine est obligatoire");
		return false;
	}
	edv.Wait.Show();
	var result = edvSubmit(form);
	edv.Wait.Hide();
	if(result) alert(result);
	return result="";
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Parameter.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
if(!arguments.MaxRows)
	arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;

var rowsHtml = Rows(arguments, edvClient);
if(!arguments.DataTable || !arguments.DataTable.Rows)
	throw new EDVException(rowsHtml);
?>
<span class="edvDataTable">
	<span class="title">Paramètres</span>
	<span class="edvNavigator">
		<param class="edvProperty" name="MaxRows" value="<?=arguments.MaxRows?>"/>
		<input class="filter" size="8" value="<?=Rows.Filter?>"
			onchange="edvDataTable(this).Navigator.SetFilter(this.value)"
			onkeydown="if(/msie|Trident/i.test(navigator.userAgent) && getKeyPress(event)==13) this.onchange();"/>
		&nbsp;<a href="" onclick="edvDataTable(this).Navigator.RefreshRows();return false;"><img src="Images/Search16.png"/></a>
		&nbsp;
		<a <?if(arguments.Limit==0){?>style="display:none"<?}?> 
			class="previous" href="#" onclick="edvDataTable(this).Navigator.Previous()">&lt;&lt; précédent</a>
		<span class="current" style="display:none"><?
			if(arguments.DataTable.Rows.Count == 0){?>
				<i>fin de liste</i>
			<?}
		?></span>
		<a <?if(arguments.DataTable.Rows.Count < arguments.MaxRows){?>style="display:none"<?}?> 
			class="next" href="#" onclick="edvDataTable(this).Navigator.Next()">suivant &gt;&gt;</a>
		
	</span>

	<span class="edvRows" name="<?=:Domain?>Rows">
		<param class="edvProperty" name="Edit.Title" value="Contact"/>
		<?=rowsHtml?>
	</span>

</span>


]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
?>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.Domain" value="<?=arguments.Domain?>"/>

<label>Identifiant : </label><input name="Row.IdParam" size="16" maxlength="16" value="">
<br/>
<label>Nom : </label><input name="Row.Label" size="33" value="">
<br/>
<label>Valeur : </label><textarea name="Row.Value" rows="4" cols="50"></textarea>
<br/>
<label>Type : </label><input name="Row.ValueType" size="8" value="">
<br/>
<label>Données : </label><textarea name="Row.Data" rows="4" cols="50"></textarea>
<br/>
<label>Index du tri : </label><input name="Row.SortIndex" size="8" value="999">

<br/>
<input type="hidden" name="Insert" value="true"/>
<a class="submit save" onclick="if(ParameterSubmitInsert(this)) edvDialog(this).Close(); return false;">Enregistrer</a>
</fieldset>

</form>

<?=:js?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.New.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function ParameterSubmitInsert(form){
	while(form.tagName != "FORM") form = form.parentNode;
	if($(form).find('input[name="Row.IdParam"]')[0].value == ""){
		alert("La saisie du code de paramètre est obligatoire");
		return false;
	}
	edv.Wait.Show();
	var result = edvSubmit(form);
	if(result && result != ""){
		alert(result);
		result = false;
	}
	else {
		result = true;
		edvDialog(form).Refresh();
	}
	edv.Wait.Hide();
	return result;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Parameter.Html.New.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) edvReturn("arguments manquants");
if(!arguments.DataTable){
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	if(!arguments.Filter) 
		arguments.Filter = :Filter;
	var sql = "SELECT P.*, D.Label AS DomainLabel"
			+ " FROM parameter P"
			+ " LEFT JOIN parameter D"
				+ " ON D.Domain = '.'"
				+ " AND P.Domain = D.IdParam";
	
	if(!arguments.Domain) arguments.Domain = edvSender["Domain"].Value;
	
	var hasWhere = arguments.Domain != null && arguments.Domain;
	if (hasWhere)
		sql += " WHERE (P.Domain " + (arguments.Domain.Contains("%") ? " LIKE '" : " = '") + arguments.Domain + "')";

	if (!(session.User.Rights[".Admin"] && session.User.Rights[".Admin"] > 0)){
		sql += (hasWhere ? " AND " : " WHERE ") + " P.Domain IN ('ARTCAT')";
		hasWhere = true;
	}

	if (arguments.SQLWhere && arguments.SQLWhere != ""){
		sql += (hasWhere ? " AND " : " WHERE ") +  "(" + arguments.SQLWhere + ")";
		hasWhere = true;
	}

	if (arguments.Filter && arguments.Filter != ""){
		if (arguments.Filter.ToUpper().StartsWith("WHERE "))
			sql += " " + arguments.Filter;
		else
			sql += (hasWhere ? " AND" : " WHERE") + " (P.IdParam LIKE '%" + arguments.Filter + "%')";
		hasWhere = true;
	}
	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY " + arguments.OrderBy;
	else
		sql += " ORDER BY P.Domain, SortIndex, Label";
	sql += " LIMIT " + arguments.Limit + ", " + arguments.MaxRows;
	
	arguments.DataTable = (new edvData(..edvAppli.DataSource)).select(sql, [arguments.Id]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}
?><ul class="parameter">
<?var curDomain;
var isDomain;
var domainLabel;
for(var dtRow in arguments.DataTable.Rows){
	if (curDomain != dtRow["Domain"]){
		if (curDomain) echo("</ul>");
		curDomain = dtRow["Domain"];
		isDomain = curDomain == ".";
		?><ul class="sub"><?
			?><a href="#<?=curDomain?>" <?
				?> onclick="edvDataTable(this).Rows.Edit('edvargs={Domain : \'.\', Id:\'<?=curDomain?>\'}',{title : 'Domaine <?=dtRow["Domain"]?>'});return false;"><?
				domainLabel = dtRow.IsNull("DomainLabel") ? dtRow["Domain"] : dtRow["DomainLabel"];
				?><?=domainLabel?></a>&nbsp;<?
			?><a href="#<?=curDomain?>" onclick="edvDataTable(this).Navigator.NewRow('edvargs={Domain : \'<?=curDomain?>\'}',{title : '<?=domainLabel.Replace("'","\\'")?> - Nouveau'});return false;"><?
				?><img src="Images/Plus16.png" alt="Nouveau"/></a><?
	}
		
	?><li><a href="#<?=dtRow["IdParam"]?>" 
			onclick="edvDataTable(this).Rows.Edit('edvargs={Domain:\'<?=dtRow["Domain"]?>\', Id:\'<?=dtRow["IdParam"]?>\'}', {title:'<?=domainLabel.Replace("'","\\'")?> - <?=dtRow["IdParam"]?>'});return false;"><?
		?><?=dtRow["Label"]?></a><?
		if(isDomain){
			?><a href="#" class="add"<?
				?> onclick="edvDataTable(this).Navigator.NewRow('edvargs={Domain:\'<?=dtRow["IdParam"]?>\'}', {title:'<?=dtRow["IdParam"].Replace("'","\\'")?> - Nouveau'});return false;"><?
			?>&nbsp;&nbsp;&nbsp;</a><?
		}
		?><a href="" onclick="return !edvRows(this).DeleteRow('edvargs={Domain:\'<?=dtRow["Domain"]?>\', Id:\'<?=dtRow["IdParam"]?>\'}')">
			<img src="Images/Cross16.png" alt="Supprimer" width="12"></a>
	</li>
<?
}
if (curDomain) echo("</ul>");
?>
</ul>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Rows.Domain-->
                            <VAR ShortName="Domain" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" />
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[100]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Parameter.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.Parameter.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Parameter.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Parameter.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Parameter.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.Parameter.Row.Data-->
                        <VAR ShortName="Data" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA["{ \"image\" : \"edvimgClosed\" }"]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Row.Domain-->
                        <VAR ShortName="Domain" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[FriendType]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Row.IdParam-->
                        <VAR ShortName="IdParam" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[BAN]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Row.Label-->
                        <VAR ShortName="Label" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[Banni(e) / interdit(e)]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Row.SortIndex-->
                        <VAR ShortName="SortIndex" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[99]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.Row.Value-->
                        <VAR ShortName="Value" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Parameter.Row.ValueType-->
                        <VAR ShortName="ValueType" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Parameter.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.Parameter.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Parameter.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM parameter 
WHERE Domain = :DOMAIN
AND IdParam = :ID

]]></Value>
                        <!--.EDV.CoopEShop.DB.Parameter.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Parameter.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO parameter (Domain, IdParam, Label, Value, ValueType, Data)
VALUES(:DOMAIN, :IDPARAM, :LABEL, :VALUE, :VALUETYPE, :DATA)

]]></Value>
                        <!--.EDV.CoopEShop.DB.Parameter.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Parameter.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT *
FROM parameter P
WHERE Domain = :DOMAIN
AND IdParam = :ID
]]></Value>
                        <!--.EDV.CoopEShop.DB.Parameter.SQLSelect.DOMAIN-->
                        <VAR ShortName="DOMAIN" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Parameter.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[2]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Parameter.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Parameter.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE parameter 
SET Label = :LABEL
, Value = :VALUE
, ValueType = :VALUETYPE
, Data = :DATA
, SortIndex = :SORTINDEX
WHERE Domain = :DOMAIN
AND IdParam = :IDPARAM

]]></Value>
                        <!--.EDV.CoopEShop.DB.Parameter.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Parameter.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.Tarif-->
                <VAR ShortName="Tarif" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdFournisseur" type="xs:int" minOccurs="0" /><xs:element name="IdArticle" type="xs:int" minOccurs="0" /><xs:element name="DateFrom" type="xs:dateTime" minOccurs="0" /><xs:element name="DateTo" type="xs:dateTime" minOccurs="0" /><xs:element name="Unit" type="xs:string" minOccurs="0" /><xs:element name="Quantity" type="xs:float" minOccurs="0" /><xs:element name="Price" type="xs:decimal" minOccurs="0" /><xs:element name="Forfait" type="xs:decimal" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.Tarif.Close-->
                    <VAR ShortName="Close" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Tarif.Delete-->
                    <VAR ShortName="Delete" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Tarif.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.Tarif.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.Tarif.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
if(arguments.Execute){
	if(arguments.Id == 0)
		throw new EDVException("Identifiant incorrecte");
	var sql = "DELETE FROM tarif"
			+ " WHERE IdFournisseur = ?"
			+ " AND IdArticle = ?"
			+ " AND DateFrom = ?"
			+ " AND DateTo = ?"
			+ " AND Quantity = ?"
			+ " AND Unit = ?";
	
	var cx = new edvData(session.DataSource);
	var result = cx.execute(sql
		, [arguments.IdFournisseur, arguments.IdArticle
			, DateTime.Parse(arguments.DateFrom)
			, DateTime.Parse(arguments.DateTo)
			, arguments.Quantity , arguments.Unit ]);
	if (typeof(result) === "string")
		throw new EDVException(result);
	echo("");
}
else {
	var sql = "SELECT T.*"
			+ " FROM tarif T"
			+ " WHERE T.IdFournisseur = ?"
			+ " AND T.IdArticle = ?"
			+ " AND T.DateFrom = ?"
			+ " AND T.DateTo = ?"
			+ " AND Quantity = ?"
			+ " AND Unit = ?";
	
	arguments.DataTable = cx.select(sql
		, [arguments.IdFournisseur, arguments.IdArticle
			, DateTime.Parse(arguments.DateFrom)
			, DateTime.Parse(arguments.DateTo)
			, arguments.Quantity , arguments.Unit]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count==0)
		throw new EDVException("Tarif inconnu");
	var dtRow = arguments.DataTable.Rows[0];
	var args = new StringBuilder();
	args.Append("IdFournisseur:" + dtRow["IdFournisseur"]);
	args.Append(",IdArticle:" + dtRow["IdArticle"]);
	args.Append(",DateFrom:'" + dtRow["DateFrom"].ToString("dd/MM/yyyy") + "'");
	args.Append(",DateTo:'" + dtRow["DateTo"].ToString("dd/MM/yyyy") + "'");
	args.Append(",Quantity:" + dtRow["Quantity"]);
	args.Append(",Unit:'" + dtRow["Unit"] + "'");	
	args=args.ToString().Replace("'","\\'");
	?>
	<div class="MessageBox edvEditor">
		Etes vous sûr de vouloir supprimer ce tarif ?
		<br><a class="submit delete" href="?" onclick="return TarifDeleteExecute()">
		Supprimer</a>
		<script>
			function TarifDeleteExecute(){
				var result;
				if((result = edvGetHTML("<?=:Name?>", "edvargs={<?=args?>, Execute:true}"))==""
				|| typeof(result) != "string")
					return true;
				alert(result);
				return false;
			}
		</script>
	</div>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Tarif.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) 
	throw new EDVException("pas d'arguments");
if(!DateTime.TryParse(arguments.DateFrom))
	throw new EDVException("DateTime.Parse(arguments.DateFrom)");
if(!DateTime.TryParse(arguments.DateTo))
	throw new EDVException("DateTime.Parse(arguments.DateTo)");
if(!arguments.DataRow && !arguments.DataTable){
	var cx = new edvData(session.DataSource);
	var sql = "SELECT T.*"
			+ " FROM tarif T"
			+ " WHERE T.IdFournisseur = ?"
			+ " AND T.IdArticle = ?"
			+ " AND T.DateFrom = ?"
			+ " AND T.DateTo = ?"
			+ " AND Quantity = ?"
			+ " AND Unit = ?";
	
	arguments.DataTable = cx.select(sql
		, [arguments.IdFournisseur, arguments.IdArticle
			, DateTime.Parse(arguments.DateFrom)
			, DateTime.Parse(arguments.DateTo)
			, arguments.Quantity , arguments.Unit ]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucun enregistrement.");		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
?>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdFournisseur" value="<?=arguments.IdFournisseur?>"/>
<input type="hidden" name="Row.IdArticle" value="<?=arguments.IdArticle?>"/>
<input type="hidden" name="Row.DateFrom" value="<?=arguments.DateFrom?>"/>
<input type="hidden" name="Row.DateTo" value="<?=arguments.DateTo?>"/>
<input type="hidden" name="Row.Quantity" value="<?=arguments.Quantity?>"/>
<input type="hidden" name="Row.DateFromSrc" value="<?=arguments.DateFrom?>"/>
<input type="hidden" name="Row.DateToSrc" value="<?=arguments.DateTo?>"/>
<input type="hidden" name="Row.QuantitySrc" value="<?=arguments.Quantity?>"/>
<input type="hidden" name="Row.UnitSrc" value="<?=arguments.Unit?>"/>
<label>Prix : </label><input name="Row.Price" size="8" value="<?=Double(dtRow["Price"]).ToString("# ##0.##")?>"> €
<br/>
<label>Unité : </label><input name="Row.Unit" size="8" value="<?=dtRow["Unit"]?>">
<br/>
<?if(session.User.IdFournisseur == arguments.IdFournisseur){?>
<input type="hidden" name="Update" value="true"/>
<a class="submit save" onclick="TarifSubmitCheck(this); edvDialog(this).Close(); return false;">Enregistrer</a>
<?}?></fieldset>

</form>
<i>note : les tarifs Catalogue sont prioritaires</i>
<?=:js?>
]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Tarif.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function TarifSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	
	edv.Wait.Show();
	edvSubmit(form);
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Tarif.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Tarif.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
var rowsHtml = Rows(arguments);
?>
<span class="edvDataTable">
	<span class="title">Tarifs</span>
	<span class="edvNavigator">
		<a href="" style="display:none"
			onclick="edvDataTable(this).Navigator.NewRow();return false;"><img src="Images/Plus16.png" alt="Nouveau"/>
		</a>
		&nbsp;		
	</span>

	<span class="edvRows edvDialog" name="<?=:Domain?>Rows">
		<param class="edvProperty" name="Edit.Title" value="Tarif"/>
		<param class="edvProperty" name="edvArgs.IdFournisseur" value="<?=arguments.IdFournisseur?>"/>
		<param class="edvProperty" name="edvArgs.IdArticle" value="<?=arguments.IdArticle?>"/>
		
		<?=rowsHtml?>
	</span>
	<?if(arguments.DataTable.Rows.Count == 0){?>
		<?=New(arguments)?>
	<?}?>
</span>


]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Tarif.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
?>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdFournisseur" value="<?=arguments.IdFournisseur?>"/>
<input type="hidden" name="Row.IdArticle" value="<?=arguments.IdArticle?>"/>
<input type="hidden" name="Row.DateFrom" value="<?=arguments.DateFrom ? arguments.DateFrom : edv.Coopeshop.DateMini?>"/>
<input type="hidden" name="Row.DateTo" value="<?=arguments.DateTo ? arguments.DateTo : edv.Coopeshop.DateMaxi?>"/>
<input type="hidden" name="Row.Quantity" value="<?=arguments.Quantity ? arguments.Quantity : int.MaxValue?>"/>
<label>Prix : </label><input name="Row.Price" size="8" value="0.00"> €
<br/>
<label>Unité : </label><input name="Row.Unit" size="8" value="u">
<br/>
<input type="hidden" name="Insert" value="true"/>
<a class="submit save" onclick="TarifInsertSubmit(this); return false;">Enregistrer</a>
</fieldset>

</form>

<i>note : les tarifs Catalogue sont prioritaires mais un tarif de base est nécessaire.</i>
<?=:js?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Tarif.Html.New.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function TarifInsertSubmit(form){
	while(form.tagName != "FORM") form = form.parentNode;
	edv.Wait.Show();
	edvSubmit(form);
	edvDialog(form).Refresh();
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.Tarif.Html.New.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Tarif.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments.DataTable){
	if(!arguments.IdFournisseur || !arguments.IdArticle)
		throw new EDVException("Argument(s) manquant(s)");
		
	var cx = new edvData(session.DataSource);
	var sqlArgs = [arguments.IdFournisseur, arguments.IdArticle];

	var sql = "SELECT T.*"
			+ " FROM tarif T"
			+ " WHERE T.IdFournisseur = ?"
			+ " AND T.IdArticle = ?"
			;
	if (arguments.SQLWhere && arguments.SQLWhere != "")
		sql += " AND (" + arguments.SQLWhere + ")";

	if(arguments.Date){
		sqlArgs.push(arguments.Date);
		sql += " AND ? BETWEEN T.DateFrom AND T.DateTo";
	}
	
	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY DateFrom, Unit, Quantity";
	
	arguments.DataTable = cx.select(sql, sqlArgs);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}?>
<ul class="tarif">
<?
for(var dtRow in arguments.DataTable.Rows){
?>	<li><?
	var dateFrom = dtRow["DateFrom"];
	if (dateFrom != edv.Coopeshop.DateMini)
		echo("à compter du " + dateFrom.ToString("dd/MM/yyyy"));
	var dateTo = dtRow["DateTo"];
	if (dateTo != edv.Coopeshop.DateMaxi)
		echo("jusqu'au " + dateTo.ToString("dd/MM/yyyy"));
	var args = new StringBuilder();
	args.Append("IdFournisseur:" + dtRow["IdFournisseur"]);
	args.Append(",IdArticle:" + dtRow["IdArticle"]);
	args.Append(",DateFrom:'" + dtRow["DateFrom"].ToString("dd/MM/yyyy") + "'");
	args.Append(",DateTo:'" + dtRow["DateTo"].ToString("dd/MM/yyyy") + "'");
	args.Append(",Quantity:" + dtRow["Quantity"].ToString().Replace(",","."));
	args.Append(",Unit:'" + dtRow["Unit"].Replace("'","\\'") + "'");	
	args=args.ToString().Replace("\\","\\\\").Replace("'","\\'");
	
	?><a class="tarif<?if(dateTo < DateTime.Now.Date) echo(" notEnabled")?>" href="" 
			onclick="edvDataTable(this).Rows.Edit('edvargs={<?=args?>}', {modal:true,title:this.innerHTML});return false;">
		<?=Double(dtRow["Price"]).ToString("# ##0.##")?> € / <?=dtRow["Unit"]?><?=dtRow.IsNull("Forfait") || dtRow["Forfait"]==0 ? "" : " + " + dtRow["Forfait"].ToString("# ###.#") + " €"?></a>
		<?if(session.User.IdFournisseur == dtRow["IdFournisseur"]){?>
			<a href="" onclick="return !edvDataTable(this).Rows.DeleteRow('edvargs={<?=args?>}')">
				<img src="Images/Cross16.png" alt="Supprimer" width="12"></a>
		<?}?>
	</li>
<?}?>
</ul>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.Tarif.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.Tarif.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[20]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.Tarif.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.Tarif.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Tarif.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Tarif.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Tarif.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.DateFrom-->
                        <VAR ShortName="DateFrom" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[01/01/1900 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.DateFromSrc-->
                        <VAR ShortName="DateFromSrc" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[01/01/1900 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.DateTo-->
                        <VAR ShortName="DateTo" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[31/12/2099 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.DateToSrc-->
                        <VAR ShortName="DateToSrc" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DateTime">
                            <Value><![CDATA[31/12/2099 00:00:00]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.Forfait-->
                        <VAR ShortName="Forfait" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                            <Value><![CDATA[0]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.IdArticle-->
                        <VAR ShortName="IdArticle" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[411]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.IdFournisseur-->
                        <VAR ShortName="IdFournisseur" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[10]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.Price-->
                        <VAR ShortName="Price" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                            <Value><![CDATA[40]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.Quantity-->
                        <VAR ShortName="Quantity" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Single">
                            <Value><![CDATA[2,147484E+09]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.QuantitySrc-->
                        <VAR ShortName="QuantitySrc" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Single">
                            <Value><![CDATA[1]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.Unit-->
                        <VAR ShortName="Unit" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[H]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.Tarif.Row.UnitSrc-->
                        <VAR ShortName="UnitSrc" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Tarif.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.Tarif.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Tarif.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM tarif
WHERE IdFournisseur = :IDFOURNISSEUR
AND IdArticle = :IDARTICLE
AND DateFrom = :DATEFROM
AND DateTo = :DATETO
AND Unit = :UNIT
AND Quantity = :QUANTITY]]></Value>
                        <!--.EDV.CoopEShop.DB.Tarif.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Tarif.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO tarif (IdFournisseur, IdArticle, DateFrom, DateTo, Unit, Quantity, Price, Forfait)
VALUES(:IDFOURNISSEUR, :IDARTICLE, :DATEFROM, :DATETO, :UNIT, :QUANTITY, :PRICE, :FORFAIT)
]]></Value>
                        <!--.EDV.CoopEShop.DB.Tarif.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Tarif.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * FROM tarif
WHERE IdArticle = :ID]]></Value>
                        <!--.EDV.CoopEShop.DB.Tarif.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.Tarif.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Tarif.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE tarif
SET DateFrom = :DATEFROM
, DateTo = :DATETO
, Unit = :UNIT
, Quantity = :QUANTITY
, Price = :PRICE
, Forfait = :FORFAIT
WHERE IdFournisseur = :IDFOURNISSEUR
AND IdArticle = :IDARTICLE
AND DateFrom = :DATEFROMSRC
AND DateTo = :DATETOSRC
AND Unit = :UNITSRC
AND Quantity = :QUANTITYSRC]]></Value>
                        <!--.EDV.CoopEShop.DB.Tarif.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Tarif.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                    <!--.EDV.CoopEShop.DB.Tarif.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Tarif.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.User-->
                <VAR ShortName="User" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdUser" type="xs:int" minOccurs="0" /><xs:element name="Enabled" type="xs:short" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.User.EMail-->
                    <VAR ShortName="EMail" ClassName="EMail@EDVMail" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.User.EMail.AskConfirmation-->
                        <VAR ShortName="AskConfirmation" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Value><![CDATA[False]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.Attachments-->
                        <VAR ShortName="Attachments" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Text" />
                        <!--.EDV.CoopEShop.DB.User.EMail.CC-->
                        <VAR ShortName="CC" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.User.EMail.CCI-->
                        <VAR ShortName="CCI" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.DB.User.EMail.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments={};
?><form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=..:Name?>"/>
<input type="hidden" name="edvar" value="Status"/>
<input type="hidden" name="Status" value=""/>
<input type="hidden" name="Attachments" value=""/>
<input type="hidden" name="AskConfirmation" value="false"/>
<input type="hidden" name="IsHTML" value="true"/>
<input type="hidden" name="CCI" value=""/>
<label>De : </label><input name="ReplyTo" size="53" disabled="disabled" value="<?=arguments.From ? arguments.From : session.User.EMail?>"/>
<br/>
<label>A : </label><input name="To" size="53" value="<?=arguments.To ? arguments.To : session.User.EMail?>"/>
<br/>
<label>Copie : </label><input name="CC" size="53" value="<?=arguments.CC ? arguments.CC : session.User.EMail?>"/>
<br/>
<label>Objet : </label><input name="Subject" size="53" value="<?=arguments.Subject ? arguments.Subject : ..edvAppli.Title?>"/>
<br/>
<label>Message : </label><textarea name="Message" rows="4" cols="51"><?=arguments.Message ? arguments.Message : ""?></textarea>
<br/>

<input type="hidden" name="Message.Signature.Append" value="true"/>
<input type="hidden" name="Message.Format" value="true"/>
<input type="hidden" name="Send" value="true"/>
	<a href="#EMail" class="submit save" onclick="EMailSubmitCheck(this); return false;">Envoyer le message</a>
</fieldset>
</form>
<?=:js?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.User.EMail.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function EMailSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	if($(form).find('input[name="To"]')[0].value == ""){
		alert("L'adresse email du destinataire est obligatoire");
		return false;
	}
	edv.Wait.Show();
	edvSubmit(form);
	edvDialog.Show("<?=WaitSend:Name?>","",{title:'Envoi du message'},"edvEditor");
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.User.EMail.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.User.EMail.Edit.WaitSend-->
                            <VAR ShortName="WaitSend" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?if(edvServer.WaitUntil("!..Send", 10000, edvClient, :Object))
	if(..Status == "Ok")
		echo("Le message est bien parti");
	else
		echo(..Status);
else {?>
	Envoi en cours...
	<br><a href="" onclick="edvDialog(this).Refresh()">cliquez ici pour voir si le message est parti"</a>
<?}?>]]></Value>
                                <!--.EDV.CoopEShop.DB.User.EMail.Edit.WaitSend._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.User.EMail.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.From-->
                        <VAR ShortName="From" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                            <Script><![CDATA[..edvAppli.EMail.From]]></Script>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.IsHTML-->
                        <VAR ShortName="IsHTML" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Value><![CDATA[True]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.Message-->
                        <VAR ShortName="Message" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Text">
                            <Value><![CDATA[Bonjour,<br>A la demande de Client de démo,<br>votre nouveau mot de passe est : DWHHCBMGDUOF<br><br>Au plaisir.]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.User.EMail.Message.Format-->
                            <VAR ShortName="Format" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                                <!--.EDV.CoopEShop.DB.User.EMail.Message.Format.OnChanging-->
                                <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                    <Script><![CDATA[when(..:Changing)
{
	..Message = (..Message).Replace("\r","<br>").Replace("\n","");
}
null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.User.EMail.Message.Signature-->
                            <VAR ShortName="Signature" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?var to = ..To;
	if(to.IndexOf(";") == -1){
		var varReplyTo = ..ReplyTo:Object;
		var varFrom = ..From:Object;
		var label : String;
		if((..Subject).Contains("CoopEShop", StringComparison.InvariantCultureIgnoreCase)
		|| String.Compare(..From, "admin@coopeshop.net", StringComparison.InvariantCultureIgnoreCase))
			label = "accéder au site";
		else
			label = "accéder au site CoopEShop";
		if(varReplyTo.Value && varReplyTo.Value != varFrom.Value){
			?><br><a href="mailto:<?=varReplyTo.Value?>"><?=varReplyTo.Value?></a><br><?
		}
		?><br><a href="http://coopeshop.net/edv/CoopEShop/.EDV.CoopEShop.edvsess?edvargs.UserKey=<?=to?>"><?=label?></a><?
}?>]]></Value>
                                <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                                <!--.EDV.CoopEShop.DB.User.EMail.Message.Signature.Append-->
                                <VAR ShortName="Append" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                                    <!--.EDV.CoopEShop.DB.User.EMail.Message.Signature.Append.OnChanging-->
                                    <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                        <Script><![CDATA[when(..:Changing)
{
	..Message += ...();
}
null;]]></Script>
                                    </VAR>
                                </VAR>
                                <!--.EDV.CoopEShop.DB.User.EMail.Message.Signature._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
	Message = arguments.Message ? arguments.Message : "";
	IsHtml = Boolean(arguments.IsHtml == undefined || arguments.IsHtml);
	CC = arguments.CC ? arguments.CC : "";
	CCI = arguments.CCI ? arguments.CCI : "";
	AskConfirmation = arguments.AskConfirmation != undefined && Boolean(arguments.AskConfirmation);
	Attachments = arguments.Attachments ? arguments.Attachments : "";
	To = arguments.To ? arguments.To : session.User.EMail;
	ReplyTo = arguments.ReplyTo ? arguments.ReplyTo : session.User.EMail;
	Subject= arguments.Subject? arguments.Subject: ..edvAppli.Title;
?>]]></Value>
                            <!--.EDV.CoopEShop.DB.User.EMail.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.ReplyTo-->
                        <VAR ShortName="ReplyTo" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[demo@coopeshop.net]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.Send-->
                        <VAR ShortName="Send" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean" Control="EDVCtrlButton">
                            <Value><![CDATA[False]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.Smtp-->
                        <VAR ShortName="Smtp" ClassName="Smtp@EDVMail" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                            <Script><![CDATA[..edvAppli.EMail.Smtp]]></Script>
                            <!--.EDV.CoopEShop.DB.User.EMail.Smtp.Password-->
                            <VAR ShortName="Password" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Password">
                                <Script><![CDATA[..edvAppli.EMail.Smtp.Password]]></Script>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.User.EMail.Smtp.Port-->
                            <VAR ShortName="Port" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer">
                                <Script><![CDATA[..edvAppli.EMail.Smtp.Port]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.Status-->
                        <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                            <Value><![CDATA[Ok]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.Subject-->
                        <VAR ShortName="Subject" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[CoopEShop - L'échoppe en coop - Nouveau mot de passe]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.EMail.To-->
                        <VAR ShortName="To" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[admin@coopeshop.net]]></Value>
                            <!--.EDV.CoopEShop.DB.User.EMail.To.AlwaysAdmin-->
                            <VAR ShortName="AlwaysAdmin" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                                <Value><![CDATA[True]]></Value>
                                <!--.EDV.CoopEShop.DB.User.EMail.To.AlwaysAdmin.OnScripting-->
                                <VAR ShortName="OnScripting" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                    <Script><![CDATA[when(:Scripting)
{
	.. = !me:IsSys;
}
null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.User.EMail.To.OnChecking-->
                            <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when((..:Checking || true) && AlwaysAdmin)
{
	.. = ..From;
}
null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.User.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.DB.User.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.DB.User.Html.CSS-->
                        <VAR ShortName="CSS" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.User.Html.CSS._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.User.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if (!arguments.Id) arguments.Id = session.User.IdUser;
/*var sql = "SELECT * FROM user U"
		+ " INNER JOIN contact C"
		+ " ON U.IdUser = C.IdContact"
		+ " WHERE IdUser = ?"
		+ " ORDER BY ContactType";*/
	//requête compatible avec Contact.Html.Edit
	var sql = "SELECT  DISTINCT C.*, U.*, ami.IdFriend, ami.FriendType, ptf.Label as ptfLabel"
			+ " FROM contact C"
			+ " LEFT JOIN contact CRef"
				+ " ON C.IdContactRef = CRef.IdContact"
			+ " LEFT JOIN user U"
				+ " ON (C.IdContact = U.IdUser OR CRef.IdContact = U.IdUser)"
			+ " LEFT JOIN friend ami"
				+ " ON (C.IdContact = ami.IdFriend AND ami.IdContact = ?)"
			+ " LEFT JOIN parameter ptf"
				+ " ON ptf.Domain = 'FriendType'"
				+ " AND ami.FriendType = ptf.IdParam"

			+ " WHERE C.IdContact = ? OR C.IdContactRef = ?"
			+ " ORDER BY C.ContactType";
//TODO : Un champ Enabled dans chaque table à différencier
var cx = new edvData(session.DataSource);
arguments.DataTable = cx.select(sql, [session.User.IdContact, arguments.Id, arguments.Id]);

if (!(arguments.DataTable instanceof DataTable))
	throw new EDVException(arguments.DataTable);

if (arguments.DataTable.Rows.Count==0)
	throw new EDVException("L'utilisateur n'existe pas");
var dtRow : DataRow = arguments.DataTable.Rows[0];	
?>
<?=..Contact.Html.Edit({DataRow : dtRow, DataTable : arguments.DataTable})?>
<param class="edvDialogOption" name="width" value="500"/>
<form method="post" action="?">
<fieldset>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvar" value="Error"/>
<input type="hidden" name="Error" value=""/>
<input type="hidden" name="Row.IdUser" value="<?=dtRow["IdUser"]?>"/>
<?if(session.User && session.User.Rights && session.User.Rights[".Admin"]){?>
<label<?=dtRow["Enabled"] == 0 ? " class=\"dataRowNotEnabled\"" : ""?>>Actif
<input id="chkUserEnabled" type="checkbox" <?=dtRow["Enabled"] ? "checked=\"checked\"" : ""?>
	onclick="document.getElementById('txtchkUserEnabled').value=this.checked; $(this.parentNode).toggleClass('dataRowNotEnabled',!this.checked);">
    <input type="hidden" id="txtchkUserEnabled" name="<?=..User.Row.Enabled:Name?>" value="<?=dtRow["Enabled"]?>">
</label>
<?}?><br style="clear:both"/>
<label>Mot de passe : </label><input type="password" name="Row.Password" size="12" autocomplete="off">
<br/>
<label>Confirmation : </label><input type="password" id="confirmPassword" size="12" autocomplete="off">
<br/>
<input type="hidden" name="Update" value="true"/>
<a href="#<?=arguments.Id?>" class="submit save" onclick="UserSubmitCheck(this);return false;">Enregistrer</a>
<?if(session.User && session.User.Rights && session.User.Rights[".Admin"]){?>
	<br/>
	<a href="?edvcode=<?=..edvAppli.User.Login.Check:Name?>&<?=..edvAppli.User.Login.UserKey:Name?>=<?=arguments.Id?>&edvargs={UserKey:<?=arguments.Id?>, Password:'<?=edvCrypt.Encrypt(DateTime.Now.Date.ToString(),"edv")?>'}" class="submit save">Se connecter sous ce nom</a>
<?}
?></fieldset>
</form>
<?=:js?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.User.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function UserSubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	var pwd;
	if((pwd=$(form).find('input[name="Row.Password"]')[0].value) != ""
	&& pwd != $(form).find('#confirmPassword')[0].value){
		alert("La confirmation du mot de passe n'est pas correcte.");
		return false;
	}
	var $chk = $(form).find('#chkUserEnabled');
	if($chk.length && !$chk[0].checked){
		if(!confirm("Etes vous sûr de vouloir désactiver ce compte utilisateur?"))
			return false;
	}
	edv.Wait.Show();
	edvSubmit(form);
	edvDialog(form).Close();
	edv.Wait.Hide();
	return true;
}
</script>
]]></Value>
                                <!--.EDV.CoopEShop.DB.User.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.User.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Html.Exists-->
                        <VAR ShortName="Exists" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if (arguments.EMail==undefined) 
	throw new EDVException("L'adresse électronique n'est pas fourni en argument");
if(!session.DataSource)
	session.DataSource = ..edvAppli.DataSource;
var cx = new edvData(session.DataSource);
var sql = "SELECT C.IdContact, U.IdUser"
		+ " FROM contact C"
		+ " LEFT JOIN user U"
			+ " ON C.IdContact = U.IdUser"
		+ " WHERE C.EMail = LCASE(?)"
		;
var result = cx.select(sql, [arguments.EMail]);
if (typeof(result)==="string")
	throw new EDVException(result);
if(result.Rows.Count==0)
	echo("0");
else if (result.Rows[0].IsNull("IdUser"))
	echo("C");
else
	echo("U");
?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.User.Html.Exists._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Html.List-->
                        <VAR ShortName="List" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
arguments.MaxRows = Rows.MaxRows;
if (!arguments.Limit || arguments.Limit < 0) 
	arguments.Limit = 0;

var rowsHtml = Rows(arguments);
?>
<span class="edvDataTable">
	<span class="title">Utilisateurs</span>
	<span class="edvNavigator">
		<param class="edvProperty" name="MaxRows" value="<?=arguments.MaxRows?>"/>
		<input class="filter" size="8" value="<?=Rows.Filter?>"
			onchange="edvDataTable(this).Navigator.SetFilter(this.value)"
			onkeydown="if(/msie|Trident/i.test(navigator.userAgent) && getKeyPress(event)==13) this.onchange();"/>
		&nbsp;<a href="" onclick="edvDataTable(this).Navigator.RefreshRows();return false;"><img src="Images/Search16.png"/></a>
		&nbsp;
		<a <?if(arguments.Limit==0){?>style="display:none"<?}?> 
			class="previous" href="#" onclick="edvDataTable(this).Navigator.Previous()">&lt;&lt; précédent</a>
		<span class="current" style="display:none"><?
			if(arguments.DataTable.Rows.Count == 0){?>
				<i>fin de liste</i>
			<?}
		?></span>
		<a <?if(arguments.DataTable.Rows.Count < arguments.MaxRows){?>style="display:none"<?}?> 
			class="next" href="#" onclick="edvDataTable(this).Navigator.Next()">suivant &gt;&gt;</a>
	</span>

	<span class="edvRows" name="<?=:Domain?>Rows">
		<param class="edvProperty" name="Edit.Title" value="Utilisateur"/>
		<?=rowsHtml?>
	</span>

	<span class="edvNavigator">
		<param class="edvProperty" name="MaxRows" value="<?=arguments.MaxRows?>"/>
		<input class="filter" size="8" value="<?=Rows.Filter?>"
			onchange="edvDataTable(this).Navigator.SetFilter(this.value)"
			onkeydown="if(/msie/i.test(navigator.userAgent) && getKeyPress(event) == 13) this.onchange();">
		&nbsp;<a href="" onclick="edvDataTable(this).Navigator.RefreshRows();return false;"><img src="Images/Search16.png"/></a>
		&nbsp;
		<a <?if(arguments.Limit==0){?>style="display:none"<?}?> 
			class="previous" href="#" onclick="edvDataTable(this).Navigator.Previous()">&lt;&lt; précédent</a>
		<span class="current" style="display:none"><?
			if(arguments.DataTable.Rows.Count == 0){?>
				<i>fin de liste</i>
			<?}
		?></span>
		<a <?if(arguments.DataTable.Rows.Count < arguments.MaxRows){?>style="display:none"<?}?> 
			class="next" href="#" onclick="edvDataTable(this).Navigator.Next()">suivant &gt;&gt;</a>
	</span>

</span>



]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.DB.User.Html.List._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) arguments = {};
var cx = new edvData(session.DataSource);
if (arguments.EMail) {
	var sql = "SELECT IdContact FROM contact WHERE EMail = LCASE(?) ORDER BY IdContact DESC LIMIT 1";
	var result = cx.select(sql, [arguments.EMail]);
	if (typeof(result)==="string")
		throw new EDVException(result);
	if(result.Rows.Count == 0)
		throw new EDVException("Impossible de retrouver ce contact");
	arguments.Id = result.Rows[0][0];
}
if (!arguments.Id) throw new EDVException("L'id n'est pas fourni en argument");
var sql = "INSERT INTO user (IdUser, Enabled)"
		+ " VALUES(" + arguments.Id + ", 1)";
var result = cx.execute(sql, [arguments.Id]);
if (typeof(result)==="string")
	throw new EDVException(result);

sql = "INSERT INTO rights (IdUser, Domain, Rights)"
		+ " VALUES(?,?,?)";
result = cx.execute(sql, [arguments.Id, ".", 3]);
?>
<?=Edit({Id : arguments.Id}, edvClient)?>
]]></Value>
                            <!--.EDV.CoopEShop.DB.User.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Html.RndPwd-->
                        <VAR ShortName="RndPwd" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if (arguments.EMail==undefined) 
	throw new EDVException("L'adresse électronique n'est pas fourni en argument");
var s = new StringBuilder();
var rnd = new Random();
for(var i : int = 0; i < 12; i++)
	s.Append(char(rnd.Next(0x41, 0x41+25)));

var cx = new edvData(session.DataSource, true);
var sql = "SELECT IdContact"
	+ " FROM `contact`"
	+ " WHERE `EMail` = ?"
;
var idContact = cx.select(sql, [ arguments.EMail ]);
if(idContact.Rows.Count == 0)
	edvReturn("0");
idContact = idContact.Rows[0][0];
sql = "UPDATE `user`"
	+ " SET `Password` = PASSWORD(?)"
	+ " WHERE IdUser = ?"
;
var result = cx.execute(sql, [s.ToString(), idContact]);
edvInfo = sql + newline + edvjs.json([idContact, arguments.EMail]);
if (typeof(result) === "string")
	throw new EDVException(result);
if(result == 0){
	//n'existe pas comme utilisateur
	sql = "INSERT user (IdUser, Password, Enabled)"
		+ " VALUES(?, PASSWORD(?), 1)"
	;
	result = cx.execute(sql, [ idContact, s.ToString() ]);

	//droits
	sql = "INSERT rights (IdUser, Domain, Rights)"
		+ " VALUES(?, '.', 3)"
	;
	result = cx.execute(sql, [ idContact ]);

}
cx.close();

..EMAIL.Subject = ..edvAppli.Title + " - Nouveau mot de passe";
..EMAIL.Message = "Bonjour,"
			+ (session.User 
				? "<br>A la demande de " + session.User.Name + ","
				: "<br>A votre demande,")
			+ "<br>votre nouveau mot de passe est : " + s.ToString()
			+ "<br><br>Au plaisir."
			+ "<br><br><small><i>merci de ne pas répondre à ce message automatique</i></small>";
..EMail.IsHTML = true;
..EMAIL.To = arguments.EMail;
if (session.User)
	..EMAIL.ReplyTo = session.User.EMail;
else
	..EMAIL.ReplyTo = "";
..EMAIL.CC = "";
..EMAIL.CCI = "";
..EMail.AskConfirmation = false;
..EMail.Attachments = "";
..EMail.Send = true;
if (!edvServer.WaitUntil("!..EMail.Send", 60000, edvClient, :Object)){
	..EMail.Send = false;
	throw new EDVException("L'envoi du message a échoué : " + ..EMail.Status);
}
if(..EMail.Status != "Ok")
	throw new EDVException("L'envoi du message a échoué : " + ..EMail.Status);
	
?>
Un nouveau mot de passe vous a été envoyé par email.]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.DB.User.Html.RndPwd.Text-->
                            <VAR ShortName="Text" ClassName="" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Code">
                                <Script><![CDATA[/*when(..:Changing || :Scripting){
	session.DataSource = ..edvAppli.DataSource;
	edvInfo = ..({Id : 1, EMail : 'edid@free.fr'});

}]]></Script>
                                <!--.EDV.CoopEShop.DB.User.Html.RndPwd.Text._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.User.Html.RndPwd._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments.DataTable){
	if(!arguments.MaxRows) 
		arguments.MaxRows = :MaxRows;
	var sql = "SELECT * FROM contact C"
			+ " INNER JOIN user U"
			+ " ON U.IdUser = C.IdContact"
			+ " WHERE ContactType = ''";
	if (arguments.Filter && arguments.Filter != "")
		if (arguments.Filter.ToUpper().StartsWith("WHERE "))
			sql += " AND (" + arguments.Filter.Substring(6) + ")";
		else if(int.TryParse(arguments.Filter))
			sql += " AND (IdUser = " + arguments.Filter + " OR ZipCode = '" + arguments.Filter + "')";
		else
			sql += " AND (Name LIKE '%" + arguments.Filter + "%' OR EMail LIKE '%" + arguments.Filter + "%')";
	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY " + arguments.OrderBy;
	else
		sql += " ORDER BY Name";
	sql += " LIMIT " + arguments.Limit + ", " + arguments.MaxRows;
	
	var cx = new edvData(session.DataSource);
	arguments.DataTable = cx.select(sql);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
}
?><ul class="Users">
<?for(var dtRow in arguments.DataTable.Rows){
?>	<li><a href="#"<?=!dtRow["Enabled1"] ? " class=\"notEnabled\"" : ""?><?
	?> onclick="edvRows(this).Edit('edvargs={Id:<?=dtRow["IdUser"]?>}', {title:'Utilisateur <?=dtRow["IdUser"]?>'});return false;">
<?=dtRow["Name"]?> (<?=dtRow["EMail"]?>, <?=dtRow["ZipCode"]?> <?=dtRow["City"]?>)</a></li>
<?}?>
</ul>
]]></Value>
                            <!--.EDV.CoopEShop.DB.User.Html.Rows.Filter-->
                            <VAR ShortName="Filter" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                            <!--.EDV.CoopEShop.DB.User.Html.Rows.MaxRows-->
                            <VAR ShortName="MaxRows" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                <Value><![CDATA[30]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.DB.User.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Html.View-->
                        <VAR ShortName="View" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.DB.User.Html.View._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.User.Insert-->
                    <VAR ShortName="Insert" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.User.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.User.Row-->
                    <VAR ShortName="Row" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                        <!--.EDV.CoopEShop.DB.User.Row.Enabled-->
                        <VAR ShortName="Enabled" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <Value><![CDATA[True]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Row.IdUser-->
                        <VAR ShortName="IdUser" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                            <Value><![CDATA[371]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.Row.Password-->
                        <VAR ShortName="Password" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Password">
                            <!--.EDV.CoopEShop.DB.User.Row.Password.OnUsed-->
                            <VAR ShortName="OnUsed" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..Update:Changed || ..Insert:Changed)
{
	.. = "";
}
null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.User.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.User.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.User.SQLDelete-->
                    <VAR ShortName="SQLDelete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[DELETE FROM contact
WHERE IdContact = :IDCONTACT


]]></Value>
                        <!--.EDV.CoopEShop.DB.User.SQLDelete._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.User.SQLInsert-->
                    <VAR ShortName="SQLInsert" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[INSERT INTO user (IdUser, Enabled, Password)
VALUES(:IDUSER, :ENABLED, PASSWORD(:PASSWORD))

]]></Value>
                        <!--.EDV.CoopEShop.DB.User.SQLInsert._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.User.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT IdUser, Enabled
FROM user C
WHERE IdUser = :ID]]></Value>
                        <!--.EDV.CoopEShop.DB.User.SQLSelect.ID-->
                        <VAR ShortName="ID" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[1]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.DB.User.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.User.SQLUpdate-->
                    <VAR ShortName="SQLUpdate" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[UPDATE user
SET Enabled = :ENABLED
<?if(Row.Password != "") echo(", Password = PASSWORD(:PASSWORD)");?>
WHERE IdUser = :IDUSER


]]></Value>
                        <!--.EDV.CoopEShop.DB.User.SQLUpdate._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.User.Update-->
                    <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.DB.UserCommun-->
                <VAR ShortName="UserCommun" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdPCEA" type="xs:int" minOccurs="0" /><xs:element name="IdUserC" type="xs:int" minOccurs="0" /><xs:element name="IdUser" type="xs:int" minOccurs="0" /><xs:element name="Nom" type="xs:string" minOccurs="0" /><xs:element name="EMail" type="xs:string" minOccurs="0" /><xs:element name="Telephone1" type="xs:string" minOccurs="0" /><xs:element name="Telephone2" type="xs:string" minOccurs="0" /><xs:element name="Adresse" type="xs:string" minOccurs="0" /><xs:element name="Commune" type="xs:string" minOccurs="0" /><xs:element name="Actif" type="xs:short" minOccurs="0" /><xs:element name="Password" type="xs:string" minOccurs="0" /><xs:element name="Admin" type="xs:short" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.UserCommun.Alter-->
                    <VAR ShortName="Alter" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.DB.UserCommun.Alter.OnChanging-->
                        <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Changing)
{
	edvInfo = :Name + " : " + edv.Data.Execute(..SQLAlter, ..edvAppli.DataSource);
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.UserCommun.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.UserCommun.SQLAlter-->
                    <VAR ShortName="SQLAlter" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[ALTER VIEW pceausers AS 
SELECT up.IdDossier, u.IdUser AS IdUserC, u.* 
FROM pceauser up
INNER JOIN user u
	ON u.IdUser = up.IdUser

UNION
SELECT up.IdDossier, uca.IdUser1 AS IdUserC, ua.* 
FROM pceauser up
INNER JOIN user ua
	ON ua.IdUser = up.IdUser
INNER JOIN pceausercommun uca
	ON ua.IdUser = uca.IdUser2
	AND uca.IdDossier= up.IdDossier]]></Value>
                        <!--.EDV.CoopEShop.DB.UserCommun.SQLAlter._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.UserCommun.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * FROM pceausers
]]></Value>
                        <!--.EDV.CoopEShop.DB.UserCommun.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.DB.Users-->
                <VAR ShortName="Users" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdUser" type="xs:int" minOccurs="0" /><xs:element name="Enabled" type="xs:short" minOccurs="0" /><xs:element name="Password" type="xs:string" minOccurs="0" /><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="IdUser1" type="xs:int" minOccurs="0" /><xs:element name="ContactType" type="xs:string" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="EMail" type="xs:string" minOccurs="0" /><xs:element name="Phone1" type="xs:string" minOccurs="0" /><xs:element name="Phone2" type="xs:string" minOccurs="0" /><xs:element name="Address" type="xs:string" minOccurs="0" /><xs:element name="ZipCode" type="xs:string" minOccurs="0" /><xs:element name="City" type="xs:string" minOccurs="0" /><xs:element name="Enabled1" type="xs:short" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.DB.Users.GetUser-->
                    <VAR ShortName="GetUser" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[function(userKey, password : String, domain : String, connexion, edv){
	if (!domain) domain = "";
	var sql : StringBuilder = new StringBuilder(
			"SELECT U.*, C.*, R.*, F.IdFournisseur"
			+ " FROM user U"
			+ " INNER JOIN contact C"
			+ " 	ON U.IdUser = C.IdContact"
			+ " 	AND C.ContactType = ''"
			+ " INNER JOIN rights R"
			+ " 	ON R.IdUser = U.IdUser"
			+ " 	AND R.Domain LIKE '" + domain.Replace("?","%") + "%'"
			+ " LEFT JOIN fournisseur F"
			+ " 	ON F.IdContact = C.IdContact"
			//+ " 	AND F.Enabled = 1"
			);
	if(int.TryParse(userKey)){
		sql.Append(" WHERE (C.IdContact = " + userKey + ")");
		if(password != edvCrypt.Encrypt(DateTime.Now.Date.ToString(),"edv").Replace("+"," "))
			sql.Append(" AND Password = PASSWORD('" + password + "')");
		//edvServer.Info = "sql = " + password + "\r\n" + sql.ToString();

	}
	else {
		if(userKey.Contains("@"))
			sql.Append(" WHERE (C.EMail = '" + userKey.ToLower() + "')");
		else
			sql.Append(" WHERE (C.Name = '" + userKey.Replace("'","''") + "')");

		if (password == null || password == "")
			sql.Append(" AND (Password = '' OR Password IS NULL)");
		else
			sql.Append(" AND Password = PASSWORD('" + password + "')");
	}
	sql.Append(" AND U.Enabled");

	sql.Append(" ORDER BY R.Domain");

	var users = edv.Coopeshop.cx().select(sql.ToString());
	if(!(users instanceof DataTable)){
		edvServer.Error = this.Name + " Erreur : " + users + "\r\n" + sql.ToString();
		return "Erreur : " + users;
	}

	if(users.Rows.Count == 0){
		edvServer.Info = this.Name + " : aucun utilisateur\r\n" + sql.ToString();
		return null;
	}

	var user = {};
	var nRow : int = 0;
	for(var row in users.Rows){
		if (nRow++ == 0){
			for(var col in users.Columns)
				if (col.ColumnName != "Password")
					user[col.ColumnName] = users.Rows[0][col];
			user.Rights = {};
			user.Rights[users.Rows[0]["Domain"]] = users.Rows[0]["Rights"];
		}
		else
			user.Rights[row["Domain"]] = row["Rights"];
	}
	//edvServer.Info = "GetUser : utilisateur " + user.IdUser;

	return user;
}



]]></Script>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Users.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.DB.Users.Source-->
                    <VAR ShortName="Source" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.DB.Users.Source.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.edvAppli.DataSource]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.DB.Users.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT *
FROM user U
INNER JOIN contact C
ON U.IdUser = C.IdContact]]></Value>
                        <!--.EDV.CoopEShop.DB.Users.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                </VAR>
            </VAR>
            <!--.EDV.CoopEShop.Docs-->
            <VAR ShortName="Docs" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                <!--.EDV.CoopEShop.Docs.FAQ-->
                <VAR ShortName="FAQ" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <Value><![CDATA[<div class="help">
<h3>Questions les plus fréquentes</h3>

<ul>
	<li>Comment créer une commande ?
		<pre>Le menu de gauche contient une rubrique "Mes commandes". Le premier sous-menu "Nouvelle" permet la création d'une nouvelle commande.
Choisissez ensuite un "catalogue" de votre fournisseur.
En en-tête de commande, vous pouvez saisir un commentaire qui sera lu par votre fournisseur.
Pour chaque ligne d'article, saisissez une quantité, une unité et, éventuellement, un commentaire.
Dès la première saisie, la ligne prend un fond vert, signe qu'elle est bien enregistrée. Cliquer sur l'image verte contenant un gros + n'est pas nécessaire.
Pour supprimer une ligne de commande, cliquez sur la croix rouge à droite de la ligne.
En fin de page, cliquez sur le lien de validation.
Vous retrouverez la liste de vos commandes par le sous-menu "Toutes" à gauche de l'écran.
</pre>
	<li>J'ai un petit écran, les lignes de commande sont mal "rangées".
		<pre>Vous pouvez effectuer un zoom avant ou arrière en enfonçant la touche <kbd>CTRL</kbd> du clavier et en jouant avec la roulette de la souris.	
</pre>
	</li>
	<li>Ma commande est elle réellement prise en compte ?
		<pre>A la fin de la création d'une nouvelle commande, vous devez valider celle-ci en cliquant sur le lien en bas de la page. Alors, la commande est enregistrée et validée. Il vous est proposé de la recevoir par email.
Affichez la liste des commandes par le menu Mes commandes / Toutes.
En cliquant sur une ligne, votre commande apparaît.
L'état de la commande apparaît en haut à droite de son affichage.
</pre>
	</li>
	<li>Comment supprimer une commande ?
		<pre>Votre fournisseur ne voit que les commandes validées et enregistrées.
Il changera l'état de votre commande en "Commande traitée/livrée" quand ce sera le cas.
Affichez la liste des commandes par le menu Mes commandes / Toutes.
A droite de chaque ligne, la croix rouge permet de supprimer définitivement votre commande.
En cliquant sur une ligne, votre commande apparaît.
L'état de la commande apparaît en haut à droite de son affichage.
Vous pouvez changer l'état en "Commande suspendue" pour qu'elle ne soit pas traitée par votre fournisseur.
</pre>
	</li>

	<li>Coût total des commandes
		<pre>Il n'y a pas de calcul monétaire sur les articles commandés.
D'une part, celà est impossible pour les légumes, par exemple, et, d'autre part, c'est une source infinie de réclamation.
</pre>
	</li>

	<li>Comment envoyer un message au fournisseur ?
		<pre>Depuis une de vos commandes, vous pouvez cliquer sur le nom du fournisseur.
Dans sa fiche, à droite de son adresse électronique, vous pouvez cliquer sur le petit dessin et envoyer un message. Vous recevrez une copie du message.
</pre>
	</li>

	<li>Devenir fournisseur ?
		<pre>En devenant fournisseur, vous aurez la possibilité de créer vos propres catalogues d'articles.
Vous pouvez les proposer aux utilisateurs de CoopEShop ou uniquement à vos amis ou contacts.

Vous êtes entièrement responsable et gestionnaire des échanges qui s'effectuent entre vous et vos contacts. La communication est la clé de la confiance.

Utilisez les Petits Comptes Entre Amis pour gérer le solde de vos échanges.

Pensez aux autres : n'encombrez pas CoopEShop avec des catalogues publiques dont vous ne vous occuperiez plus. Merci.
Vous pouvez aisément désactiver votre compte fournisseur depuis votre profil Fournisseur.

</pre>
	</li>

	<li>Quel coût ?
		<pre>La bonne question est : Quels coûts ?
L'hébergement du site web a un coût partagé par plusieurs logiciels/sites web d'un serveur, ce qui fait que c'est gratuit parce que négligeable.
Si CoopEShop fonctionne trop bien, il devra s'assumer seul. Mais cela, pour un grand nombre d'utilisateurs, donc une charge minime pour chacun. Et seule l'expérience pourra parler.
Le bénévolat, lui, n'a pas de prix mais peut s'essoufler.
</pre>
	</li>

</ul>
</div>
]]></Value>
                    <!--.EDV.CoopEShop.Docs.FAQ._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Docs.Fourn-->
                <VAR ShortName="Fourn" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <Value><![CDATA[<div class="help">
<h3>Fournisseur</h3>
Un fournisseur dispose de catalogues d'articles que ses contacts peuvent utiliser pour créer des commandes.

<ul>
<li>VOTRE PROFIL
<pre>Activez ou désactivez votre profil pour masquer les catalogues au public.
</pre>

<li>LES CATALOGUES
<pre>Créer un ou plusieurs catalogues avec un titre explicite.
Vous devez définir qui peut créer des commandes sur votre catalogue : tout le monde ou uniquement vos contacts.
</pre>

<li>LES ARTICLES
<pre>Créer des articles que vous désirez en les organisant par catégorie.
Définissez un tarif de base, une unité et, éventuellement, sélectionnez une image associée.
Vous disposez d'un tableau avec une colonne par catalogue. Vous devez y définir le tarif de l'article pour chaque catalogue. Sinon, l'article n'apparait pas dans le catalogue.

</pre>

<li>LES CATEGORIES
<pre>Créer des catégories pour organiser vos articles dans une nomenclature.
</pre>

<li>EMAIL AUTOMATIQUE
<pre>Créez un email automatique dont vous pouvez définir la périodicité pour adresser une invitation à vos contacts.
Vous devez saisir une liste d'adresses mail en destinataire.
</pre>

<li>CONTACTS
<pre>Créez la liste de vos contacts pour les autoriser à commander d'après vos catalogues.
</pre>
</ul>
</div>
<?=HowFourn(edvClient)?>]]></Value>
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.Docs.Fourn._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Docs.HowFourn-->
                <VAR ShortName="HowFourn" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <Value><![CDATA[<div class="help">
<h3>Règles de gestion des articles</h3>

<ul>
<li>IMAGE D’ARTICLE 
<pre>Les articles possèdent un paramètre Image modifiable dans la fiche de l’article. 
Elle apparait en tout petit dans les listes d’article mais un survol de la souris la montre en grand. 
Les images ne doivent pas être plus grosses que nécessaire pour ne pas ralentir la consultation du site. 
</pre>
<li>TARIF D’ARTICLE 
<pre>Chaque article a un tarif de base modifiable depuis la fiche de l’article. 
Quand vous ajoutez un article dans un catalogue, c’est le tarif initial. 
Pour chaque catalogue, vous pouvez affecter un tarif particulier. 
Si vous changez (et ça c’est nouveau, Sarah et Vincent) le tarif d’un article depuis sa fiche, ça ne changera pas le tarif de l’article dans les catalogues. 
Contrairement à ce qui se passait jusqu’alors, le tarif que voit le client est le tarif du catalogue de la commande. 
(Sarah et Vincent, pas d’inquiétude, j’ai mis à jour vos catalogues). 
Bref, le tarif de la fiche Article ne sert à rien (pour vous) mais il est obligatoire d’en avoir un. En fait, il sert quand vous créez un nouveau catalogue. 
</pre>
<li>JOUR ET HEURE DE CLÔTURE 
<pre>Maintenant, chaque catalogue possède deux paramètres définissant le jour et l’heure de clôture des commandes. 
La clôture empêche l’utilisateur de modifier sa commande après l’heure dite mais ne devrait pas l’empêcher de saisir une nouvelle commande le lendemain. A affiner. 
En en-tête de commande des clients, un texte indique automatiquement cette information de clôture. C’est pourquoi, Sarah et Vincent, j’ai modifié les messages de vos catalogues.
</pre>
</ul>
</div>
]]></Value>
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.Docs.HowFourn._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Docs.HTML-->
                <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <Value><![CDATA[<?if(arguments && arguments.menu) echo(:Menu()); 
if(arguments && arguments.doc) edvechocode(:Domain + arguments.doc);
else echo(What());
?>
]]></Value>
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.Docs.HTML.CSS-->
                    <VAR ShortName="CSS" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=..Visual.HTML.CSS?>
<style>
	.docMenu {
		/*position : absolute;
		left : 3px;
		top : 2.2em;*/
		display : inline;
		list-style-type : none;
		border-bottom : 1px solid;
	}
	.docMenu li {
		display : inline;
		padding-left : 0.5em;
		padding-right : 0.5em;
	}
</style>]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.Docs.HTML.CSS._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Docs.HTML.Head-->
                    <VAR ShortName="Head" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=..Visual.HTML.Head?>]]></Value>
                        <!--.EDV.CoopEShop.Docs.HTML.Head._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Docs.HTML.Main-->
                    <VAR ShortName="Main" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                        <!--.EDV.CoopEShop.Docs.HTML.Main.HTML-->
                        <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?=edv.{WEB}.Main(edvSender, arguments, edvClient)?><?/*remplacez par 'edv.{WEB}.Main.Value', surlignez tout puis F9 pour avoir le script*/?>]]></Value>
                            <!--.EDV.CoopEShop.Docs.HTML.Main.HTML._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Docs.HTML.Menu-->
                    <VAR ShortName="Menu" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<ul class="docMenu">
	<li><a href="?edvargs.doc=What&edvargs.menu=1">Présentation</a>
	<li><a href="?edvargs.doc=FAQ&edvargs.menu=1">Questions les plus fréquentes</a>
	<li><a href="?edvargs.doc=Who&edvargs.menu=1">Contact</a>
</ul>
]]></Value>
                        <!--.EDV.CoopEShop.Docs.HTML.Menu._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Docs.HTML._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Docs.PCEA-->
                <VAR ShortName="PCEA" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <Value><![CDATA[<div class="help">
<h3>Petits Comptes Entre Amis</h3>

<ul>

<li>Qu'est ce donc ?
		<pre>Un petit compte permet d'inscrire des opérations de paiement par un des membres du groupe pour un autre membre du groupe.
A terme, les comptes s'équilibrent plus ou moins, à chacun de s'arranger pour rééquilibrer les soldes.
</pre>

<li>Différents types de comptes
		<pre>Un compte peut être administré par un seul des membres, alors lui seul peut inscrire des opérations et lui seul voit l'ensemble des membres du groupe.
Plus généralement, tous les membres sont libres d'enregistrer leurs opérations.
</pre>
	<li>Entre Amis ?
		<pre>Le principe de confiance est la règle à laquelle tous doivent adhérer.
Ce qui n'empêche pas tout un chacun de regarder si les membres de ses groupes n'oublient pas de faire leur part de travail.
</pre>

<li>Ecart comptable
	<br/><img src="Images/pcea01.png">
		<pre>Dans l'exemple ci-dessus, il est dit que :
- J'ai 9.00 Ø de dette dans le compte.
- Camille a 17.00 Ø de dette dans le compte.
- Deux opérations ont eu lieu entre nous. La somme n'est pas équivalente avec le solde de Camille car elle a eu d'autres opérations avec d'autres membres, informations que je ne vois pas.
</pre>

</ul>
</div>
]]></Value>
                    <!--.EDV.CoopEShop.Docs.PCEA._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Docs.WBS-->
                <VAR ShortName="WBS" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <Value><![CDATA[<style>code {background-color : white}
</style>
<div class="help" style="padding-left:2em">
<h3>WebService</h3>
La création d'une connexion avec login s'effectue par l'appel Http suivant :
<br/><h4>Commande de login</h4>
<code>www.coopeshop.net/edv/.EDV.CoopEShop.edvmaster?edvcode=edvAppli.User.Login.Check&edvargs={UserKey: "moi@mailprov.fr", Password: "pwd"}
</code><br/>
<br/>
En cas d'échec, le message suivant est retourné :
<br/>
<code>Identifiant ou mot de passe incorrect</code>
<br/>
<br/>En cas de succès, le message suivant est retourné (1 ligne puis fragment Xml séparés par \r\n) :
<br/><pre>Ok
  &lt;EDV&gt;
  	&lt;LOGIN check="Ok" ssid="98/8ddc037"&gt;
  	&lt;MSG&gt;Connection ok&lt;/MSG&gt;
  	&lt;USER id="16"
   		name="Manu"
   		email="edid@free.fr"/&gt;
  	&lt;REDIR&gt;/edv/CoopEShop/.EDV.CoopEShop.edvsess?edvsessionid=98/8ddc037&lt;/REDIR&gt;
  	&lt;/LOGIN&gt;
  &lt;/EDV&gt;
</pre>

<br/><h4>Session du serveur EDV.CoopEShop</h4>
L'url fournie ci-dessus permet d'accéder au site en la préfixant avec http://coopeshop.net
<br/>L'id 56/7334c88 correspond à une session réutilisable depuis un autre PC.
<br/>C'est donc vers cette adresse que l'utilisateur final doit être redirigé.
<br/>Vous obtiendrez toujours le même <var>sessionid</var> tant que vous renverrez le cookie <var>EDVSSID</var> (voir ci-dessous) au serveur.

<br/><h4>Session du serveur web client</h4>
Un cookie nommé <var>EDVSSID</var> est retourné à chaque interrogation du serveur EDV.CoopEShop.  
<br/>Utilisez et retournez ce cookie <var>EDVSSID</var> pour conserver la synchronisation d'une session de votre serveur Web et celle du serveur EDV.CoopEShop jusqu'au succés du login de l'utilisateur final.
<br/>Détruisez toute référence à ce cookie <var>EDVSSID</var> dès le succés du login de l'utilisateur final.

<br/><br/>Ne pas gérer le cookie alourdit la charge du serveur EDV.CoopEShop mais ce n'est pas très gênant.

<br/><br/>Sur le serveur EDV.CoopEShop, les sessions ont une durée de vie d'une heure d'inactivité (KeepAlive).

<br/>
</div>


</div>]]></Value>
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.Docs.WBS._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Docs.What-->
                <VAR ShortName="What" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <Value><![CDATA[<div class="help">

<ul>
	<li>Un outil simple pour le client
		<pre>Après avoir choisi le catalogue d'un fournisseur, le client saisit les quantités qu'il désire en face de chaque produit.
		<br>Il a la possibilité de laisser un message général ainsi qu'un commentaire pour chacun des articles qu'il choisit.
		<br><img src="Images/PubCmde.png" alt="Nouvelle commande en cours de saisie" border="1" width="40%" height="40%"/>
La saisie de la commande se termine par une validation et la réception d'un email récapitulatif.		
		</pre>
	</li>

	<li>Un outil simple pour le fournisseur
		<br>
		<pre><u>Liste des articles et saisie d'un article</u>
		<br>Le fournisseur "active" ou "désactive" l'apparition d'un article dans ses catalogues suivant son stock et ses disponibilités.
		</pre>
		<img src="Images/PubArticle.png" alt="Liste des articles et édition" border="1" width="40%"/>
		<br>
		<pre><u>Regroupement des articles commandés</u>
		<br>Le fournisseur dispose d'un récapitulatif des produits à récolter ou préparer.
		</pre>
		<img src="Images/PubRegroupnt.png" alt="Regroupement des articles commandés" border="1" width="450px"/>
		<br/>
		<pre><u>Liste des commandes-clients avec détails</u>
		<br>Le fournisseur dispose d'un récapitulatif pour préparer ses paniers.
		</pre>
		<img src="Images/PubCmdesClients.png" alt="Liste des commandes-clients avec détails" border="1" width="700px"/>
		<br>
		<br>
	</li>

	<li>De la communication et de la confiance
		<pre>Par delà la rigueur et la froideur du web, fournisseurs et consommateurs gardent un lien de communication par le biais des petits messages écrits.
Chacun se doit de garder confiance dans la bonne volonté de l'autre à partager, travailler et vivre ensemble avec nos besoins respectifs.
</pre>
	</li>


	<li>De la fracture numérique
		<pre>Il est à craindre que certains ne fassent pas le pas de l'informatisation et soient exclus de cet échange.
A chacun d'y être attentif autour de soi.
</pre>
	</li>

</ul>
</div>
]]></Value>
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.Docs.What._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Docs.Who-->
                <VAR ShortName="Who" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <Value><![CDATA[<div class="help">
<h3>Qui sommes nous ?</h3>

<ul>
	<li>Des bénévoles
		<pre>Enfin, un.
Et avec l'appui de Sarah et Vincent (Moderne-Tradition) et des amis.
</pre>
	</li>
	<li>99%
		<pre>Bref, tous les utilisateurs.
</pre>
	</li>

	<li>Contact / assistance
		<pre>Manu : <a href="mailto:admin@coopeshop.net">admin@coopeshop.net</a>
</pre>
	</li>

</ul>
</div>
]]></Value>
                    <!--.EDV.CoopEShop.Docs.Who._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
            </VAR>
            <!--.EDV.CoopEShop.edvAppli-->
            <VAR ShortName="edvAppli" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean" SaveLocation="V">
                <!--.EDV.CoopEShop.edvAppli.ApplicationId-->
                <VAR ShortName="ApplicationId" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                    <Value><![CDATA[CoopEShop]]></Value>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.BottomMenu-->
                <VAR ShortName="BottomMenu" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code" Control=".{Applications}.EDVExplorer.Client.Treeviews.Bottom">
                    <Value><![CDATA[<EDVVisual>
  <Ctrl Var=".EDV.CoopEShop.Visual" Bounds="{X=251,Y=171,Width=54,Height=16}" />
  <Ctrl Var=".EDV.CoopEShop.edvAppli.Save" Bounds="{X=252,Y=142,Width=47,Height=16}" />
</EDVVisual>]]></Value>
                    <!--.EDV.CoopEShop.edvAppli.BottomMenu._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.Data-->
                <VAR ShortName="Data" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="XML"><xs:complexType><xs:sequence><xs:element name="IdParam" msdata:Caption="" type="xs:string" /><xs:element name="Value" msdata:Caption="" type="xs:string" minOccurs="0" /><xs:element name="Visual" msdata:Caption="" type="xs:boolean" minOccurs="0" /><xs:element name="Title" msdata:Caption="" type="xs:string" minOccurs="0" /><xs:element name="UserLevel" msdata:Caption="" type="xs:int" minOccurs="0" /><xs:element name="Category" msdata:Caption="" type="xs:string" minOccurs="0" /></xs:sequence></xs:complexType></xs:element><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="XML" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element ref="XML" /></xs:choice></xs:complexType><xs:unique name="Constraint1" msdata:PrimaryKey="true"><xs:selector xpath=".//XML" /><xs:field xpath="IdParam" /></xs:unique></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.edvAppli.Data.OnScripting-->
                    <VAR ShortName="OnScripting" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                        <Script><![CDATA[/*when(:Scripting)
{
	for(var r in ..:Rows)
		r["IdParam"]=r["IdParam"].Substring(".EDV.CoopEShop.".length);
}
null;]]></Script>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Data.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.edvAppli.Data.Open.OnChanging-->
                        <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Changing)
{
	edvInfo = :Name + " : Chargement des paramètres généraux.";
	var lVarRoot;
	if ((lVarRoot = ..edvAppli:Parent) != null)
		for(var lRow in ...:Rows)
		{
			var lVarName = lRow["IdParam"];
			var lVar = null;
	
			lVar = lVarRoot[lVarName];
			if (lVar != null)
				lVar.Value = lRow["Value"];
			else
				edvInfo = :Name + " : la donnée sauvegardée '" + lVarName + "' ne correspond à aucune variable.";
		}
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Data.Save-->
                    <VAR ShortName="Save" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.edvAppli.Data.Save.OnChanging-->
                        <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..)
{
	edvInfo = :Name + " : Enregistrement des paramètres généraux";
	var lVarRoot;
	if ((lVarRoot = ..edvAppli:Parent) != null) {
		var lDataTable = ...;
		for(var lRow in lDataTable.Rows)
		{
			var lVar = lVarRoot[lRow["IdParam"]];
			if (lVar != null)
				lRow["Value"] = lVar.Value;
		}

		for(lVar in edvClient.GetVariables(..edvAppli:Domain).Values)
			if (EDV.SaveLocation.ContainsLocation(lVar.SaveLocation, EDV.SaveLocation.Application))
			{
				if (lDataTable.Select("IdParam = '" + lVar.Name + "'").Length == 0)
					lDataTable.Rows.Add(lVar.Name, lVar.Value);
			}

		//Tableau de noms de variables à ajouter en cas d'absence. Noms relatifs à lVarRoot==..edvAppli:Parent.
		var variables = [
				];
		//, ".{Sys}.Web.WebServer.CheckSecurity"

		for(var i : int = 0; i < variables.length; i++)
			if (lDataTable.Select("IdParam = '" + variables[i] + "'").Length==0)
				if ((lVar = lVarRoot[variables[i]]) != null)
					lDataTable.Rows.Add(variables[i] , lVar.Value);
				else 
					edvError = :Name + "\tLe paramètre " + variables[i] + " n'est pas une variable";

		..Validate;
	}
}
]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Data.Source-->
                    <VAR ShortName="Source" ClassName="VarDataSource" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Text">
                        <Script><![CDATA["Provider=XML;Data Source=" + :DBName;]]></Script>
                        <!--.EDV.CoopEShop.edvAppli.Data.Source.DBName-->
                        <VAR ShortName="DBName" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                            <Script><![CDATA[var lsFile = ..Save.File;//Fichier .edvars d'où est chargé l'application
if (lsFile != "" && !lsFile.StartsWith("\t\t\tATTENTION")) lsFile.substring(0, lsFile.length-".edvars".length) + ".Params.xml";
else "";
]]></Script>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.Data.Source.DBPassword-->
                        <VAR ShortName="DBPassword" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Password" />
                        <!--.EDV.CoopEShop.edvAppli.Data.Source.DBServer-->
                        <VAR ShortName="DBServer" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.edvAppli.Data.Source.DBType-->
                        <VAR ShortName="DBType" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[XML]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.Data.Source.DBUser-->
                        <VAR ShortName="DBUser" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Data.Validate-->
                    <VAR ShortName="Validate" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.DataSource-->
                <VAR ShortName="DataSource" ClassName="VarDataSource" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Text">
                    <Script><![CDATA["Provider=MSDASQL;DRIVER={MySQL ODBC 5.1 Driver};SERVER=" + :DBServer + ";PORT=3306;DATABASE=" + :DBName + "; OPTION=19035;UID=" + :DBUser + ";PWD=" + :DBPassword;]]></Script>
                    <!--.EDV.CoopEShop.edvAppli.DataSource.DBName-->
                    <VAR ShortName="DBName" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="X">
                        <Value><![CDATA[coopeshop]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.DataSource.DBPassword-->
                    <VAR ShortName="DBPassword" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Password" SaveLocation="X">
                        <Value Crypt="True"><![CDATA[AfetQtrEQz+dmHRk7a2/HS1Kpoow/klGZ7wNMLT5dnJ9kh7+1YuznG5ZuCTt6eeT]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.DataSource.DBServer-->
                    <VAR ShortName="DBServer" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="X">
                        <Value><![CDATA[localhost]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.DataSource.DBType-->
                    <VAR ShortName="DBType" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="X">
                        <Value><![CDATA[MySQL]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.DataSource.DBUser-->
                    <VAR ShortName="DBUser" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="X">
                        <Value><![CDATA[coopeshop]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.DataSource.OnChanging-->
                    <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                        <Script><![CDATA[when(..:Changing
&& edv.Coopeshop) {
	edv.Coopeshop.dataSource = ..;
}
null;
]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.DBBackup-->
                <VAR ShortName="DBBackup" ClassName="VarVisual" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Visual">
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd-->
                    <VAR ShortName="DBCmd" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                        <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="sqloledb" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="sqloledb"><xs:complexType></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.Error-->
                        <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.File-->
                        <VAR ShortName="File" ClassName="VarFile" AutoReset="0" Securized="0" ReadOnly="1" ValueType="File">
                            <Script><![CDATA[.{Sys}.Web.RootPath + "\\temp\\CoopEShop.BAK"
//"C:\\temp\\APV.BAK"]]></Script>
                            <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.File.Exists-->
                            <VAR ShortName="Exists" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                                <Value><![CDATA[False]]></Value>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.Open-->
                        <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.Open.OnChanged-->
                            <VAR ShortName="OnChanged" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Changed)
{
	..File.Exists=false;
}
null;]]></Script>
                            </VAR>
                            <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.Open.OnChecking-->
                            <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Checking && ..SQLSelect != "")
{
	try {
		if (File.Exists(..File))
			File.Delete(..File);
		...:Error="";
	}
	catch(msg){
		...:Error=msg;
	}
}
null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.Source-->
                        <VAR ShortName="Source" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                            <Script><![CDATA[..DataSource]]></Script>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.SQLSelect-->
                        <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.SQLSelect._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.DBCmd.Url-->
                        <VAR ShortName="Url" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                            <Script><![CDATA["/edv" + (File).Substring((.{Sys}.Web.RootPath).length).Replace("\\","/")]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.DBBackup.HTML-->
                    <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?DBCmd.File.Exists=true;?>
<form class="EDVVisual"><fieldset><legend>Sauvegarde de la base de données</legend></fieldset></form>
<a href="?<?=DBCmd.Open:Name?>=true" style="font-size:large">
	<img src="/edv/Images/save.png" border="0">&nbsp;Créer la sauvegarde
</a>
<?if(DBCmd.File.Exists) {?>
	<br>
	<br>
	<a href="<?=DBCmd.Url?>" target="_blank" onclick="edvSet('<?=DBCmd.Open:Name?>=true');"
		style="font-size:large">
		<img src="/edv/Images/save.png" border="0">&nbsp;Télécharger la sauvegarde du <?=File.GetLastWriteTime(DBCmd.File).ToString()?>
	</a>
	<br><small><i>si vous utilisez Internet Explorer, cliquez sur le lien avec le bouton droit de la souris et choisissez "Enregistrer la cible sous..."</i></small>
<?}?>
<div class="error"><pre><?=DBCmd.Error?></pre></p>]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.HTML._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore-->
                    <VAR ShortName="Restore" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                        <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="sqloledb" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="sqloledb"><xs:complexType></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore.Error-->
                        <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore.File-->
                        <VAR ShortName="File" ClassName="VarFile" AutoReset="0" Securized="0" ReadOnly="1" ValueType="File">
                            <Script><![CDATA["C:\\temp\\APV.BAK"]]></Script>
                            <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore.File.Exists-->
                            <VAR ShortName="Exists" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                                <Value><![CDATA[False]]></Value>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore.Open-->
                        <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore.Open.OnChanged-->
                            <VAR ShortName="OnChanged" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Null" />
                            <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore.Open.OnChecking-->
                            <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Null" />
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore.Source-->
                        <VAR ShortName="Source" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                            <Script><![CDATA[..DataSource]]></Script>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore.SQLSelect-->
                        <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[USE master
EXEC sp_dropdevice 'APV_Device'
USE master
EXEC sp_addumpdevice 'disk', 'APV_Device',N'<?=(File).Replace("\\","\\\\")?>'
RESTORE DATABASE APV FROM APV_Device
WITH RECOVERY]]></Value>
                            <!--.EDV.CoopEShop.edvAppli.DBBackup.Restore.SQLSelect._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.EDVClient-->
                <VAR ShortName="EDVClient" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object" />
                <!--.EDV.CoopEShop.edvAppli.EMail-->
                <VAR ShortName="EMail" ClassName="EMail@EDVMail" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer">
                    <Value><![CDATA[0]]></Value>
                    <!--.EDV.CoopEShop.edvAppli.EMail.From-->
                    <VAR ShortName="From" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="X">
                        <Value><![CDATA[admin@coopeshop.net]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.EMail.IsHTML-->
                    <VAR ShortName="IsHTML" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <Value><![CDATA[True]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.EMail.Message-->
                    <VAR ShortName="Message" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[yop]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.edvAppli.EMail.Message._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.EMail.RegexCleaner-->
                    <VAR ShortName="RegexCleaner" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                        <Value><![CDATA[(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.EMail.Send-->
                    <VAR ShortName="Send" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean" SaveLocation="V" Control="EDVCtrlButton" />
                    <!--.EDV.CoopEShop.edvAppli.EMail.Smtp-->
                    <VAR ShortName="Smtp" ClassName="Smtp@EDVMail" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="X">
                        <Value><![CDATA[edvariables.net]]></Value>
                        <!--.EDV.CoopEShop.edvAppli.EMail.Smtp.Password-->
                        <VAR ShortName="Password" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Password" SaveLocation="X">
                            <Value Crypt="True"><![CDATA[WnuOgyoSf/vHJsoiig9qFdNgcL8keFSzCOZrIGuhWG0=]]></Value>
                            <!--.EDV.CoopEShop.edvAppli.EMail.Smtp.Password.OnScripting-->
                            <VAR ShortName="OnScripting" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[/*when(:Scripting)
{
	edvInfo = ..;
}
null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.EMail.Smtp.Port-->
                        <VAR ShortName="Port" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer" SaveLocation="X">
                            <Value><![CDATA[587]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.EMail.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                        <Value><![CDATA[Ok]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.EMail.Subject-->
                    <VAR ShortName="Subject" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                        <Value><![CDATA[Coopeshop]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.EMail.To-->
                    <VAR ShortName="To" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                        <Value><![CDATA[edid@free.fr]]></Value>
                        <!--.EDV.CoopEShop.edvAppli.EMail.To.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Checking) {
	var str = new StringBuilder();
	for(var m in Regex.Matches(.., ..RegexCleaner, RegexOptions.IgnoreCase)){
		if (str.Length) str.Append(";");
		str.Append(m.Value);
	}
	.. = str.ToString();
}
null;
]]></Script>
                        </VAR>
                    </VAR>
                </VAR>
                <DOM ShortName="Html">
                    <!--.EDV.CoopEShop.edvAppli.Html.Head-->
                    <VAR ShortName="Head" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<script src="/edv/.js?edvcode=.{WEB}.edv.UI.edvDataTable&edvsrvwb=cache" type="text/javascript"></script>
<script>
	edv.Appli.Enabled = true;
</script>
<?if (..User.NeedLogin 
  && (..User == null || !..User.Login)){
	echo(..User.Login.Visual.HTML);
}?>
]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                        <!--.EDV.CoopEShop.edvAppli.Html.Head._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                </DOM>
                <!--.EDV.CoopEShop.edvAppli.Images-->
                <VAR ShortName="Images" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Domain">
                    <!--.EDV.CoopEShop.edvAppli.Images.Articles-->
                    <VAR ShortName="Articles" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                        <Script><![CDATA[ .{Sys}.Web.RootPath + "\\CoopEShop\\Article.Image\\" ]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.jsc-->
                <VAR ShortName="jsc" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.edvAppli.jsc.OnChanging-->
                    <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                        <Script><![CDATA[when(..:Changing || (..Save:Changed && Reset)) {
	//Assembly
	var file = ..Save.File;
	if(file) {
		if(Reset)//delete dll for a new Compilation
			for(var ext in {"dll":1, "pdb":1, "js":1, "log":1})
				if(File.Exists(file + "." + ext))
					File.Delete(file + "." + ext);
		edvInfo = .{Library}.EDV.jsc.Server.SetScript({
			"master" : true
			, "root" : ..Save.Domains
			, "assembly" : file + ".dll"
			, "uid" : (..Version).Replace(".", "_")
		});
	}
}
null;
]]></Script>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.jsc.Reset-->
                    <VAR ShortName="Reset" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <Value><![CDATA[True]]></Value>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.jso-->
                <VAR ShortName="jso" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.edvAppli.jso.OnChanging-->
                    <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                        <Script><![CDATA[when(..:Changing) {
	if (!edv.Coopeshop)
		edv.Coopeshop = {};
	edvjs.Extend(edv.Coopeshop, {
		"DateMini" : DateTime.Parse("01/01/1900")
		, "DateMaxi" : DateTime.Parse("31/12/2099")
		, "dataSource" : ..edvAppli.DataSource
		, "cx" : function(connect){
			var cx = new edvData(this.dataSource);
			if(connect) cx.connection();
			return cx;
		}
		, "friendVisible" : function(friendType, visibility){
			if(friendType ==  "BAN"
			|| visibility == "HIDE")
				return false;
			switch(visibility){
			case "FRIEND" :
				switch(friendType){
				case "FRIEND" :
				case "NEIG" :
				case "SELF" :
					return true;
				default:
					return false;
				}
			case "CONT" :
				switch(friendType){
				case "FRIEND" :
				case "SELF" :
				case "CUST" :
				case "COLG" :
				case "PROV" :
				case "NEIG" :
				case "" :
					return true;
				default:
					return false;
				}
			case "PUBLIC" :
			default:
				return true;
			}
		}
	});

}
null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.Log-->
                <VAR ShortName="Log" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String" SaveLocation="V" Control="EDVCtrlLog">
                    <!--.EDV.CoopEShop.edvAppli.Log.AddDate-->
                    <VAR ShortName="AddDate" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <Value><![CDATA[True]]></Value>
                        <!--.EDV.CoopEShop.edvAppli.Log.AddDate.Format-->
                        <VAR ShortName="Format" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                            <Value><![CDATA[dd/MM/yyyy HH:mm:ss:fff]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Log.Destination-->
                    <VAR ShortName="Destination" ClassName="VarSelection" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Selection">
                        <Value><![CDATA[Console + Queue]]></Value>
                        <!--.EDV.CoopEShop.edvAppli.Log.Destination.Values-->
                        <VAR ShortName="Values" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Text">
                            <Value><![CDATA[Console
Console + File=
Console + Queue]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Log.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=.{Sys}.Error.Html(edvSender, {erase : (...:Domain)})?>
<?=.{Sys}.Error.Html?>]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.edvAppli.Log.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Log.LogQueue-->
                    <VAR ShortName="LogQueue" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object" SaveLocation="V">
                        <!--.EDV.CoopEShop.edvAppli.Log.LogQueue.Clear-->
                        <VAR ShortName="Clear" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <!--.EDV.CoopEShop.edvAppli.Log.LogQueue.Clear.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Changing)
{
	if(... != null)
		... = new Queue();
}
null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.Log.LogQueue.Reduce-->
                        <VAR ShortName="Reduce" ClassName="EDVDelay@EDVFunctions" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                            <!--.EDV.CoopEShop.edvAppli.Log.LogQueue.Reduce.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[try
{
	when(.. != null && ..:Changing){
		var logQueue;
		if ((logQueue = ...) != null) {
			var count : int = logQueue.Count;
			for(; count > 128; count--)
				logQueue.Dequeue();
		}
	}
}
catch(msg){}
null;]]></Script>
                            </VAR>
                            <!--.EDV.CoopEShop.edvAppli.Log.LogQueue.Reduce.Period-->
                            <VAR ShortName="Period" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Double">
                                <Value><![CDATA[86400000]]></Value>
                            </VAR>
                            <!--.EDV.CoopEShop.edvAppli.Log.LogQueue.Reduce.Repeat-->
                            <VAR ShortName="Repeat" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                                <Value><![CDATA[True]]></Value>
                                <!--.EDV.CoopEShop.edvAppli.Log.LogQueue.Reduce.Repeat.OnChanging-->
                                <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                    <Script><![CDATA[when(..)
{
	..Start;
}
null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.edvAppli.Log.LogQueue.Reduce.Start-->
                            <VAR ShortName="Start" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                        </VAR>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.OnLoad-->
                <VAR ShortName="OnLoad" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                    <Script><![CDATA[when(..:Checking && ..)
{	//edvAppli passe à true lors du chargement du fichier edvars du fait de l'existance d'un script OnLoad
	edvInfo = "Chargement de " + ..:Domain;

	jsc;

	jso;

	Data.Open;
	..DB.Fournisseurs.jso.Create;
}
null;]]></Script>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.Save-->
                <VAR ShortName="Save" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" SaveLocation="&lt;null&gt;)">
                    <!--.EDV.CoopEShop.edvAppli.Save.Backup-->
                    <VAR ShortName="Backup" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.edvAppli.Save.Backup.OnChanging-->
                        <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Changing)
{	//Crée une sauvegarde dans le même répertoire en ajoutant un
	var lsFileSrc : String = ..File;
	if (lsFileSrc != "" && File.Exists(lsFileSrc))
	{
		var lsDir : String = .{SYS}.Path.Backup;
		if (Directory.Exists(lsDir) && lsFileSrc != "" && File.Exists(lsFileSrc))
		{
			var lsFileDest : String = String.Format("{0}\\{1}.{2}.edvars", lsDir, Path.GetFileNameWithoutExtension(lsFileSrc), DateTime.Now.ToString("yyMMdd.HHmmss.fff"));
			edvInfo = "Copie de sauvegarde dans " + lsFileDest;
			File.Copy(lsFileSrc, lsFileDest);
		}
	}
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Save.Domains-->
                    <VAR ShortName="Domains" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Text">
                        <Script><![CDATA[edvTools.ParentName(..edvAppli:Name)]]></Script>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Save.File-->
                    <VAR ShortName="File" ClassName="VarFile" AutoReset="0" Securized="0" ReadOnly="1" ValueType="File" SaveLocation="V">
                        <Script><![CDATA[when(:Scripting && edvClient != null)
{
	var lsFile : String;
	if ((lsFile = edvClient.OpeningVarsFile) != null && lsFile != "" && !lsFile.StartsWith("<"))
		lsFile;
	else if(!:IsSys) {
		edvInfo ="\t\t\tATTENTION : le fichier d'application n'est pas défini pour " + ..edvAppli:Domain;
		me;
	}
}]]></Script>
                        <!--.EDV.CoopEShop.edvAppli.Save.File.Exists-->
                        <VAR ShortName="Exists" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Boolean">
                            <Value><![CDATA[True]]></Value>
                            <!--.EDV.CoopEShop.edvAppli.Save.File.Exists.OnChanging-->
                            <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(..:Changing || :Scripting)
{
	..Save:ReadOnly = !(..);
}
null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Save.OnChanging-->
                    <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                        <Script><![CDATA[when(..)
{	..Data.Save;
	edvClient.SaveToVarsFile(File, Domains);
	edvInfo = edvTools.ParentName(..edvAppli:Name) + " est enregistré dans " + File;
}
null;]]></Script>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Save.OnChecking-->
                    <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                        <Script><![CDATA[when(..:Checking)
{ edvInfo = :Name;
	var varLog = edvar(..:Domain + "log");
	if(varLog != null) varLog.Value = :Name;

	if (File == "") {
		edvError = "Impossible d'enregistrer l'application car le fichier d'origine est inconnu";
		.. = false;
	}
	else {
		Backup;
	}
}
null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.SessionClone-->
                <VAR ShortName="SessionClone" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean" SaveLocation="XV">
                    <!--.EDV.CoopEShop.edvAppli.SessionClone.OnChanging-->
                    <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                        <Script><![CDATA[when(..)
{
	if(:NameUpper.StartsWith(".{CLIENTS}")){
		edvInfo = :Name + newline + " CLONE(" + (..edvAppli:Domain).Substring(:Name.IndexOf(".", 12))+  "  ,  " +  ..edvAppli:Domain + ")";
		edvClient.Clone((..edvAppli:Domain).Substring(:Name.IndexOf(".", 12)), ..edvAppli:Domain);
		edvClient.Variable(..Log:Name.Substring(edvClient.DomClient.Length)).Value = "Connexion de " + edvClient.ToString();
	}
}
null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.Title-->
                <VAR ShortName="Title" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                    <Value><![CDATA[CoopEShop - L'échoppe en coop]]></Value>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.Update-->
                <VAR ShortName="Update" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                    <!--.EDV.CoopEShop.edvAppli.Update.EDVVisual-->
                    <VAR ShortName="EDVVisual" ClassName="VarFile" AutoReset="0" Securized="0" ReadOnly="1" ValueType="File">
                        <Script><![CDATA[.{Sys}.Path.Bin + "\\EDVVisual.exe"]]></Script>
                        <!--.EDV.CoopEShop.edvAppli.Update.EDVVisual.Arguments-->
                        <VAR ShortName="Arguments" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                        <!--.EDV.CoopEShop.edvAppli.Update.EDVVisual.Open-->
                        <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Update.OnChanging-->
                    <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                        <Script><![CDATA[/*when(..:Changing)
{
	..Visual.WIN.Close;
	..Data.Save;
	..BBSacs = false;
	
	var varUpdate = edvClient.Variable(..BBSacs:Domain + "edvUpdate", EDVType.Boolean);
	varUpdate.Asynchron = true;
	var varScript = edvClient.Variable(..BBSacs:Domain + "edvUpdate.OnChanging", EDVType.Boolean);
	varScript.Script = "when(..){"
			+"\n edvInfo = 'début de la mise à jour';"
			+"\n var file = ..BBSacs.Global.SaveAppli.File;"
			+"\n edvClient.Remove(..BBSacs:NameUpper);"
			+"//\n edvClient.OpenVarsFile(file, DOM.ROOT)"
			+"//\n edvInfo = \"Application rechargée\";"
			+"\n edvClient.Remove(..:Name)"
			+"\n}null;";
	varUpdate.Value = true;
}
null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.Url-->
                <VAR ShortName="Url" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                    <Script><![CDATA[var path = ..:Domain;
var isSession = path.StartsWith(".{CLIENTS}");
if(isSession)
	"/edv/CoopEShop/" + path.Substring(path.IndexOf(".",12)) + "edvsess";
else
	"/edv/CoopEShop/" + path + "edvmaster";
]]></Script>
                    <!--.EDV.CoopEShop.edvAppli.Url.Full-->
                    <VAR ShortName="Full" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                        <Script><![CDATA["http://www.CoopEShop.net" + ..]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.User-->
                <VAR ShortName="User" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object" SaveLocation="V">
                    <!--.EDV.CoopEShop.edvAppli.User.Id-->
                    <VAR ShortName="Id" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="String">
                        <Value><![CDATA[16]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.User.Login-->
                    <VAR ShortName="Login" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean" SaveLocation="V">
                        <!--.EDV.CoopEShop.edvAppli.User.Login.Check-->
                        <VAR ShortName="Check" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?//requested from page
if (arguments){
	var user;
	var users = ..Users:Object;
	
	var userKey = arguments.UserKey;
	var pwd = arguments.Password;
	if (userKey && pwd){
		try {
			var idUser = edvCrypt.Decrypt(pwd.Replace("%3D","="), userKey);
			if(Int32.TryParse(idUser)) {
				userKey = idUser;
				pwd = edvCrypt.Encrypt(DateTime.Now.Date.ToString(),"edv").Replace("+"," ");
			}
		}
		catch(msg){}
	}	
	
	if (userKey
	&& (user = users["GetUser"].Value(userKey, pwd, ".", session.DataSource = ..DataSource, edv))
		 != null && user instanceof Microsoft.JScript.JSObject) {
		UserKey = user.EMail;
		..User = user;
		..User.Name = user.Name;
		..User.Id = user.IdUser;
		session.User = user;
		.. = true;
		var logName = :IsSys ? ..Log:Name.Substring(edvClient.DomClient.Length) : ..Log:Name;
		edvClient.Variable(logName).Value 	= "Connexion de " + edvClient.ToString() 
			+ " - " + edvjs.json(session);			
		user.Rights[".Admin"] = user.Rights[".Admin"] == undefined ? 0 : user.Rights[".Admin"];
		?>Ok
<?		?><EDV>
<?		?>	<LOGIN check="Ok" ssid="<?=edvClient.SessionID?>">
<?		?>	<MSG>Connection ok</MSG>
<?		?>	<USER id="<?=user.IdUser?>" 
<?		?>		name="<?=user.Name.Replace("\"","'")?>" 
<?		?>		email="<?=user.EMail?>"/>
<?		if(arguments.AutoCx){?>
<?		?>	<AUTOCX><?=edvCrypt.Encrypt(user.IdUser, user.EMail)?></AUTOCX>
<?}?><?	?>	<REDIR>/edv/CoopEShop/.EDV.CoopEShop.edvsess?edvsessionid=<?=edvClient.SessionID?></REDIR>
<?		?>	<FULLREDIR>/edv/CoopEShop/.EDV.CoopEShop.edvsess?visual=<?=..CoopEShop.Visual:Name?>&edvsessionid=<?=edvClient.SessionID?></FULLREDIR>
<?		?>	</LOGIN>
<?		?></EDV><?
	}
	else if(user instanceof String && user != null && user != "")
		echo(user);
	else {
		echo("Identifiant ou mot de passe incorrect.");
	}
}	
else 
	echo("Recherche inconnue.");
?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.edvAppli.User.Login.Check._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.User.Login.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Checking && !..)
{
	... = null;
	..Id = "";
	..Name = "";
	if (edvarExists(edvClient.DomClient + ".{Session}.CoopEShopUser"))
		edvar(edvClient.DomClient + ".{Session}.CoopEShopUser").Value = userKey;

}
null;]]></Script>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.User.Login.UserKey-->
                        <VAR ShortName="UserKey" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V">
                            <!--.EDV.CoopEShop.edvAppli.User.Login.UserKey.OnScripting-->
                            <VAR ShortName="OnScripting" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                                <Script><![CDATA[when(:Scripting)
{
	.. = "";
}
null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.User.Login.Visual-->
                        <VAR ShortName="Visual" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.HTML-->
                            <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?if(0){?><p class="edvError">MAINTENANCE</p><?}?>
<?..Login = false;

var userKey;
var pwd="";
var varCookie = edvar(edvClient.DomClient + ".{Session}.CoopEShopUser");
if (varCookie != null){//cookie
	userKey = varCookie.Value;
	if(userKey == null || !userKey){
		varCookie = edvar(edvClient.DomClient + ".{Session}.Cookie");
		if (varCookie != null
		&& varCookie.Value != null && varCookie.Value){//cookie
			for(userKey in varCookie.Value.Split(";").GetEnumerator())
				if(userKey.StartsWith("CoopEShopUser=")) {
					userKey = userKey.Split("=")[1];
					break;
				}
		}
	}
	if (userKey != null && userKey && edvarExists(edvClient.DomClient + ".{Session}.AutoCx")){
		var autoCx = edvar(edvClient.DomClient + ".{Session}.AutoCx").Value;
		if(autoCx){
			try {
				var idUser = edvCrypt.Decrypt(autoCx.Replace("%3D","="), userKey);
				if(Int32.TryParse(idUser)) pwd = autoCx;
			}
			catch(ex){}
		}
	}	
}
else
	userKey = ..UserKey;

?>
<div id="dlgUserLogin" title="<?=..Title?> : Connexion">
	<table>
	<tr><td>Utilisateur :<td><INPUT id="UserLogin-UserKey" value="<?=(arguments && arguments.UserKey) ? arguments.UserKey : userKey?>"
					onkeypress="if (getKeyPress(event)==13) UserLoginCheck();"
						size="30">
	<tr><td>Mot de passe :<td><INPUT id="UserLogin-Password" value="<?=pwd?>" type="password"
						onkeypress="if (getKeyPress(event)==13) UserLoginCheck();"
						size="16">
	<tr><td><td><label style="font-size:smaller"><input type="checkbox" id="UserLogin-autoCx"
		<?=pwd ? "checked=\"checked\"" : ""?>
		<?=pwd ? "onclick=\"if(!this.checked) $('#UserLogin-Password').val('')\"" : ""?>
		> se souvenir de mon mot de passe</label>
	</table>
</div>

<script type="text/javascript">

	$(document).ready(function() {
		edv.Appli.Enabled = false;
	    	$("#dlgUserLogin").dialog({ 
					autoOpen: true,
					modal: true,
					buttons: {
						"Ok": function() { UserLoginCheck(); }
						},
					open: function(event, ui) {
							if (<?=!..Login?>) 
								$(this.parentNode).children(".ui-dialog-titlebar").children(".ui-dialog-titlebar-close").hide();
							},
					closeOnEscape: false,
					resizable: false,
					width : 470
					}
		);
		$($("#dlgUserLogin").dialog("widget"))
			.append('<a style="font-size:small; position:absolute; bottom:0.2em; "'
				+ ' class="edvicon edvimgAdd"'
				+ ' onclick="UserNew();">nouvel utilisateur</a>')
			.append('<a style="font-size:small; position:absolute; bottom:0.2em; left:12em;" href="<?=..edvAppli:Domain?>Docs.edvvisual?edvargs.menu=1" target="_blank"><img src="/edv/Images/EDV.png" width="12px"/> informations</a>')
;
	});

	function UserLoginCheck(){
		edv.Wait.Show();
		var userKey = document.getElementById("UserLogin-UserKey").value;
		if (userKey == ""){
			edv.Wait.Hide();
			alert("Veuillez saisir l'identifiant de connexion.");
			return false;
		}
		var password = document.getElementById("UserLogin-Password").value;
		var autoCx = document.getElementById("UserLogin-autoCx").checked;
		var check = edvar("<?=..Check:Name?>",'edvSessionID=<?=edvClient.SessionID?>&edvargs={UserKey: "' + userKey + '", Password: "' + password + '", AutoCx: " + autoCx + "}', undefined, "code");		
		if (check.substr(0,2)=="Ok"){
			setCookie("CoopEShopUser", userKey, 62);
			var pos;
			if(autoCx)
				if((pos = check.indexOf("<AUTOCX>")) > 0)
					setCookie("AutoCx", check.substr(pos + 8, check.indexOf("</AUTOCX>")-(pos+8)), 62);
				else setCookie("AutoCx", "");
			else setCookie("AutoCx", "");
				
			if((pos = check.indexOf("<REDIR>")) > 0)
				document.location.href = check.substr(pos + 7, check.indexOf("</REDIR>")-(pos+7));
			else
				document.location.href = "<?=(arguments && arguments.Url) ? arguments.Url : ..Url?>";
			return true;
		}
		$("#dlgUserLogin").dialog( "option", "buttons"
			, {	"j'ai oublié mon mot de passe..." : function() {UserNewPwd();}
				, "Connecter" : function() { UserLoginCheck();}
				}
			 );
		edv.Wait.Hide();
		alert(check);
		return false;
	}
	
	function setCookie(c_name, value, exdays)
	{
		var exdate=new Date();
		exdate.setDate(exdate.getDate() + exdays);
		var c_value=escape(value) + ((exdays==null) ? "" : "; expires=-1");
		document.cookie=c_name + "=" + c_value;
		c_value=escape(value) + ((exdays==null) ? "" : "; expires="+exdate.toUTCString());
		document.cookie=c_name + "=" + c_value;
	}
	function UserNewPwd(){
		if(!confirm("Un nouveau mot de passe va vous être envoyé par message électronique."))
			return false;
		var userKey = document.getElementById("UserLogin-UserKey").value;
		if (userKey.indexOf("@") == -1){
			alert("Veuillez saisir votre adresse électronique dans la zone Utilisateur.").value;
			return false;
		}
		edv.Wait.Show();
		var check = edvar("<?=..DB.User.Html.RndPwd:Name?>",'edvSessionID=<?=edvClient.SessionID?>&edvargs={EMail: "' + userKey + '"}', undefined, "code");
		edv.Wait.Hide();
		if(check=="0"){
			if(confirm("Cette adresse est inconnue."
					+ "\r\nVoulez vous créer un utilisateur ?")){
				UserNew(userKey);
			}
			return false;
		}
		alert(check);
	}
	function UserNew(email){
		if (!email){
			email = document.getElementById("UserLogin-UserKey").value;
			var check = edvar("<?=..DB.User.Html.Exists:Name?>",'edvSessionID=<?=edvClient.SessionID?>&edvargs={EMail: "' + email + '"}', undefined, "code");		
			if(check != "0"){
				alert("Cette adresse électronique existe déjà pour un " 
					+ (check == "C" ? "contact" : "utilisateur")
					+ ".");
				return false;
			}
		}
		if(email.indexOf("@") == -1){
			alert("Veuillez saisir votre adresse électronique dans la zone Utilisateur.").value;
			return false;
		}

		edvDialog.Show("<?=..DB.Contact.Html.New:Name?>"
			, "edvargs={EMail:'" + email + "'}"
			, {	title : "Nouvel utilisateur"
			  	, buttons : null
				, close : function(){
					edvDialog.Show("<?=..DB.User.Html.New:Name?>"
						, "edvargs={EMail:'" + email + "'}"
						, {	title : "Nouvel utilisateur"
						  	, buttons : null
							}
						, "edvEditor");	
				}}
			, "edvEditor");
		return true;
	}
</script>
]]></Value>
                                <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.HTML.CSS-->
                                <VAR ShortName="CSS" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                    <Value><![CDATA[<?=edv.{WEB}.CSS(edvSender)?>]]></Value>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.HTML.CSS._Where-->
                                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                    </VAR>
                                </VAR>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.HTML.Head-->
                                <VAR ShortName="Head" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                    <Value><![CDATA[<?=edv.{WEB}.HEAD(edvSender)?>
<?=..edvAppli.HTML.Head?>]]></Value>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.HTML.Head._Where-->
                                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                    </VAR>
                                </VAR>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.HTML.Main-->
                                <VAR ShortName="Main" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.HTML.Main.HTML-->
                                    <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                        <Value><![CDATA[<?=edv.{WEB}.Main(edvSender, arguments, edvClient)?><?/*remplacez par 'edv.{WEB}.Main.Value', surlignez tout puis F9 pour avoir le script*/?>]]></Value>
                                        <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.HTML.Main.HTML._Where-->
                                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                        </VAR>
                                    </VAR>
                                </VAR>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.HTML._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN-->
                            <VAR ShortName="WIN" ClassName="WinForm@EDVVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Boolean">
                                <Value><![CDATA[True]]></Value>
                                <DOM ShortName="ctrlLabel">
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlLabel.@-->
                                    <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlLabel.Bounds-->
                                    <VAR ShortName="Bounds" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                                        <Value><![CDATA[{X=0,Y=4,Width=47,Height=15}]]></Value>
                                    </VAR>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlLabel.Text-->
                                    <VAR ShortName="Text" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                        <Value><![CDATA[Nom :]]></Value>
                                    </VAR>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlLabel._ClassName-->
                                    <VAR ShortName="_ClassName" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                        <Value><![CDATA[System.Windows.Forms.Label]]></Value>
                                    </VAR>
                                </DOM>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLLABEL1-->
                                <VAR ShortName="CTRLLABEL1" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLLABEL1.@-->
                                    <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLLABEL1.Bounds-->
                                    <VAR ShortName="Bounds" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                                        <Value><![CDATA[{X=0,Y=32,Width=96,Height=17}]]></Value>
                                    </VAR>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLLABEL1.Text-->
                                    <VAR ShortName="Text" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                        <Value><![CDATA[Mot de passe :]]></Value>
                                    </VAR>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLLABEL1._ClassName-->
                                    <VAR ShortName="_ClassName" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                        <Value><![CDATA[System.Windows.Forms.Label]]></Value>
                                    </VAR>
                                </VAR>
                                <DOM ShortName="ctrlLinkLabel">
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlLinkLabel.@-->
                                    <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlLinkLabel.Bounds-->
                                    <VAR ShortName="Bounds" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                                        <Value><![CDATA[{X=66,Y=66,Width=66,Height=15}]]></Value>
                                    </VAR>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlLinkLabel.Text-->
                                    <VAR ShortName="Text" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                        <Value><![CDATA[Connexion]]></Value>
                                    </VAR>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlLinkLabel._ClassName-->
                                    <VAR ShortName="_ClassName" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                        <Value><![CDATA[System.Windows.Forms.LinkLabel]]></Value>
                                    </VAR>
                                </DOM>
                                <DOM ShortName="ctrlTextBox">
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlTextBox.@-->
                                    <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlTextBox.Bounds-->
                                    <VAR ShortName="Bounds" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                                        <Value><![CDATA[{X=100,Y=1,Width=100,Height=21}]]></Value>
                                    </VAR>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlTextBox.Text-->
                                    <VAR ShortName="Text" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.ctrlTextBox._ClassName-->
                                    <VAR ShortName="_ClassName" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                        <Value><![CDATA[System.Windows.Forms.TextBox]]></Value>
                                    </VAR>
                                </DOM>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLTEXTBOX1-->
                                <VAR ShortName="CTRLTEXTBOX1" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLTEXTBOX1.@-->
                                    <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLTEXTBOX1.Bounds-->
                                    <VAR ShortName="Bounds" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                                        <Value><![CDATA[{X=100,Y=28,Width=100,Height=21}]]></Value>
                                    </VAR>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLTEXTBOX1.PasswordChar-->
                                    <VAR ShortName="PasswordChar" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                        <Value><![CDATA[*]]></Value>
                                    </VAR>
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLTEXTBOX1.Text-->
                                    <VAR ShortName="Text" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" />
                                    <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.CTRLTEXTBOX1._ClassName-->
                                    <VAR ShortName="_ClassName" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                        <Value><![CDATA[System.Windows.Forms.TextBox]]></Value>
                                    </VAR>
                                </VAR>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.Font-->
                                <VAR ShortName="Font" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                                    <Value><![CDATA[[Font:Name=Microsoft Sans Serif,Size=9,Bold=False,Italic=False,Underline=False,Strikeout=False]]]></Value>
                                </VAR>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.Height-->
                                <VAR ShortName="Height" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                    <Value><![CDATA[82]]></Value>
                                </VAR>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.Width-->
                                <VAR ShortName="Width" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                                    <Value><![CDATA[206]]></Value>
                                </VAR>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.WindowStartPosition-->
                                <VAR ShortName="WindowStartPosition" ClassName="FormStartPosition@System.Windows.Forms" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                                    <Value><![CDATA[Manual]]></Value>
                                </VAR>
                                <!--.EDV.CoopEShop.edvAppli.User.Login.Visual.WIN.WindowState-->
                                <VAR ShortName="WindowState" ClassName="FormWindowState@System.Windows.Forms" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Object">
                                    <Value><![CDATA[Normal]]></Value>
                                </VAR>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.User.Name-->
                    <VAR ShortName="Name" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V">
                        <!--.EDV.CoopEShop.edvAppli.User.Name.OnScripting-->
                        <VAR ShortName="OnScripting" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(:Scripting)
{
	.. = "";
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.User.NeedLogin-->
                    <VAR ShortName="NeedLogin" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Boolean">
                        <Value><![CDATA[True]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.User.Users-->
                    <VAR ShortName="Users" ClassName="VarLink" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Link">
                        <!--.EDV.CoopEShop.edvAppli.User.Users.@-->
                        <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                            <Value><![CDATA[.EDV.Coopeshop.DB.Users]]></Value>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.User.Visual-->
                    <VAR ShortName="Visual" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML-->
                        <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(..User.Name != "") {
?><a href="" class="imgEDVTypeEDV" onclick="$('#dlgEditUser').dialog('open');return false;">&nbsp;&nbsp;&nbsp;Utilisateur <?=..Name?></a>
<form id="dlgEditUser" class="EDVVisual" method="post" name="<?=..:Name?>" title="<?=..Name?> (<?=..Id?>)">
	<pre><?=edvjs.json(session)?></pre>
	<pre><?=edvjs.json(..User)?></pre>
	
	</fieldset>
	
</form>
</div>

<script type="text/javascript">

	$(document).ready(function() {
		edv.Appli.Enabled = false;
	    	$("#dlgEditUser").dialog({ 
					autoOpen: true,
					modal: true,
					buttons: { "Ok": function() {$("#dlgEditUser").dialog('close'); }
					},
					closeOnEscape: true,
					resizable: true,
					width : 500
					}
		);
	});
	
</script>
<?}?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML.A-->
                            <VAR ShortName="A" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?=edv.{HTML}.ICON({EDVType: 'EDV'})?><a href="#utilisateur" onclick="edv.HTMLElement.Replace(this,'<?=..:Name?>',null,null,'code');return false;"><?=..User.Name?></a>]]></Value>
                                <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                                <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML.A._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML.CSS-->
                            <VAR ShortName="CSS" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?=edv.{WEB}.CSS(edvSender)?>]]></Value>
                                <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML.CSS._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML.Head-->
                            <VAR ShortName="Head" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?=edv.{WEB}.HEAD(edvSender)?>
<?=..edvAppli.HTML.Head({Url : ...:Name+".edvvisual"})?>
]]></Value>
                                <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML.Head._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML.Main-->
                            <VAR ShortName="Main" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                                <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML.Main.HTML-->
                                <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                    <Value><![CDATA[<?=edv.{WEB}.Main(edvSender)?><?/*remplacez par 'edv.{WEB}.Main.Value', surlignez tout puis F9 pour avoir le script*/?>]]></Value>
                                    <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML.Main.HTML._Where-->
                                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                    </VAR>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.edvAppli.User.Visual.HTML._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.Version-->
                <VAR ShortName="Version" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                    <Script><![CDATA[:Major + "." + :Minor + "." + :Revision + "." + :Build]]></Script>
                    <!--.EDV.CoopEShop.edvAppli.Version.Build-->
                    <VAR ShortName="Build" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer">
                        <Value><![CDATA[39]]></Value>
                        <!--.EDV.CoopEShop.edvAppli.Version.Build.OnChecking-->
                        <VAR ShortName="OnChecking" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..Save:Checking)
{
	..+=1;
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Version.Major-->
                    <VAR ShortName="Major" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[1]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Version.Minor-->
                    <VAR ShortName="Minor" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[2]]></Value>
                    </VAR>
                    <!--.EDV.CoopEShop.edvAppli.Version.Revision-->
                    <VAR ShortName="Revision" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer">
                        <Value><![CDATA[0]]></Value>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.edvAppli.Visual-->
                <VAR ShortName="Visual" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.edvAppli.Visual.HTML-->
                    <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?var varRoot = ..edvAppli:Parent;?>
<form class="EDVVisual" method="post" name="frmAppliParams" action="">

<fieldset><legend>Paramètres</legend>
<input type="hidden" name="edvroot" value="<?=varRoot == null ? "" : varRoot.Name?>">

<table>
<?
var lCategory = "";
for(var lRow in ..Data:Select("Visual", "Category, Title, IdParam")) {
	var category = lRow.IsNull("Category") ? "" : lRow["Category"];
	if (lCategory != category){
		lCategory = category;
		?><tr><td><h3><?=category?></h3></tr>
		<?
	}
	var text = lRow["Title"];
	if (text == null || text == "")
		text = lRow["IdParam"];
	?><tr>
	<td><?=text?> : 
	<td><?=edv.{HTML}.edvar(varRoot[lRow["IdParam"]])?>
<?}?>
<tr><td colspan="2" align="center">
	<input type="hidden" name="<?=..Save:Name?>" value="True">
	<br/>
	<a href="?" style="background-color : white; padding:3px; font-size : larger"
		onclick="edv.Wait.Show();document.forms['frmAppliParams'].submit();">Enregistrer</a>
</table>

</fieldset>
</form>
<div style="padding-left:10px; border-top : 1px solid gray">
	
	<br/><br/><u>Notes : </u>
	<ul>
	<li></li>
	</ul>
	
	<code>
		Fichier d'origine : <?=..Save.File?>
		<br/>Source des paramètres : <?=..Data.Source?>
	</code>
	
	<br/>
<ul class="edvClients">Clients
<?for(var user in edvars(".{Clients}.?.CoopEShop.edvAppli.User"))
	if(user["..{Session}.CxTime"] != null){
		var clientID = user["..{Client}.ClientID"].Value;
	?>	<li <?if(!user.Value) echo("class=\"notEnabled\"");?>>
			<?=.{Models}.Client.Info.HTML.A({id : clientID});?>&nbsp;<?=user.Value ? user.Value.IdUser + " - " + user.Value.Name : "client " + user["Id"].Value?>
		(<?=(DateTime.Now.Subtract(DateTime(user["..{Session}.CxTime"].Value))).TotalMinutes.ToString("0")?> min)
			<input type="checkbox" onchange="$(this).next('div:first').toggle(this.checked);">
			<?=user.Value ? edv.JS.Object.ToHtml(user.Value,null,null, {className : "hidden", style : "background-color:white"}) : "client " + user["Id"].Value?>
		</li>
	<?}
?></ul>
	<br/><br/>
	<div id="divLog" name="<?=..Log.Html:Name?>"></div>
</div>
<script>
	edvGetHtml("divLog")

	edv.Wait.Hide();
</script>

]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.edvAppli.Visual.HTML.CSS-->
                        <VAR ShortName="CSS" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?=edv.{WEB}.CSS(edvSender)?>
<style>
	#MainInner {
		padding-left : 10%;
		padding-right : 5%;

	}
</style>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.edvAppli.Visual.HTML.CSS._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.Visual.HTML.Head-->
                        <VAR ShortName="Head" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?=edv.{WEB}.HEAD(edvSender)?>
<?=..edvAppli.HTML.Head({Url : ...:Name+".edvvisual"})?>]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.edvAppli.Visual.HTML.Head._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.Visual.HTML.Main-->
                        <VAR ShortName="Main" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                            <!--.EDV.CoopEShop.edvAppli.Visual.HTML.Main.HTML-->
                            <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?=edv.{WEB}.Main(edvSender)?>]]></Value>
                                <!--.EDV.CoopEShop.edvAppli.Visual.HTML.Main.HTML._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.edvAppli.Visual.HTML._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                </VAR>
            </VAR>
            <!--.EDV.CoopEShop.PCEA-->
            <VAR ShortName="PCEA" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Domain">
                <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                <!--.EDV.CoopEShop.PCEA.Ami-->
                <VAR ShortName="Ami" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="IdDossier" type="xs:int" minOccurs="0" /><xs:element name="TypeDossier" type="xs:string" minOccurs="0" /><xs:element name="DateDossier" type="xs:dateTime" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="IdClient" type="xs:int" minOccurs="0" /><xs:element name="ClosedDate" type="xs:dateTime" minOccurs="0" /><xs:element name="Status" type="xs:string" minOccurs="0" /><xs:element name="IdDossierRef" type="xs:int" minOccurs="0" /><xs:element name="TypeDossierRef" type="xs:string" minOccurs="0" /><xs:element name="Comment" type="xs:string" minOccurs="0" /><xs:element name="IdUser" type="xs:int" minOccurs="0" /><xs:element name="IdUser1" type="xs:int" minOccurs="0" /><xs:element name="IdDossier1" type="xs:int" minOccurs="0" /><xs:element name="CreationDate" type="xs:dateTime" minOccurs="0" /><xs:element name="CreationIdUser" type="xs:int" minOccurs="0" /><xs:element name="Rights" type="xs:int" minOccurs="0" /><xs:element name="Status1" type="xs:string" minOccurs="0" /><xs:element name="Comment1" type="xs:string" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.PCEA.Ami.Alter-->
                    <VAR ShortName="Alter" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.PCEA.Ami.Alter.OnChanging-->
                        <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Changing)
{
	edvInfo = :Name + " : " + edv.Data.Execute(..SQLAlter, ..edvAppli.DataSource);
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Ami.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.PCEA.Ami.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=:Edit?>]]></Value>
                        <!--.EDV.CoopEShop.PCEA.Ami.Html.Commun-->
                        <VAR ShortName="Commun" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
var sql = "SELECT P.IdUser, UC.IdUser2, U.Name"
		+ " FROM pceauser P"
		+ " INNER JOIN contact U"
			+ " ON U.IdContact = P.IdUser"
		+ " LEFT JOIN pceausercommun UC"
			+ " ON UC.IdDossier = P.IdDossier"
			+ " AND UC.IdUser2 = P.IdUser"
			+ " AND UC.IdUser1 = ?"
		+ " WHERE P.IdDossier = ?";
	sql += " ORDER BY UC.IdUser2 DESC, U.Name";

var cx = new edvData(session.DataSource);
arguments.DataTable = cx.select(sql, [arguments.IdContact, arguments.IdDossier]);
if (!(arguments.DataTable instanceof DataTable))
	throw new EDVException(arguments.DataTable);
?><select name="<?=arguments.tagName?>" value="" 
	onchange="<?=arguments.onClick ? arguments.onClick : ""?>"
	class="<?=arguments.className ? arguments.className : ""?>"
	multiple="multiple" size="3">
<option value="">(aucun)</option>
<?for(var dtRow in arguments.DataTable.Rows)
	if(dtRow["IdUser"] != arguments.IdContact){
	?>	<option value="<?=dtRow["IdUser"]?>" <?=dtRow.IsNull("IdUser2") ? "" : "selected=\"selected\""?>><?=dtRow["Name"]?></option>
<?}
?>
</select>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Ami.Html.Commun._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Ami.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
arguments.TypeDossier = "PCEA";
var cx = new edvData(session.DataSource);
if(arguments.Execute){
	if (!session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdUser])
		throw new EDVException("Accès non conforme");
	session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdUser]=undefined;
	
	var sql = "DELETE FROM pceausercommun"
		+ " WHERE IdDossier = ?"
		+ " AND (IdUser1 = ? OR IdUser2 = ?)"
		;				
	var result = cx.execute(sql, [arguments.IdDossier, arguments.IdUser, arguments.IdUser]);
	if (typeof(result) === "string")
		edvReturn("pceausercommun : " + result);
		
	var sql = "DELETE FROM pceauser"
		+ " WHERE IdDossier = ?"
		+ " AND IdUser = ?"
		;				
	var result = cx.execute(sql, [arguments.IdDossier, arguments.IdUser]);
	if (typeof(result) === "string")
		throw new EDVException(result);
		
	var sql = "DELETE FROM lgdossier"
		+ " WHERE TypeDossier = 'PCEA'"
		+ " AND IdDossier = ?"
		+ " AND (IdContact = ?"
		+ "	 OR IdArticle = ?)"
		;				
	result = cx.execute(sql, [arguments.IdDossier, arguments.IdUser, arguments.IdUser]);
	if (typeof(result) === "string")
		throw new EDVException(result);
		
	echo("Ok");
}

else {
	var sql = "SELECT U.Name, D.IdContact, D.Name AS DName, P.IdUser, P.Rights"
			+ ", SUM(Price) AS Solde"
			+ ", COUNT(LGD.Line) AS NbRows"
			+ " FROM contact U"
			+ " INNER JOIN pceauser P"
			+ " 	ON P.IdUser = U.IdContact"
			+ " INNER JOIN dossier D"
			+ " 	ON P.IdDossier = D.IdDossier"
			+ " 	AND D.TypeDossier = 'PCEA'"
			+ newline
			+ " LEFT JOIN pceausers PUC"
			+ " 	ON PUC.IdDossier = D.IdDossier"
			+ " 	AND PUC.IdUserC = P.IdUser"
			+ newline
			+ " LEFT JOIN lgdossier LGD"
			+ " 	ON LGD.IdDossier = D.IdDossier"
			+ " 	AND LGD.TypeDossier = D.TypeDossier"
			+ " 	AND LGD.IdArticle = PUC.IdUser"
			+ " WHERE P.IdUser = ?"
			+ " AND P.IdDossier = ?"
			+ " GROUP BY U.Name, D.IdContact, D.Name, P.IdUser"
			+ " LIMIT 1";

//	edvInfo = sql + newline + edv.json(arguments);
	arguments.DataTable = cx.select(sql, [arguments.IdUser, arguments.IdDossier]);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if(arguments.DataTable.Rows.Count==0)
		throw new EDVException("Elément inconnu");
	var dtRow = arguments.DataTable.Rows[0];
	
	if(dtRow["Rights"] >= 15) {
		sql = "SELECT IFNULL(Count(*),0)"
				+ " FROM pceauser P"
				+ " WHERE P.IdUser <> ?"
				+ " AND P.IdDossier = ?"
				+ " AND P.Rights >= 15";
		var dtRights = cx.select(sql, [arguments.IdUser, arguments.IdDossier]);
		if (!(dtRights instanceof DataTable))
			throw new EDVException(dtRights);		
		if(dtRights.Rows[0][0] == 0)
			edvReturn("Cet utilisateur est l'unique administrateur du compte, il ne peut donc pas être supprimé.");
	}
	
	session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdUser]=true;
	?>
	<param class="edvDialogOption" name="width" value="700"/>
	<div class="MessageBox edvEditor">
		<? var canDelete;
		if(!dtRow.IsNull("Solde") && dtRow["Solde"] != 0){?>
			Vous ne pouvez pas supprimer cet utilisateur car son solde n'est pas nul.
		<?}
		else if(!dtRow.IsNull("NbRows") && dtRow["NbRows"] != 0){
			?>Vous ne pouvez pas supprimer cet utilisateur car des écritures comptables lui sont affectées.<?
			if(..Dossier.Html.Delete.CanDo(arguments) == "Ok") {
				?><br>Tous les comptes étant soldés, vous pouvez supprimer entièrement le petit compte.
				<br><a href="" onclick="return !edvDialog(this).Show('<?=..Dossier.Html.Delete:Name?>', 'edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=arguments.IdDossier?>}', {title:'Petit compte entre amis'});">
				<img src="/edv/Images/delete.png" title="Supprimer le petit compte" width="14">Supprimer entièrement le petit compte <?=dtRow["DName"]?></a><?
			}
		}
		else
			canDelete = true;
		if(canDelete) {?>
			Etes vous sûr de vouloir supprimer <?=dtRow["Name"]?> de la liste des amis
			<br>du petit compte <?=dtRow["DName"]?> ?
			<br><a class="submit delete" href="?" onclick="return AmiDeleteExecute()">
			Supprimer</a>
			<script>
				function AmiDeleteExecute(){
					var result;
					if((result = edvGetHTML("<?=:Name?>", "edvargs={IdDossier:<?=arguments.IdDossier?>, IdUser:<?=arguments.IdUser?>, Execute:true}"))=="Ok"
					|| typeof(result) != "string"){
						return true;
					}
					alert(result);
					return false;
				}
			</script>
		<?}?>
	</div>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Ami.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Ami.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};

if(!arguments.DataRow && !arguments.DataTable){
		
	var cx = new edvData(session.DataSource);
	var sql = "SELECT U.Name, U.IdContact, U.EMail, P.*"
			+ ", P.Status AS PCEAStatus, S.Label AS PCEAStatusLabel"
			+ ", D.Name AS DName"
			+ " FROM contact U"
			+ " INNER JOIN pceauser P"
			+ " 	ON U.IdContact = P.IdUser"
			+ " INNER JOIN pceadossiers D"
			+ " 	ON D.IdDossier = P.IdDossier"
			+ " INNER JOIN parameter S"
			+ " 	ON S.Domain = 'PCEA.USER.STATUS'"			
			+ " 	AND P.Status = S.IdParam"			
			+ " WHERE P.IdUser = ?"
			+ " AND P.IdDossier = ?"
	
	var sqlArgs = [];
	if (arguments.IdContact)
		sqlArgs.push(arguments.IdContact);
		
	else if (arguments.IdUser)
		sqlArgs.push(arguments.IdUser);
	else
		edvReturn("arguments manquants");

	sqlArgs.push(arguments.IdDossier);
	
	arguments.DataTable = cx.select(sql, sqlArgs);
	
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucun enregistrement.  " + sql );		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
?>
<param class="edvDialogOption" name="title" value="Ami du petit compte <?=dtRow["DName"]?>"/>
<param class="edvDialogOption" name="width" value="800"/>
<form method="post" action="?" class="EDVVisual edvEditor PCEA">
<fieldset>
<legend><a href="#<?=dtRow["IdContact"]?>" class="info <?=dtRow.IsNull("IdUser") ? "contactRef" : "user"?>"
			onclick="edvDialog().Show('<?=..DB.Contact.Html.Edit:Name?>', 'edvArgs={Id:<?=dtRow["IdContact"]?>}', {title:'Ami <?=dtRow["IdContact"]?>', Refresh:edvDialog(this)}, 'edvEditor');return false;">
		<?=dtRow["Name"]?>
	</a>
	<img class="pointer" src="/edv/Images/SendMsg.png" alt="envoyer un message"
		onclick="edvDialog.Show('<?=..DB.User.EMail.Edit:Name?>', 'edvargs={To:\'<?=dtRow["EMail"]?>\'}', {title : 'Envoi d\'un message', width:700}, 'edvEditor')"/>
</legend>
<span class="rowInfo">membre depuis le <?=dtRow["CreationDate"].ToString("dddd dd MMMM yyyy HH:mm")?></span>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvcode" value="Html.Update"/>
<input type="hidden" name="edvargs.IdDossier" value="<?=dtRow["IdDossier"]?>"/>
<input type="hidden" name="edvargs.IdUser" value="<?=dtRow["IdUser"]?>"/>
<input type="hidden" name="edvargs.CreationIdUser" value="<?=dtRow["CreationIdUser"]?>"/>
<br>
<label>Droits : </label>
<select <?if((session.User.PCEA.Rights[dtRow["IdDossier"]] & 15) == 15){?>name="edvArgs.Rights"<?}?> value="<?=dtRow["Rights"]?>">
<option value="0" <?if(dtRow["Rights"]==0) echo("selected=\"selected\"")?>>Compte invisible pour cet utilisateur</option>
<option value="1" <?if(dtRow["Rights"]==1) echo("selected=\"selected\"")?>>Cet utilisateur voit le compte mais ne peut pas le modifier</option>
<option value="3" <?if(dtRow["Rights"]==3) echo("selected=\"selected\"")?>>Cet utilisateur peut ajouter des écritures de dettes uniquement</option>
<option value="7" <?if(dtRow["Rights"]==7) echo("selected=\"selected\"")?>>Cet utilisateur peut ajouter tout type d'écriture</option>
<option value="15" <?if(dtRow["Rights"]>=15) echo("selected=\"selected\"")?>>Cet utilisateur est administrateur du compte</option>
</select>

<?
switch(dtRow["PCEAStatus"]){
	case "INVIT" :?>
		<br><br><?
		if(dtRow["IdUser"] == session.User.IdUser){?>
			<a href="" class="ValidateInvit"
				name="edvargs={IdContact:<?=dtRow["IdContact"]?>,IdDossier:<?=dtRow["IdDossier"]?>}"
				onclick="return edv.PCEA.User.ValidateInvit(this);"
			>Vous êtes invité(e) à participer à ce petit compte</a>
			&nbsp;<a href="" onclick="<?
				  ?>if(confirm('Vous allez refuser l\'invitation à participer au petit compte.<?
					?>\r\nAprès votre confirmation, vous devrez de nouveau recevoir une invitation pour faire partie de ce petit compte.'))<?
					?>edvDialog(this).Show('<?=..Ami.Html.Delete:Name?>', 'edvargs={IdUser:<?=dtRow["IdUser"]?>, IdDossier:<?=dtRow["IdDossier"]?>}', {title:'Ami de petit compte'});<?
				?> return false;">
				<img src="/edv/Images/delete.png" title="Supprimer"></a>
		<?}
		else {?>Cet utilisateur est invité à participer à ce petit compte
			<a href="" onclick="<?
				  ?>if(confirm('Vous allez supprimer l\'invitation à participer au petit compte.<?
					?>\r\nAprès votre confirmation, l\'utilisateur devra recevoir de nouveau une invitation pour faire partie de ce petit compte.'))<?
					?>edvDialog(this).Show('<?=..Ami.Html.Delete:Name?>', 'edvargs={IdUser:<?=dtRow["IdUser"]?>, IdDossier:<?=dtRow["IdDossier"]?>}', {title:'Ami de petit compte'});<?
				?> return false;">
				<img src="/edv/Images/delete.png" title="Supprimer"></a>
				<br/><a href="#msg"
					onclick="edvDialog.Show('<?=..DB.User.EMail.Edit:Name?>', 'edvargs={To:\'<?=dtRow["EMail"]?>\', Message:\'<?
						?>Bonjour, \\r\\n<?=session.User.Name?> vous invite à participer au petit compte <?=dtRow["DName"].Replace("'","\\\\\\'")?>.<?
						?>\\r\\nConnectez vous à CoopEShop et choisissez la rubrique Petits Comptes, sélectionnez le compte <?=dtRow["DName"].Replace("'","\\\\\\'")?>. <?
						?> et validez votre invitation.\'}', {title : 'Envoi d\'un message d\'invitation', width:700}, 'edvEditor')">
					<img class="pointer" src="/edv/Images/SendMsg.png" alt="envoyer un message">
					Envoyer un message d'invitation à participer au petit compte 
				</a>
		<?}
		break;
	case "FORBID" :?>
		<div class="closed">Participation verrouillée</div>
<?		break;
	case "OK" :?>
<?		break;

	default : ?>
		<span class="edvError">Statut inconnu <?=dtRow["PCEAStatus"]?></span>
<?		break;
}
?>

<br/><br/>
<label>Autres utilisateurs en compte commun pour ce petit compte : </label><?=Commun(edvjs.Extend({tagName : "edvargs.usersCommuns"}, arguments));?>
<br/><br/>
<label>Commentaire : </label><textarea name="edvargs.Comment" cols="70" rows="2" maxlength="255" onchange="PCEASubmitCheck(this);"><?=dtRow["Comment"]?></textarea>
<br/>
<br/>
<?if((session.User.PCEA.Rights[dtRow["IdDossier"]] & 15) == 15){
	?><a href="#<?=dtRow["IdUser"]?>@<?=dtRow["IdDossier"]?>" class="submit save"
		onclick="PCEASubmitCheck(this); return false;">&nbsp;Enregistrer</a>
<?}?>

</fieldset>
</form>
<?=:js?>
<span class="edvRows" name="<?=:Domain?>Rows">
	<?//=..Creance.Html.Rows({Id : dtRow["IdDossier"], IdContact : dtRow["IdContact"], TypeDossier : dtRow["TypeDossier"], Status : dtRow["Status"]})?>
</span>
]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Ami.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function PCEASubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	edv.Wait.Show();
	var result = edvSubmit(form);
	edv.Wait.Hide();
	if(result && result.trim() != "") alert(result);
	return true;
}
</script>

]]></Value>
                                <!--.EDV.CoopEShop.PCEA.Ami.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.PCEA.Ami.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Ami.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(arguments && arguments.EMail){
	var sql = "SELECT C.Name, C.IdContact, P.IdUser, U.IdUser AS UIdUser"
		+ ", P.Status AS PCEAStatus, S.Label AS PCEAStatusLabel"
		+ newline
		+ " FROM contact C"
		+ newline
		+ " LEFT JOIN user U"
		+ " 	ON C.IdContact = U.IdUser"
		+ newline
		+ " LEFT JOIN pceauser P"
		+ " 	ON C.IdContact = P.IdUser"
		+ " 	AND P.IdDossier = ?"
		+ newline
		+ " LEFT JOIN parameter S"
		+ " 	ON S.Domain = 'PCEA.USER.STATUS'"			
		+ " 	AND P.Status = S.IdParam"			
		+ newline
		+ " WHERE EMail = ?"
		+ " ORDER BY U.IdUser DESC"
		;
	
	var args = [ arguments.IdDossier
			, arguments.EMail.ToLower()				
			];
	var result = edv.Data.Open(sql, ..edvAppli.DataSource, args);
	if(!(result instanceof DataTable))
		throw new EDVException(edv.json(arguments) + "<br>" + sql + "<br>" + result);
	if(result.Rows.Count == 0){
		?><div class="edvDialog">
			Aucun utilisateur CoopEShop n'a cette adresse électronique <i><?=arguments.EMail?></i>.
			<br>Voulez vous lui envoyer une invitation à s'inscrire dans CoopEShop pour pouvoir faire partie du petit compte ?
		</div>
		<?
		edvReturn(_echocode.ToString());
	}
	else 	if(result.Rows[0].IsNull("UIdUser")){
		?><div class="edvDialog">
			Un contact est référencé avec cette adresse mais il n'est pas référencé comme utilisateur CoopEShop.
			<br>Voulez vous lui envoyer une invitation à s'inscrire dans CoopEShop pour pouvoir faire partie du petit compte ?
		</div>
		<?
		edvReturn(_echocode.ToString());
	}
	else if(!result.Rows[0].IsNull("IdUser")){
		edvReturn("Cet utilisateur fait déjà partie du petit compte. <br>Il a le statut " + result.Rows[0]["PCEAStatusLabel"]);
	}
	
		
}
var options = {
		IdContact : result.Rows[0]["IdContact"]
		, IdDossier : arguments.IdDossier
		, IdUser : result.Rows[0]["IdContact"]
		, TypeDossier : "PCEA"
		, Connexion : ..edvAppli.DataSource
	};

sql = "INSERT INTO pceauser (IdUser, IdDossier, Rights, Status, CreationDate, CreationIdUser)"
			+ " VALUES(?, ?, ?, ?, ?, ?)";
args = [	options.IdUser
			, options.IdDossier
			, 15
			, "INVIT"
			, DateTime.Now
			, session.User.IdUser
		];
result = edv.Data.Execute(sql, ..edvAppli.DataSource, args);
if (edvTools.TryParse(result, EDVType.Integer)) {
?>
	<?=Edit({IdDossier : options.IdDossier, IdContact : options.IdContact, TypeDossier : options.TypeDossier })?>
<?}

if (!edvTools.TryParse(result, EDVType.Integer)){?>
	<p class="edvError"><?=result?></p>
<?}
?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Ami.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Ami.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments)arguments={}; 
if(!arguments.DataTable){
	var cx = new edvData(session.DataSource);
	var sqlArgs = [];
	var sql = "SELECT U.Name, U.EMail, D.Name as DName, D.Status AS DStatus, P.*"
			+ ", P.Status AS PCEAStatus, S.Label AS PCEAStatusLabel"
			+ ", -1 * SUM(LGD.Price) AS Solde, SUM(LGD.Line) AS NbLines, MAX(LGD.CreationDate) AS MaxCreationDate"
			+ ", MAX(PUC.IdUser) AS IsCommun0, MIN(PUC.IdUser) AS IsCommun1"
			+ " FROM contact U"
			+ " INNER JOIN pceauser P"
			+ " 	ON U.IdContact = P.IdUser"
			+ " INNER JOIN dossier D"
			+ " 	ON D.TypeDossier = 'PCEA'"
			+ " 	AND D.IdDossier = P.IdDossier"
			+ " INNER JOIN parameter S"
			+ " 	ON S.Domain = 'PCEA.USER.STATUS'"			
			+ " 	AND P.Status = S.IdParam"			
			+ newline
			+ " LEFT JOIN pceausers PUC"
			+ " 	ON PUC.IdDossier = D.IdDossier"
			+ " 	AND PUC.IdUserC = P.IdUser"
			+ newline
			+ " LEFT JOIN lgdossier LGD"
			+ " 	ON LGD.IdDossier = D.IdDossier"
			+ " 	AND LGD.TypeDossier = D.TypeDossier"
			+ " 	AND LGD.IdArticle = PUC.IdUser"
			+ " WHERE P.IdUser <> ?"
			+ " AND P.IdDossier = ?"
		;
	if (arguments.IdUser && session.User && session.User.Rights && session.User.Rights[".Admin"])
		sqlArgs.push(arguments.IdUser);
	else
		sqlArgs.push(arguments.IdUser = session.User.IdUser);
	//sqlArgs.push(arguments.IdUser);

	sqlArgs.push(arguments.IdDossier);
	
	if((session.User.PCEA.Rights[arguments.IdDossier] & 15) <= 1){
		sql += " AND P.Rights >= 15";
	}
	
	sql += " GROUP BY U.Name, U.EMail, D.Name, D.Status, P.IdUser, P.IdDossier, P.CreationDate, P.CreationIdUser, P.Rights, P.Status, P.Comment"
		+ ", P.Status, S.Label"
		;
			
	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY " + arguments.OrderBy;
	else
		sql += " ORDER BY MAX(LGD.CreationDate) DESC, P.CreationDate DESC";

	arguments.DataTable = cx.select(sql, sqlArgs);
	if (!(arguments.DataTable instanceof DataTable))
		edvReturn(arguments.DataTable);		
}?>

<?var rootName = ..edvAppli:Domain;
for(var dtRow in arguments.DataTable.Rows){
?>	<tr class="user child-of-node-dossier-pcea-<?=dtRow["IdDossier"]?>" id="node-<?=dtRow["IdDossier"]?>-ami-<?=dtRow["IdUser"]?>">
	<td><a class="pcea" href="#<?=dtRow["PCEAStatus"]?>/<?=dtRow["IdUser"]?>@<?=dtRow["IdDossier"]?>" 
			onclick="edv.PCEA.User.Edit(this, <?=dtRow["IdUser"]?>, <?=dtRow["IdDossier"]?>); return false;">
		<img src="/edv/Images/edit.png" alt="modifier" width="14"/></a>
		<?if((session.User.PCEA.Rights[dtRow["IdDossier"]] & 15) >= 15){
		?>&nbsp;
		<a href="" onclick="edvDialog(this).Show('<?=rootName?>PCEA.Ami.Html.Delete', 'edvargs={IdUser:<?=dtRow["IdUser"]?>, IdDossier:<?=dtRow["IdDossier"]?>}', {title:'Ami de petit compte'}); return false;"<?
			?> return false;"><img src="/edv/Images/delete.png" alt="Supprimer" width="10"></a>
		<?}?>
		&nbsp;<a href="#msg"
			onclick="edvDialog.Show('<?=rootName?>DB.User.EMail.Edit', 'edvargs={To:\'<?=dtRow["EMail"]?>\'}', {title : 'Envoi d\'un message', width:700}, 'edvEditor')">
			<img class="pointer" src="/edv/Images/SendMsg.png" alt="envoyer un message">
		</a>
	<td class="tc"><span class="imgEDVType<?=dtRow["Rights"] < 15 ? "User" : "Client"?>"><?=dtRow["Name"]?></span>
	<td class="sold <?if(dtRow["Solde"]<0) echo('negative');?>"><?=dtRow.IsNull("Solde") ? "0.00" : dtRow["Solde"].ToString("# ##0.00")?>&nbsp;Ø
	<td><?var echoLine : int = 0;
		if(!dtRow.IsNull("IsCommun0") && (dtRow["IsCommun0"] == arguments.IdUser || dtRow["IsCommun1"] == arguments.IdUser)){
			echoLine++;
			?> <span class="userCommun">compte commun</span><?
		}
		switch(dtRow["PCEAStatus"]){
			case "INVIT" :?><?=echoLine++ >0 ? "<br>":""?>
				<span class="alert">En attente de réponse à l'invitation<span><?
				if((session.User.PCEA.Rights[dtRow["IdDossier"]] & 15) == 15){
					?>&nbsp;<a href="" onclick="edvDialog(this).Show('<?=rootName?>PCEA.Ami.Html.Delete', 'edvargs={IdUser:<?=dtRow["IdUser"]?>, IdDossier:<?=dtRow["IdDossier"]?>}', {title:'Ami de petit compte'}); return false;"<?
						?> return false;"><img src="/edv/Images/delete.png" alt="Supprimer" width="10"></a>		
				<?}?>
		<?		break;
			case "FORBID" :?><?=echoLine++ >0 ? "<br>":""?>
				<span class="alert"><i>Verrouillée</i></span>
		<?		break;
			case "OK" :?>
		<?		break;

			default : ?><?=echoLine++>0 ? "<br>":""?>
				<span class="edvError">&nbsp;-&nbsp;Statut inconnu <?=dtRow["PCEAStatus"]?></span>
		<?		break;
		}
		if(!dtRow.IsNull("Comment") && dtRow["Comment"] != ""){
			?><pre><?=dtRow["Comment"]?></pre>
		<?}?>
	</tr>
	<tr class="creances dirty child-of-node-<?=dtRow["IdDossier"]?>-ami-<?=dtRow["IdUser"]?>"
		name="{IdDossier:<?=dtRow["IdDossier"]?>, IdUser:<?=dtRow["IdUser"]?>}"><td><td></tr>
<?}
?>

<?
if((session.User.PCEA.Rights[arguments.IdDossier] & 15) == 15){
?>
<tr class="user child-of-node-dossier-pcea-<?=arguments.IdDossier?>">
	<td class="addAmi"><a class="pcea" href="#new@<?=arguments.IdDossier?>"
			onclick="$(this.parentNode).next().toggle();return false;">
		<img src="/edv/Images/add.png" title="ajouter un(e) ami(e)" width="14"/></a>
	<td colspan="3" class="ui-helper-hidden">
		<input name="edvargs.EMail" size="30" 
			onfocus="this.select(); $(this).css('font-style','inherit');"
			style="font-style:italic" value="&gt;&gt;saisir ici une nouvelle adresse"/>
		<a class="pcea" href="#new@<?=arguments.IdDossier?>"
			onclick="edv.PCEA.Amis.Add(this, <?=arguments.IdDossier?>, $(this).parent().children('input:first').val()); return false;">
			<img src="/edv/Images/save.png" title="enregistre l'ajout d'un(e) ami(e)"/>
		</a>
</tr>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Ami.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Ami.Html.Select-->
                        <VAR ShortName="Select" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Arguments incorrects");
var args = [];
var sql = "SELECT D.*, IdFournisseur, F.Name AS NameF"
		+ " FROM dossier D"
		+ " INNER JOIN fournisseur F"
			+ " ON D.IdContact = F.IdContact";
sql += " WHERE D.TypeDossier = 'CTLOG'"
	+ " AND D.ClosedDate = '0001-01-01'";
if (arguments.IdFournisseur){
	sql += " AND F.IdFournisseur = ?";
	args.push(arguments.IdFournisseur);
}
sql += " ORDER BY F.Name, D.Name";
arguments.DataTable = edv.Data.Open(sql, ..edvAppli.DataSource, args, "MYSQL");
if (!(arguments.DataTable instanceof DataTable))
	throw new EDVException(arguments.DataTable);
?>
<script>
	function linkCatalogueOnClick(IdContact, IdDossier, IdFournisseur){
		if(typeof(IdContact)==="object")
		{
			var form = IdContact;
			
		}
		<?if(arguments.onClick){?>
			cboSelectCatalogueOnClick.call(link);
		<?}?>
	}
	<?if(arguments.onClick){?>
		function cboSelectCatalogueOnClick(){
			<?=arguments.onClick?>}
	<?}
	if (arguments.DataTable.Rows.Count == 1){?>
		linkCatalogueOnClick(arguments.DataTable.Rows
	<?}?>
</script>
<ul class="edvRows">
<?var curFournisseur;
for(var dtRow in arguments.DataTable.Rows){
		if(curFournisseur != dtRow["IdFournisseur"]) {
			if (curFournisseur) echo("</ul>");
			curFournisseur = dtRow["IdFournisseur"];
			?><ul class="sub"><span class="Category"><?=dtRow["NameF"]?></span><?
		}
		arguments.DataRow = dtRow;
	?>	<li><a href="" name="<?=dtRow["IdContact"]?>|<?=dtRow["IdDossier"]?>|<?=dtRow["IdFournisseur"]?>"
			onclick="linkCatalogueOnClick(this); return false;"><?=dtRow["Name"]?></a></li>
<?}
if (curFournisseur) echo("</ul>");
?>
</ul>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Ami.Html.Select._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Ami.Html.Update-->
                        <VAR ShortName="Update" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
var sql;
var result;

if(arguments.ValidateInvit){
	var sqlArgs = ['OK', arguments.IdDossier];
	if (arguments.IdUser)
		sqlArgs.push(arguments.IdUser);
	else
		edvReturn("argument manquant");
		
	sql = "UPDATE pceauser"
			+ " SET Status = ?"
			+ " WHERE IdDossier = ?"
			+ " AND IdUser = ?";
	result = edv.Data.Execute(sql, ..edvAppli.DataSource, sqlArgs);
	if(!edvTools.TryParse(result, EDVType.Integer)){
		edvReturn("<p class=\"edvError\">" + edv.Type.String.ToHtml(result ) + "</p>");
	}
	else
		echo("Bienvenue dans ce petit compte");
}
else {	
	if(!session.User.Rights[".Admin"]){
		sql = "SELECT Rights FROM pceauser"
				+ " WHERE IdUser = ?"
				+ " AND IdDossier = ?";
		result = edv.Data.Open(sql, ..edvAppli.DataSource, [session.User.IdUser, arguments.IdDossier]);
		if(!(result instanceof DataTable)){
			edvReturn("<p class=\"edvError\">" + edv.Type.String.ToHtml(result) + "</p>");
		}
		
		if(result.Rows[0][0] < (arguments.Rights == undefined ? 15 : int(arguments.Rights))){
			edvReturn("<p class=\"edvError\">Vous n'avez pas les droits nécessaires pour effectuer cette modification.</p>");
		}
	}

	if(arguments.Rights < 15){
		sql = "SELECT 1 FROM pceauser"
				+ " WHERE IdUser <> ?"
				+ " AND Rights >= 15"
				+ " AND IdDossier = ?"
				+ " LIMIT 0,1";
		result = edv.Data.Open(sql, ..edvAppli.DataSource, [arguments.IdUser, arguments.IdDossier]);
		if(!(result instanceof DataTable)){
			edvReturn("<p class=\"edvError\">" + edv.Type.String.ToHtml(result) + "</p>");
		}
		
		if(result.Rows.Count == 0 ){
			edvReturn("<p class=\"edvError\">Vous êtes le seul administrateur, vous ne pouvez pas quitter ce statut.</p>");
		}
	}
	
	sql = "UPDATE pceauser"
			+ " SET Comment = ?"
			+ (arguments.Rights != undefined
				? ", Rights = ?"
				: "")		
			+ " WHERE IdDossier = ?"
			+ " AND IdUser = ?";
	
	sqlArgs = [arguments.Comment];
	if(arguments.Rights != undefined)
		sqlArgs.push(int(arguments.Rights));
	sqlArgs.push(arguments.IdDossier);
	sqlArgs.push(arguments.IdUser);
	
	result = edv.Data.Execute(sql, ..edvAppli.DataSource, sqlArgs);
	if(!edvTools.TryParse(result, EDVType.Integer)){
		edvReturn("<p class=\"edvError\">" + edv.Type.String.ToHtml(result) + "</p>");
	}
	
	if(arguments.usersCommuns != undefined){
		sql =	"DELETE FROM pceausercommun"
			+ " WHERE IdDossier = ?"
			+ " AND (IdUser1 = ? OR IdUser2 = ?)";
		sqlArgs = [arguments.IdDossier, arguments.IdUser, arguments.IdUser];
				
		result = edv.Data.Execute(sql, ..edvAppli.DataSource, sqlArgs);
		if(!edvTools.TryParse(result, EDVType.Integer)){
			edvReturn("<p class=\"edvError\">" + edv.Type.String.ToHtml(result) + "</p>");
		}

		if(arguments.usersCommuns != "") {
			arguments.usersCommuns = arguments.usersCommuns.split(",");
			sql = "INSERT INTO pceausercommun (IdDossier, IdUser1, IdUser2)"
				+ " VALUES";
			sqlArgs=[];
			for(var i : int = 0; i < arguments.usersCommuns.length; i++) {
				if(i>0) sql += "\r\n, ";
				sql += "(?, ?, ?), (?, ?, ?)"
				sqlArgs.push(arguments.IdDossier);
				sqlArgs.push(arguments.IdUser);
				sqlArgs.push(int(arguments.usersCommuns[i]));
				sqlArgs.push(arguments.IdDossier);
				sqlArgs.push(int(arguments.usersCommuns[i]));
				sqlArgs.push(arguments.IdUser);
			}
			result = edv.Data.Execute(sql, ..edvAppli.DataSource, sqlArgs);
			if(!edvTools.TryParse(result, EDVType.Integer)){
				edvReturn("<p class=\"edvError\">" + edv.Type.String.ToHtml(result) + "</p>");
			}
		}
	}	
	echo("");
}?>]]></Value>
                            <!--.EDV.CoopEShop.PCEA.Ami.Html.Update._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Ami.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Ami.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.PCEA.Ami.SQLAlter-->
                    <VAR ShortName="SQLAlter" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[ALTER VIEW `pceausers` 
AS 
	select `up`.`IdDossier` AS `IdDossier`,`u`.`IdUser` AS `IdUserC`,`u`.`IdUser` AS `IdUser`
		,`u`.`Enabled` AS `Enabled`,`u`.`Password` AS `Password` 
	from (`pceauser` `up` 
	join `user` `u` 
		on((`u`.`IdUser` = `up`.`IdUser`))) 
union 
	select `up`.`IdDossier` AS `IdDossier`,`uca`.`IdUser1` AS `IdUserC`,`ua`.`IdUser` AS `IdUser`
		,`ua`.`Enabled` AS `Enabled`,`ua`.`Password` AS `Password` 
	from ((`pceauser` `up` 
	join `user` `ua` 
		on((`ua`.`IdUser` = `up`.`IdUser`))) 
	join `pceausercommun` `uca` 
		on(((`ua`.`IdUser` = `uca`.`IdUser2`) 
		and (`uca`.`IdDossier` = `up`.`IdDossier`))))]]></Value>
                        <!--.EDV.CoopEShop.PCEA.Ami.SQLAlter._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Ami.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * 
FROM dossier D
INNER JOIN pceauser P
	ON D.TypeDossier = 'PCEA'
	AND D.IdDossier = P.IdDossier
WHERE P.IdUser = :IDUSER]]></Value>
                        <!--.EDV.CoopEShop.PCEA.Ami.SQLSelect.IDUSER-->
                        <VAR ShortName="IDUSER" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[16]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Ami.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Ami.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                </VAR>
                <!--.EDV.CoopEShop.PCEA.Creance-->
                <VAR ShortName="Creance" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="IdDossier" type="xs:int" minOccurs="0" /><xs:element name="TypeDossier" type="xs:string" minOccurs="0" /><xs:element name="DateDossier" type="xs:dateTime" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="IdClient" type="xs:int" minOccurs="0" /><xs:element name="ClosedDate" type="xs:dateTime" minOccurs="0" /><xs:element name="Status" type="xs:string" minOccurs="0" /><xs:element name="IdDossierRef" type="xs:int" minOccurs="0" /><xs:element name="TypeDossierRef" type="xs:string" minOccurs="0" /><xs:element name="Comment" type="xs:string" minOccurs="0" /><xs:element name="IdUser" type="xs:int" minOccurs="0" /><xs:element name="IdUser1" type="xs:int" minOccurs="0" /><xs:element name="IdDossier1" type="xs:int" minOccurs="0" /><xs:element name="CreationDate" type="xs:dateTime" minOccurs="0" /><xs:element name="CreationIdUser" type="xs:int" minOccurs="0" /><xs:element name="Rights" type="xs:int" minOccurs="0" /><xs:element name="Status1" type="xs:string" minOccurs="0" /><xs:element name="Comment1" type="xs:string" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.PCEA.Creance.Alter-->
                    <VAR ShortName="Alter" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.PCEA.Creance.Alter.OnChanging-->
                        <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Changing)
{
	edvInfo = :Name + " : " + edv.Data.Execute(..SQLAlter, ..edvAppli.DataSource);
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Creance.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.PCEA.Creance.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <!--.EDV.CoopEShop.PCEA.Creance.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(arguments && arguments.Price){
	var sql = "SELECT IFNULL(MAX(Line),0)+1"
		+ " FROM lgdossier"
		+ " WHERE TypeDossier = 'PCEA'"
		+ " AND IdDossier = ?"
		;
	var args = [ arguments.IdDossier]
	arguments.Line = edv.Data.Open(sql, ..edvAppli.DataSource, args).Rows[0][0];

	if(arguments.Comment == "commentaire") arguments.Comment = "";
	arguments.Dir = int(arguments.Dir);
	arguments.Price = edvTools.Parse(arguments.Price, EDVType.Double);
	//edvInfo = "arguments = " + edv.json(arguments);
	
	sql = "INSERT INTO lgdossier (IdContact, IdDossier, TypeDossier, Line, IdArticle, IdAnal, Quantity, Unit, Price, Forfait, Comment, CreationIdUser)"
		+ " VALUES(?,?,?,?,?,?,?,?,?,?,?,?)"
		+ ", (?,?,?,?,?,?,?,?,?,?,?,?)"
		;
	args = [ session.User.IdUser
			, arguments.IdDossier
			, 'PCEA'
			, arguments.Line				
			, arguments.IdUser
			, arguments.Dir == "1" ? "601" : "531"
			, 1, 'Ø'
			, arguments.Price * arguments.Dir
			, 0
			, arguments.Comment
			, session.User.IdUser
			
			, arguments.IdUser
			, arguments.IdDossier
			, 'PCEA'
			, arguments.Line				
			, session.User.IdUser
			, arguments.Dir != 1 ? "601" : "531"
			, 1, 'Ø'
			, arguments.Price * arguments.Dir * -1
			, 0
			, arguments.Comment
			, session.User.IdUser
			];
	//edvInfo = "args  = " + args;
	var result = edv.Data.Execute(sql, ..edvAppli.DataSource, args);
	if(!edvTools.TryParse(result, EDVType.Integer))
		throw new EDVException(edv.json(arguments) + "<br>" + sql + "<br>" + result);	
	//edvInfo = "result  = " + edv.json(result );
		
}
?>
<?=Rows(arguments)?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Creance.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Creance.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments)arguments={}; 
if(!arguments.DataTable){
	var cx = new edvData(session.DataSource);
	var sqlArgs = [];
	
	var sql = "SELECT LGD.*, UCP.Name AS UCPName"
			+ " FROM lgdossier LGD"
			+ " INNER JOIN contact UCP"
			+ " 	ON UCP.IdContact = LGD.IdArticle"
			+ " WHERE LGD.IdContact = ?"
			+ " AND LGD.TypeDossier = 'PCEA'"
			+ " AND LGD.IdDossier = ?"
			+ " AND LGD.IdArticle = ?"
			;
	//Source des creances
	sqlArgs.push(session.User.IdUser);
	//Dossier
	sqlArgs.push(arguments.IdDossier);
	//Utilisateur en contre-passation
	sqlArgs.push(arguments.IdUser);
				

	if(arguments.Line){
		sql += " AND LGD.Line = ?";
		sqlArgs.push(arguments.Line);
	}

	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY " + arguments.OrderBy;
	else
		sql += " ORDER BY LGD.Line DESC";

	arguments.DataTable = cx.select(sql, sqlArgs);
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);
}

if(session.User.PCEA.Rights[arguments.IdDossier] > 1){
	?><tr class="creance child-of-node-<?=arguments.IdDossier?>-ami-<?=arguments.IdUser?>" id="node-lgdossier-add-<?=arguments.IdDossier?>-ami-<?=arguments.IdUser?>">
		<td>
		<td><a class="pcea" href="#<?=arguments.IdDossier?>" 
				onclick="$(this.parentNode).siblings('.hidable').toggle();">
			<img src="/edv/Images/add.png" alt="ajouter" width="14"/></a>
			<select class="creanceDir" name="edvArgs.Dir" value="1"
				onfocus="$(this.parentNode).siblings('.hidable').show();">
			<?if((session.User.PCEA.Rights[arguments.IdDossier] & 7) == 7){
				?><option value="1">J'ai payé pour elle/lui</option>
				<option value="1">Je retire de son compte</option>
				<?/*<option value="1">Je lui ajoute une dette</option>*/?>
			<?}?>
			<option value="-1">J'ai reçu de sa part</option>
			<option value="-1">J'ajoute à son compte</option>
			<?/*<option value="-1">Je lui ajoute un crédit</option>*/?>
			</select>
	
		<td class="sold hidable ui-helper-hidden">la somme de <input name="edvArgs.Price" value="0" size="3" 
					onfocus="this.select();">&nbsp;Ø
		<td class="hidable ui-helper-hidden"><input name="edvArgs.Comment" value="commentaire" size="34"		 
			onfocus="this.select();"
			style="font-style:italic" 
			onchange="">
			<a href="#<?=arguments.IdDossier?>" 
				onclick="edv.PCEA.Creances.Add(this, 'edvargs={IdUser:<?=arguments.IdUser?>, IdDossier:<?=arguments.IdDossier?>}');return false;">
			<img src="/edv/Images/save.png" title="Enregistrer"/></a>
	</tr>
<?}

for(var dtRow in arguments.DataTable.Rows){
?>	<tr class="creance child-of-node-<?=dtRow["IdDossier"]?>-ami-<?=arguments.IdUser?>" id="node-<?=dtRow["IdDossier"]?>-ami-<?=arguments.IdUser?>-<?=dtRow["Line"]?>">
		<td>
		<td>Le <?=dtRow["CreationDate"].ToString()?><?=dtRow["Price"]==0 ? "" : dtRow["Price"] > 0 ? ", j'ai payé" : ", j'ai reçu"?>
		<td class="sold <?if(dtRow["Price"]<0) echo('negative');?>"><?if(dtRow["Price"] != 0){?><?=dtRow["Price"].ToString("# ##0.00")?>&nbsp;<?=dtRow["Unit"]?><?}?>
		<td><?if(!dtRow.IsNull("Comment") && dtRow["Comment"] != ""){?><pre><?=dtRow["Comment"]?><?}?></pre>
	</tr>
<?
}
?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Creance.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Creance.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Creance.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.PCEA.Creance.SQLAlter-->
                    <VAR ShortName="SQLAlter" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[ALTER VIEW pceadossiers AS 
SELECT d.* 
FROM dossier d
WHERE d.TypeDossier = 'PCEA']]></Value>
                        <!--.EDV.CoopEShop.PCEA.Creance.SQLAlter._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Creance.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * 
FROM dossier D
INNER JOIN pceauser P
	ON D.TypeDossier = 'PCEA'
	AND D.IdDossier = P.IdDossier
WHERE P.IdUser = :IDUSER]]></Value>
                        <!--.EDV.CoopEShop.PCEA.Creance.SQLSelect.IDUSER-->
                        <VAR ShortName="IDUSER" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[16]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Creance.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Creance.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                </VAR>
                <!--.EDV.CoopEShop.PCEA.Dossier-->
                <VAR ShortName="Dossier" ClassName="VarDataTable" AutoReset="0" Securized="0" ReadOnly="0" ValueType="DataTable">
                    <Value><![CDATA[<?xml version="1.0" encoding="utf-16"?><DataTable><Schema><xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"><xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_" msdata:UseCurrentLocale="true"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="_x007B_MySQL_x0020_ODBC_x0020_5.1_x0020_Driver_x007D_"><xs:complexType><xs:sequence><xs:element name="IdContact" type="xs:int" minOccurs="0" /><xs:element name="IdDossier" type="xs:int" minOccurs="0" /><xs:element name="TypeDossier" type="xs:string" minOccurs="0" /><xs:element name="DateDossier" type="xs:dateTime" minOccurs="0" /><xs:element name="Name" type="xs:string" minOccurs="0" /><xs:element name="IdClient" type="xs:int" minOccurs="0" /><xs:element name="ClosedDate" type="xs:dateTime" minOccurs="0" /><xs:element name="Status" type="xs:string" minOccurs="0" /><xs:element name="IdDossierRef" type="xs:int" minOccurs="0" /><xs:element name="TypeDossierRef" type="xs:string" minOccurs="0" /><xs:element name="Comment" type="xs:string" minOccurs="0" /><xs:element name="IdUser" type="xs:int" minOccurs="0" /><xs:element name="IdUser1" type="xs:int" minOccurs="0" /><xs:element name="IdDossier1" type="xs:int" minOccurs="0" /><xs:element name="CreationDate" type="xs:dateTime" minOccurs="0" /><xs:element name="CreationIdUser" type="xs:int" minOccurs="0" /><xs:element name="Rights" type="xs:int" minOccurs="0" /><xs:element name="Status1" type="xs:string" minOccurs="0" /><xs:element name="Comment1" type="xs:string" minOccurs="0" /></xs:sequence></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:schema></Schema><Data /></DataTable>]]></Value>
                    <!--.EDV.CoopEShop.PCEA.Dossier.Alter-->
                    <VAR ShortName="Alter" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean">
                        <!--.EDV.CoopEShop.PCEA.Dossier.Alter.OnChanging-->
                        <VAR ShortName="OnChanging" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[when(..:Changing)
{
	edvInfo = :Name + " : " + edv.Data.Execute(..SQLAlter, ..edvAppli.DataSource);
}
null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Dossier.Error-->
                    <VAR ShortName="Error" ClassName="VarLog" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String" SaveLocation="V" Control="EDVCtrlLog" />
                    <!--.EDV.CoopEShop.PCEA.Dossier.Html-->
                    <VAR ShortName="Html" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?if(!arguments) arguments = {};
if(!session.User.PCEA) session.User.PCEA={Rights : {}};
else if(!session.User.PCEA.Rights) session.User.PCEA.Rights = {};

?>
<script type="text/javascript">

	$(document).ready(function()  {
		//INITIALISATION DES TABLES
		$(".DataTable.async table").treeTable({
			clickableNodeNames : true
			, treeColumn : 1
			, async : function(parentKey, from){
				if($(from).is(".creances")){
					return edvGetCode("<?=..Creance.Html.Rows:Name?>","edvargs=" + parentKey);
				}
				else if($(from).is(".amis")){
					return edvGetCode("<?=..Ami.Html.Rows:Name?>","edvargs.IdDossier=" + parentKey);
				}
				else if($(from).is(".dossier")){
					return edvGetCode("<?=:Rows:Name?>","edvargs.IdDossier=" + parentKey);
				}
			}
		});		
	});
	
</script>

<div class="DataTable async dossiers pcea">
	<table >
	  	<caption>
		</caption>
		<thead><tr>
			<th><a href="" onclick="edv.PCEA.Dossiers.Add(this);return false;"><img src="/edv/Images/add.png" title="Nouveau petit compte"/></a>
			<th>Petit compte
			<th>Solde
			<th>Membres
		</tr></thead>
		<tbody>
		<?=:Rows(arguments)?>
		</tbody>
	</table>
	<br>
	<a href="" onclick="edv.PCEA.Dossiers.Add(this);return false;"><img src="/edv/Images/add.png" alt="Nouveau"/>&nbsp;Créer un nouveau compte entre amis</a>
</div>




]]></Value>
                        <!--.EDV.CoopEShop.PCEA.Dossier.Html.css-->
                        <VAR ShortName="css" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[/* treeTable
/* TABLE
 * ========================================================================= */
table.treeTable {
  border: 1px solid #888;
  border-collapse: collapse;
  line-height: 1;
	margin-left : 1em;
	width: 90%;
}

/* Caption
 * ------------------------------------------------------------------------- */
table.treeTable caption {
  font-size: .9em;
  font-weight: bold;
}

/* Header
 * ------------------------------------------------------------------------- */
table.treeTable thead {
  background: #aaa url(/edv/jquery/treeTable/images/bg-table-thead.png) repeat-x top left;
  font-size: .9em;
}

table.treeTable thead tr th {
  border: 1px solid #888;
  font-weight: normal;
  padding: .3em 1.67em .1em 1.67em;
  text-align: left;
}

/* Body
 * ------------------------------------------------------------------------- */
table.treeTable tbody{
  border: 1px solid #888;
  border-collapse: collapse;
  line-height: 1;
}
table.treeTable tbody tr{
  background: white;
}

table.treeTable tbody tr.loading td:first-child {
	background : url(/edv/Images/loading.gif) no-repeat left center;
}

table.treeTable tbody tr td{
	font-size : smaller;
}
table.treeTable tbody tr td.tc{/*cancels previous*/
	font-size : 1em;
}
table.treeTable tbody tr td.sold{
	text-align : right;
	padding-right : 1em;
}
table.treeTable tbody tr.user td.tc
, table.treeTable tbody tr.user td.tc~td{
	border-top : 1px solid gray;
}
table.treeTable tbody tr.dossier {
	border-top : 1px solid gray;
}
table.treeTable tbody tr.dossier td.sold
, table.treeTable tbody tr.dossier td.tc{
	font-weight : bold;
}
.negative {
	color : red;
}
table.treeTable tbody tr td {
  cursor: default;
  padding: .2em 1.5em;
}

table.treeTable th a.columnsExpander{
	float: right;
	position: relative;
	right: -1.2em;
	color: white;
	font-weight: bold;
}
table.treeTable th a.columnsExpander:hover{
	text-decoration: none;
	color : green;
	background-color : transparent;
}

table.treeTable span {
  background-position: center left;
  background-repeat: no-repeat;
  padding: .2em 0 .2em 1.5em;
}

table.treeTable span.file {
  background-image: url(/edv/jquery/treeTable/images/page_white_text.png);
}

table.treeTable span.folder {
  background-image: url(/edv/jquery/treeTable/images/folder.png);
}

/*couleurs des lignes*/
table.treeTable tbody tr.even {
  background: #f3f3f3;
}

table.treeTable tbody tr.odd {
  background: #fff;
}

.edvars table.treeTable {
  display : inline;
}

.DataTable table.treeTable tbody tr.parent.expanded {
  background: #E6E6EE;
}
.DataTable table.treeTable tbody tr.user.parent.expanded {
  background: #F1F1F5;
}
.DataTable table.treeTable tbody tr.leaf {
  background: #fcfcfd;
}
table.treeTable tbody tr:hover, table.treeTable tbody tr.pkIdArticle:hover {
  background: #f6f6f6;
}

/*Propriétés des variables EDV*/
table.treeTable tbody tr.edvar span.Securized{
	background : url(/edv/Images/EDVType/Password.png) no-repeat 0px 6px;
	position: relative;
	width : 20px;
}
table.treeTable tbody tr.edvar span.AutoReset{
	background : url(/edv/Images/EDVType/VarAutoReset.png) no-repeat 0px 8px;
	position: relative;
	width : 20px;
}
table.treeTable tbody tr.edvar span.ReadOnly{
	background : url(/edv/Images/EDVType/VarReadOnly.png) no-repeat 0px 7px;
	position: relative;
	width : 20px;
}
table.treeTable tbody tr.edvar span.Scripted{
	background : url(/edv/Images/EDVType/Script.png) no-repeat 0px 8px;
	position: relative;
	width : 20px;
}
table.treeTable tbody tr.edvar span.Asynchron{
	background : url(/edv/Images/EDVType/DateTime.png) no-repeat 0px 7px;
	position: relative;
	width : 20px;
}
table.treeTable tbody tr.edvar span.SaveLocation{	
	position: relative;
	font-size : smaller;
}
a.ValidateInvit {
	background : url(/edv/Images/alert.png) no-repeat;
	font-size: larger;
	color: blue;
	padding-left : 1.5em;
}
span.alert {
	background : url(/edv/Images/alert.png) no-repeat;
}
table.treeTable tbody tr.user td span.userCommun{
	background : url(/edv/Images/ok.png) no-repeat 0px 4px;
	background-size : 12px 12px;
	margin-left: 0em;
}
table.treeTable tbody tr td.addAmi {
	padding-left : 5.2em;
}
select.creanceDir option[value="1"] {
	color : green;
}
select.creanceDir option[value="-1"] {
	color : red;
}
.EDVVisual.PCEA span.rowInfo{
	color : gray;
	font-size : small;
	font-style: italic;
	display: inline;
	text-align:right;
	float: right;
	position: relative;
	width: 40em;
	top: -3.4em;
}
]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Dossier.Html.css._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Dossier.Html.Delete-->
                        <VAR ShortName="Delete" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments) throw new EDVException("Aucun argument");
else if(!arguments.TypeDossier) arguments.TypeDossier = "PCEA";
if(arguments.Execute){
	var cx = new edvData(session.DataSource);
	
	if (!session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdContact + arguments.TypeDossier])
		throw new EDVException("Accès non conforme");
	session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdContact + arguments.TypeDossier]=undefined;
	
	var sql = "DELETE FROM lgdossier"
		+ " WHERE IdDossier = ?"
		+ " AND TypeDossier = ?";				
	var result = cx.execute(sql, [arguments.IdDossier, arguments.TypeDossier]);
	if (typeof(result) === "string")
		throw new EDVException(result);
		
	sql = "DELETE FROM pceauser"
		+ " WHERE IdDossier = ?";				
	result = cx.execute(sql, [arguments.IdDossier]);
	if (typeof(result) === "string")
		throw new EDVException(result);
		
	sql = "DELETE FROM dossier"
		+ " WHERE IdDossier = ?"
		+ " AND TypeDossier = ?";				
	result = cx.execute(sql, [arguments.IdDossier, arguments.TypeDossier]);
	if (typeof(result) === "string")
		throw new EDVException(result);
	echo("");
}

else {

	var canDelete = :CanDo(arguments);
	if(canDelete != "Ok") edvReturn(canDelete);
	var dtRow = arguments.DataTable.Rows[0];
	
	session.User.Rights["DELETE DOSS " + arguments.IdDossier + arguments.IdContact + arguments.TypeDossier]=true;
	?>
	<div class="MessageBox edvEditor">
		<param class="edvDialogOption" name="width" value="800"/>
		Etes vous sûr de vouloir supprimer le petit compte <b><?=dtRow["Name"]?></b> ?
		
		<br><small><br>n°<?=dtRow["IdDossier"]?> créé le <?=dtRow["DateDossier"].ToString("ddd dd MMM yyyy HH:mm")?> </small>
		<br><a class="submit delete" href="?" onclick="return DossierDeleteExecute(<?=arguments.Id?>)">
		Supprimer</a>
		<script>
			function DossierDeleteExecute(id){
				var result;
				if((result = edvGetHTML("<?=:Name?>", "edvargs={IdDossier:<?=arguments.IdDossier?>, IdContact:<?=arguments.IdContact?>, TypeDossier : \'<?=arguments.TypeDossier?>\', Execute:true}"))==""
				|| typeof(result) != "string")
					return true;
				alert(result);
				return false;
			}
		</script>
	</div>
<?}?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Dossier.Html.Delete.CanDo-->
                            <VAR ShortName="CanDo" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?if(!arguments) edvReturn(false);
arguments.TypeDossier = "PCEA";

var cx = new edvData(session.DataSource);
var sql = "SELECT SUM(LGD.Price) AS Solde, PUC.IdUserC "
		+ newline
		+ " FROM pceausers PUC"
		+ newline
		+ " LEFT JOIN lgdossier LGD"
		+ " 	ON LGD.IdDossier = PUC.IdDossier"
		+ " 	AND LGD.TypeDossier = 'PCEA'"
		+ " 	AND LGD.IdContact = PUC.IdUser"
		+ " WHERE LGD.IdDossier = ?"
		+ " GROUP BY PUC.IdUserC"
		+ " HAVING SUM(LGD.Price) <> 0";

//edvInfo = sql;
arguments.DataTable = cx.select(sql, [arguments.IdDossier, arguments.IdContact, arguments.TypeDossier]);
if (!(arguments.DataTable instanceof DataTable))
	edvReturn(arguments.DataTable);		
if(arguments.DataTable.Rows.Count != 0)
	edvReturn("Les soldes ne sont pas nuls, le compte ne peut pas être supprimé.");

sql = "SELECT D.IdDossier, D.DateDossier, D.Status, D.Name"
	+ ", D.IdUser, PU.Rights"
	+ " FROM pceadossiers D"
	+ " INNER JOIN pceauser PU"
		+ " ON PU.IdDossier = D.IdDossier"
		+ " AND PU.IdUser = ?"
	+ " WHERE D.IdDossier = ?"
	+ " AND PU.Status <> 'LOCKED'"
	;
//edvInfo = sql;
arguments.DataTable = cx.select(sql, [session.User.IdUser, arguments.IdDossier]);
if (!(arguments.DataTable instanceof DataTable))
	edvReturn(arguments.DataTable);		
if(arguments.DataTable.Rows.Count==0)
	edvReturn("Dossier inconnu");
var dtRow = arguments.DataTable.Rows[0];

if(dtRow["Rights"] < 15)
	edvReturn("Vous n'avez pas les droits suffisants pour supprimer ce compte.");

edvReturn("Ok");

?>]]></Value>
                                <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                                <!--.EDV.CoopEShop.PCEA.Dossier.Html.Delete.CanDo._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.PCEA.Dossier.Html.Delete._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Dossier.Html.Edit-->
                        <VAR ShortName="Edit" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
if(!arguments) arguments = {};
if(!arguments.DataRow && !arguments.DataTable){
	var cx = new edvData(session.DataSource);
		
	var sql = "SELECT D.IdDossier, D.IdContact, D.TypeDossier, D.Status, D.Name, D.DateDossier, D.IdUser, D.Comment"
			+ ", P.Status AS PCEAStatus, S.Label AS PCEAStatusLabel, P.Rights"
			+ " FROM dossier D"
			+ " INNER JOIN pceauser P"
			+ " 	ON D.TypeDossier = ?"
			+ " 	AND D.IdDossier = P.IdDossier"
			+ " INNER JOIN parameter S"
			+ " 	ON S.Domain = 'PCEA.USER.STATUS'"			
			+ " 	AND P.Status = S.IdParam"			
			+ " WHERE P.IdUser = ?"
			+ " 	AND D.IdDossier = ?";
	
	var sqlArgs = ["PCEA"];
	if (arguments.IdUser && session.User && session.User.Rights && session.User.Rights[".Admin"])
		sqlArgs.push(arguments.IdUser);
	else
		sqlArgs.push(session.User.IdUser);
	sqlArgs.push(arguments.IdDossier);
	
	arguments.DataTable = cx.select(sql, sqlArgs);
	
	if (!(arguments.DataTable instanceof DataTable))
		throw new EDVException(arguments.DataTable);		
	if (arguments.DataTable.Rows.Count == 0)
		throw new EDVException("Aucun enregistrement.  " + sql );		
	arguments.DataRow = arguments.DataTable.Rows[0];
}
else if(!arguments.DataRow){
	arguments.DataRow = arguments.DataTable.Rows[0];
}
var dtRow = arguments.DataRow;
?>
<form method="post" action="?" class="EDVVisual edvEditor PCEA">
<fieldset>
<legend><?=dtRow["Name"]?>
</legend>
	<span class="rowInfo">créé le <?=dtRow["DateDossier"].ToString("dddd dd MMMM yyyy HH:mm")?></span>
<input type="hidden" name="edvroot" value="<?=...:Name?>"/>
<input type="hidden" name="edvcode" value="Html.Update"/>
<input type="hidden" name="edvargs.IdDossier" value="<?=dtRow["IdDossier"]?>"/>
<input type="hidden" name="edvargs.TypeDossier" value="<?=dtRow["TypeDossier"]?>"/>
<input type="hidden" name="edvargs.IdContact" value="<?=dtRow["IdContact"]?>"/>
<input type="hidden" name="edvargs.IdUser" value="<?=dtRow["IdUser"]?>"/>
<label>Titre :</label><br><input name="edvargs.Name" value="<?=dtRow["Name"]?>" size="72"
	<?if((session.User.PCEA.Rights[dtRow["IdDossier"]] & 15) == 15){
	?> onchange="PCEASubmitCheck(this);"<?}
	?>/>
<br>
<label>Commentaire : </label>
<br><textarea name="edvargs.Comment" cols="70" rows="2" maxlength="255" 
		<?if((session.User.PCEA.Rights[dtRow["IdDossier"]] & 15) == 15){
			?> onchange="PCEASubmitCheck(this);"<?}?>
		><?=edv.Type.String.ToHtml(dtRow["Comment"])?></textarea>
<?if((session.User.PCEA.Rights[dtRow["IdDossier"]] & 15) == 15){
	?><a href="#<?=dtRow["IdDossier"]?>" class="submit save" onclick="PCEASubmitCheck(this); return false;">&nbsp;Enregistrer</a>
<?}
if (dtRow["Status"]=="CLOSED"){?>
	<div class="closed">Compte fermé</div>
<?}?>
</fieldset>
</form>
<a class="pcea" href="#<?=session.User.IdUser?>@<?=dtRow["IdDossier"]?>" 
			onclick="edvDialog(this).Show('<?=..Ami.Html.Edit:Name?>', 'edvargs={IdContact:<?=session.User.IdUser?>, IdDossier:<?=dtRow["IdDossier"]?>}'); return false;">
		<img src="/edv/Images/edit.png" alt="modifier"/>&nbsp;Votre compte utilisateur de ce petit compte...</a>
		
<?=:js?>
<span class="edvRows" name="<?=:Domain?>Rows">
	<?//=..Creance.Html.Rows({Id : dtRow["IdDossier"], IdContact : dtRow["IdContact"], TypeDossier : dtRow["TypeDossier"], Status : dtRow["Status"]})?>
</span>
]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Dossier.Html.Edit.js-->
                            <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<script>
function PCEASubmitCheck(form){
	while(form.tagName != "FORM") form = form.parentNode;
	if($(form).find('input[name="edvargs.Name"]')[0].value == ""){
		alert("La saisie du titre est obligatoire");
		return false;
	}
	edv.Wait.Show();
	var result = edvSubmit(form);
	edv.Wait.Hide();
	if(result && result.trim() != "") alert(result);
	return true;
}
</script>

]]></Value>
                                <!--.EDV.CoopEShop.PCEA.Dossier.Html.Edit.js._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                            <!--.EDV.CoopEShop.PCEA.Dossier.Html.Edit._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Dossier.Html.Head-->
                        <VAR ShortName="Head" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<script type="text/javascript" src="/edv/jquery/treeTable/jquery.treeTable<?/*.min n'existe pas*/?>.js"></script>
<script type="text/javascript" src="/edv/jquery/jquery.cookie<?/*.min*/?>.js"></script>


<link rel="stylesheet" type="text/css" href="/edv/pcea/PCEA.css"/>
<script src="/edv/pcea/comptes.js" type="text/javascript"></script>

<script>
	edv.PCEA = {
		User : {
			ValidateInvit : function(from){
				var result = edvGetCode("<?=..Ami.Html.Update:Name?>", $(from).attr("name") + "&edvArgs.ValidateInvit=true");
				if(typeof(result) == "string") alert(result);
				return true;
			}
			, Edit : function(from, idUser, idDossier){
				edvDialog(from).Show('<?=..Ami.Html.Edit:Name?>', 'edvargs={IdContact:' + idUser + ', IdDossier:' + idDossier + '}'
					, {
						close:function(){
							$(from).treeTable('refreshParentChildren', from);
						}
					});
				return false;
			}
		}
		, Dossiers : {
			Add : function(from){
				edvDialog.Show('<?=New:Name?>', undefined
						, {							
							width : 800
							, buttons : [{text : "Enregistrer", click: function() { $(this).dialog("close"); }}
								, {	text : "Annuler"
									, click: function() { 
										edvDialog(this).Show("<?=Delete:Name?>"<?
											?>+ "&edvargs.IdContact=" + $(this).find("form input[name=\"edvargs.IdContact\"]").val()<?
											?>+ "&edvargs.IdDossier=" + $(this).find("form input[name=\"edvargs.IdDossier\"]").val()
											);
									}
								}
							]
							, close : function(){
								LoadPageInner("<?=..Html:Name?>");
							}
						});				
			}
		}
		, Creances : {
			Add : function(element, params ){
				if(!params) params = "";
				var tr;
				(tr = $(element).parents("tr:first")).find("input, select").each(function(){
					var name;
					if((name=$(this).attr("name")))
						params += "&" + $(this).attr("name") + "=" + encodeURI(edv.HTMLElement.Value(this));
				});
				edvGetCode("<?=..Creance.Html.New:Name?>", params);
				tr.treeTable('refreshParent', tr.prev());
			}
		}
		, Amis : {
			Add : function(from, idDossier, email){
				edvDialog(from).Show('<?=..Ami.Html.New:Name?>'
					, "edvargs={EMail: '" + email + "', IdDossier:" + idDossier + ", IsNew:1}"
					, {	
						close:function(){
							$(from).treeTable('refreshParentChildren', from);
						}
					}
				);
			}
		}
	}
</script>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Dossier.Html.Head._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Dossier.Html.New-->
                        <VAR ShortName="New" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
var options = {
		TypeDossier : "PCEA"
		, Connexion : ..edvAppli.DataSource
	};
//Ne pas attribuer options.IdContact pour chercher parmis tous les dossiers PCEA
edvInfo = "new id = " + (options.IdDossier = ..DB.Dossier.NewId(options));

options.IdContact = session.User.IdUser;
if (arguments && arguments.IdUser && session.User && session.User.Rights && session.User.Rights[".Admin"])
	options.IdUser = arguments.IdUser;
else
	options.IdUser = session.User.IdUser;

var sql = "INSERT INTO dossier (IdContact, IdDossier, TypeDossier, DateDossier, Name, IdClient, ClosedDate, Status, IdUser)"
			+ " VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)";

var args = [	options.IdContact
			, options.IdDossier
			, options.TypeDossier
			, DateTime.Now
			, "Nouveau compte du " + DateTime.Now.Date.ToString("ddd dd/MM/yyyy")
			, 0
			, DateTime.MinValue
			, "OK"
			, options.IdUser
		];
var result = edv.Data.Execute(sql, ..edvAppli.DataSource, args);
if (edvTools.TryParse(result, EDVType.Integer)) {
	sql = "INSERT INTO pceauser (IdUser, IdDossier, Rights, Status, CreationDate, CreationIdUser)"
			+ " VALUES(?, ?, ?, ?, ?, ?)";
	args = [	options.IdUser
			, options.IdDossier
			, session.User.PCEA.Rights[options.IdDossier] = 15
			, "OK"
			, DateTime.Now
			, session.User.IdUser
		];
	result = edv.Data.Execute(sql, ..edvAppli.DataSource, args);
	if (edvTools.TryParse(result, EDVType.Integer)) {
	?>
		<?=Edit({IdDossier : options.IdDossier, IdContact : options.IdContact, TypeDossier : options.TypeDossier })?>
	<?}
}
if (!edvTools.TryParse(result, EDVType.Integer)){?>
	<p class="edvError"><?=result?></p>
<?}
?>]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Dossier.Html.New._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Dossier.Html.Rows-->
                        <VAR ShortName="Rows" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!arguments)arguments={}; 
if(!arguments.DataTable){
	var cx = new edvData(session.DataSource);
	var sqlArgs = [];
	var sql = "SELECT D.IdDossier, D.IdContact, D.TypeDossier, D.Status, D.Name, D.Comment"
			+ ", P.Status AS PCEAStatus, S.Label AS PCEAStatusLabel, P.Rights"
			+ newline
			+ ", A2.NbAmis "
			+ newline
			+ ", SUM(LGD.Price) AS Solde"
			+ newline
			+ " FROM dossier D"
			+ newline
			+ " INNER JOIN pceauser P"
			+ " 	ON D.TypeDossier = 'PCEA'"
			+ " 	AND D.IdDossier = P.IdDossier"
			+ newline
			+ " INNER JOIN parameter S"
			+ " 	ON S.Domain = 'PCEA.USER.STATUS'"			
			+ " 	AND P.Status = S.IdParam"			
			+ newline
			+ " INNER JOIN (SELECT IdDossier, COUNT(IdUser) AS NbAmis FROM pceauser A"
			+ " 	GROUP BY A.IdDossier) AS A2"
			+ "	ON P.IdDossier = A2.IdDossier"
			+ newline
			+ " LEFT JOIN pceausers PUC"
			+ " 	ON PUC.IdDossier = D.IdDossier"
			+ " 	AND PUC.IdUserC = P.IdUser"
			+ newline
			+ " LEFT JOIN lgdossier LGD"
			+ " 	ON LGD.IdDossier = D.IdDossier"
			+ " 	AND LGD.TypeDossier = D.TypeDossier"
			+ " 	AND LGD.IdContact = PUC.IdUser"
			+ newline
			+ " WHERE P.IdUser = ?"
			+ " AND P.Rights > 0";
	if(arguments.IdDossier)
		sql += " AND P.IdDossier = ?";
		
	sql +=	" GROUP BY D.IdDossier, D.IdContact, D.TypeDossier, D.Status, D.Name, D.Comment"
			+ ", P.Status, P.Rights, S.Label, A2.NbAmis "
			+ newline
			;
	if (arguments.IdUser && session.User && session.User.Rights && session.User.Rights[".Admin"])
		sqlArgs.push(arguments.IdUser);
	else
		sqlArgs.push(arguments.IdUser = session.User.IdUser);
				
	if(arguments.IdDossier)
		sqlArgs.push(arguments.IdDossier);

	if (arguments.OrderBy && arguments.OrderBy != "")
		sql += " ORDER BY " + arguments.OrderBy;
	else
		sql += " ORDER BY P.CreationDate DESC";
	
	//edvInfo = sql;
	
	arguments.DataTable = cx.select(sql, sqlArgs);
	if (!(arguments.DataTable instanceof DataTable))
		edvReturn(arguments.DataTable);		
}?>
<?
var rootName = ...:Domain;
for(var dtRow in arguments.DataTable.Rows){
	session.User.PCEA.Rights[dtRow["IdDossier"]] = dtRow["Rights"];
	var sold = dtRow.IsNull("Solde") ? 0 : dtRow["Solde"];
?>	<tr class="dossier" id="node-dossier-pcea-<?=dtRow["IdDossier"]?>" name="<?=dtRow["IdDossier"]?>">		
		<td>
			<a class="edit" href="#<?=dtRow["IdDossier"]?>" 
				onclick="<?if(dtRow["PCEAStatus"]=="OK"){
					?>edvDialog(this).Show('<?=rootName?>Dossier.Html.Edit', 'edvargs={IdUser:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>}'<?
								?>, {title:'Petit compte entre amis', width:700});<?
					} else {
					?>alert('Vous n\'êtes pas autorisé à modifier ce compte.');<?
					}?> return false;">
				<img src="/edv/Images/edit.png" title="Modifier" width="14"></a>
			&nbsp;
			<a href="" onclick="<?if(dtRow["PCEAStatus"]=="INVIT"){
					  ?>if(confirm('Vous allez refuser l\'invitation à participer au petit compte.<?
						?>\r\nAprès votre confirmation, vous devrez de nouveau recevoir une invitation pour faire partie de ce petit compte.'))<?
						?>edvDialog(this).Show('<?=rootName?>Ami.Html.Delete', 'edvargs={IdUser:<?=arguments.IdUser?>, IdDossier:<?=dtRow["IdDossier"]?>}', {title:'Ami de petit compte'});<?
					} else if(dtRow["NbAmis"] == 1) {
						?>return !edvDialog(this).Show('<?=rootName?>Dossier.Html.Delete', 'edvargs={IdContact:<?=dtRow["IdContact"]?>, IdDossier:<?=dtRow["IdDossier"]?>}', {title:'Petit compte entre amis'});"<?
					} else {
					  ?> if(confirm('Vous allez supprimer votre participation au petit compte.<?
						?>\r\nAprès votre confirmation, vous devrez de nouveau recevoir une invitation pour faire partie de ce petit compte.'))<?
						?>edvDialog(this).Show('<?=rootName?>Ami.Html.Delete', 'edvargs={IdUser:<?=arguments.IdUser?>, IdDossier:<?=dtRow["IdDossier"]?>}', {title:'Ami de petit compte'});<?					
					}?> return false;">
				<img src="/edv/Images/delete.png" title="Supprimer" width="10"></a>
			<?
			switch(dtRow["PCEAStatus"]){
				case "INVIT" :
					break;
				case "FORBID" :?>
					<i>désactivé</i>
			<?		break;

				case "OK" :?>
			<?		break;
	
				default : ?>
					<span class="edvError">Statut inconnu <?=dtRow["PCEAStatus"]?></span>
			<?		break;
			}?>
			&nbsp;
			<a class="refresh" href="#<?=dtRow["IdDossier"]?>" 
				onclick="$(this).treeTable('refresh', this.parentNode.parentNode); return false;">
				<img src="/edv/Images/refresh.png" title="Rafraîchir" width="14"></a>
			
		<td class="tc"><span class="imgEDVTypeDom"><?=dtRow["name"]?></span>
		<td class="sold <?if(sold < 0) echo("negative")?>"><small>mon&nbsp;solde&nbsp;: </small><?=sold.ToString("# ##0.00")?>&nbsp;Ø
		<td><?=dtRow["NbAmis"] == 1 ? "aucun(e)" : dtRow["NbAmis"]-1?> ami(e)<?if(dtRow["NbAmis"]>2) echo("s")?>
		<?if(!dtRow.IsNull("Comment") && dtRow["Comment"]!="") {?>
			<pre><?=dtRow["Comment"]?></pre>
		<?}?>
	</tr>
	<?if(dtRow["PCEAStatus"] == "INVIT"){?>
		<tr><td>
		<td colspan="3">
			<a href="?" class="ValidateInvit"
				name="edvargs={IdUser:<?=arguments.IdUser?>,IdDossier:<?=dtRow["IdDossier"]?>}"
				onclick="return edv.PCEA.User.ValidateInvit(this);"
			>Vous êtes invité(e) à participer à ce petit compte</a>
	<?}
	else {?>
		<tr class="dirty amis child-of-node-dossier-pcea-<?=dtRow["IdDossier"]?>"
			name="<?=dtRow["IdDossier"]?>">
			<td><td>
		</tr>
	<?}
}
?>
]]></Value>
                            <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE><DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.PCEA.Dossier.Html.Rows._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Dossier.Html.Update-->
                        <VAR ShortName="Update" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?
var sql;
var result;

if(!session.User.Rights[".Admin"]){
	sql = "SELECT Rights FROM pceauser"
			+ " WHERE IdUser = ?"
			+ " AND IdDossier = ?";
	result = edv.Data.Open(sql, ..edvAppli.DataSource, [session.User.IdUser, arguments.IdDossier]);
	if(!result instanceof DataTable){
		edvReturn("<p class=\"edvError\">" + edv.Type.String.ToHtml(result) + "</p>");
	}
	
	if((result.Rows[0][0] & 15) == 0){
		edvReturn("<p class=\"edvError\">Vous n'avez pas les droits nécessaires pour faire ces modifications.</p>");
	}
}
sql = "UPDATE pceadossiers"
		+ " SET Name = ?"
		+ ", Comment = ?"
		+ " WHERE IdDossier = ?";
	result = edv.Data.Execute(sql, ..edvAppli.DataSource, [arguments.Name, arguments.Comment, arguments.IdDossier]);
	if(!edvTools.TryParse(result, EDVType.Integer)){
		edvReturn("<p class=\"edvError\">" + edv.Type.String.ToHtml(result) + "</p>");
	}
	else
		echo("");
?>]]></Value>
                            <!--.EDV.CoopEShop.PCEA.Dossier.Html.Update._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Dossier.Html._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Dossier.Open-->
                    <VAR ShortName="Open" ClassName="" AutoReset="1" Securized="0" ReadOnly="0" ValueType="Boolean" />
                    <!--.EDV.CoopEShop.PCEA.Dossier.SQLAlter-->
                    <VAR ShortName="SQLAlter" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[ALTER VIEW pceadossiers AS 
SELECT d.* 
FROM dossier d
WHERE d.TypeDossier = 'PCEA']]></Value>
                        <!--.EDV.CoopEShop.PCEA.Dossier.SQLAlter._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Dossier.SQLSelect-->
                    <VAR ShortName="SQLSelect" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[SELECT * 
FROM dossier D
INNER JOIN pceauser P
	ON D.TypeDossier = 'PCEA'
	AND D.IdDossier = P.IdDossier
WHERE P.IdUser = :IDUSER]]></Value>
                        <!--.EDV.CoopEShop.PCEA.Dossier.SQLSelect.IDUSER-->
                        <VAR ShortName="IDUSER" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="String">
                            <Value><![CDATA[16]]></Value>
                        </VAR>
                        <!--.EDV.CoopEShop.PCEA.Dossier.SQLSelect._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.PCEA.Dossier.Status-->
                    <VAR ShortName="Status" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Integer" SaveLocation="V" />
                </VAR>
            </VAR>
            <!--.EDV.CoopEShop.Visual-->
            <VAR ShortName="Visual" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                <!--.EDV.CoopEShop.Visual.Accueil-->
                <VAR ShortName="Accueil" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.Visual.Accueil.HTML-->
                    <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<form class="EDVVisual" method="post" action="?edvroot=<?=..:Name?>">
<fieldset><legend>Bienvenue</legend>
</fieldset>
</form>]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.Visual.Accueil.HTML.CSS-->
                        <VAR ShortName="CSS" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?=edv.{WEB}.CSS(edvSender, arguments)?>]]></Value>
                            <!--.EDV.CoopEShop.Visual.Accueil.HTML.CSS._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.Visual.Accueil.HTML.Head-->
                        <VAR ShortName="Head" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?=edv.{WEB}.HEAD(edvSender, arguments)?>]]></Value>
                            <!--.EDV.CoopEShop.Visual.Accueil.HTML.Head._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.Visual.Accueil.HTML.Main-->
                        <VAR ShortName="Main" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                            <!--.EDV.CoopEShop.Visual.Accueil.HTML.Main.HTML-->
                            <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                                <Value><![CDATA[<?=edv.{WEB}.Main(edvSender, arguments)?><?/*remplacez par 'edv.{WEB}.Main.Value', surlignez tout puis F9 pour avoir le script*/?>]]></Value>
                                <!--.EDV.CoopEShop.Visual.Accueil.HTML.Main.HTML._Where-->
                                <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                    <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                                </VAR>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.Visual.Accueil.HTML._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Visual.HTML-->
                <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                    <Value><![CDATA[<?=:functions(edvClient)?>
<div id="Page"> 
	<div id="PageMenu"> 
		<?=Menu.HTML(edvClient)?>
	</div> 	
	<div id="PageInner" name="<?=:Domain?>Inner"><!--page centrale-->	
		<? edvServer.Error="";
		if (..edvAppli.User.Login && session.User && session.User.Enabled){	 
			if (Inner.@ == ""){
				?><?=Accueil.Html(edvClient)?><?//page par défaut
			} else if(Inner.@.Exists){
				?><?=Inner:Where(edvClient)?><? 	
			} else {
				?><?=Accueil.Html(edvClient)?><?//page par défaut
				?><br><i>page <?=Inner.@?> introuvable</i><?
			}
		}
		else 
			echo(..edvAppli.User.Login.Visual.Html(edvClient));
		var lsError;
		if ((lsError = edvServer.Error).length>0)
			echo("<br><error>" + lsError + "</error>"); 
		?>
	</div> 
</div> ]]></Value>
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.Visual.HTML.CSS-->
                    <VAR ShortName="CSS" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?var version = ..edvAppli.Version;
?><?=.{Applications}.edvStats.Visual.HTML.CSS(edvjs.Extend({"miniJS" : true}, arguments), edvSender, edvClient)?>
<link href="/edv/CoopEShop/.EDV.CoopEShop.Visual.HTML.cssFile.edvcode?edvwbsrv=cache,<?=version?>" rel="stylesheet" type="text/css" />
<?/*<style>
< ?=cssFile(edvClient)? >
</style>*/?>
<link href="/edv/jquery/treeTable/css/jquery.treeTable.css" rel="stylesheet" type="text/css" />

]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.Visual.HTML.CSS._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Visual.HTML.cssFile-->
                    <VAR ShortName="cssFile" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[body {
	margin-left : 1.1em;
}
#MainInner {
    margin-left: 0em;
}
#PageMenu {
	height:80%; 
	float: left;
	width: 250px;
	overflow : none;
}
#PageInner {
	margin-left: 255px;
}
#PageMenu .user {
	/*float:left;*/
	position:absolute;
	top:0.4em;
	left: 2.5em;
	vertical-align:bottom;
	/*height:100%;*/
}
#PageMenu .user a{
	margin: 0.3em;
	padding-left: 1.7em;
	font-size : small;
	font-style : italic;
	display:block;
}
#PageMenu .edvimg{
	/*padding-left : 0.7em;*/
	float : left;
	width : 1.2em;
}
#PageMenu .user .edvimg {
	float : none;
}
#PageMenu .ui-accordion .ui-accordion-content {
   	padding: 1em 0.9em;
}

#PageMenu .ui-accordion  a {
	text-decoration: none;
	font-size: 1.25em;
}
br.clear{
	clear : both;
}
.edvAlert {
	color : red;
	background-color : #FBFFBF;
}
.help pre{
	white-space: pre-wrap; /* css-3 */ 
	white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */ 
	white-space: -pre-wrap; /* Opera 4-6 */ 
	white-space: -o-pre-wrap; /* Opera 7 */
	word-wrap: break-word; /* IE */
}
.help ul{
	list-style-image : url('Images/helparrow.png');
}
input[readonly], textarea[readonly], select[readonly]{
	background-color: #FAFAFA;
	color: #444444;
}
.edvEditor form, form.edvEditor {
	display : inline;
}
.edvEditor form fieldset{
	border : none;
}
.Users .edvEditor form fieldset{
	border : medium solid;
}
.edvEditor form label, form.edvEditor label {
 	float : left;
	min-width : 7em;
}
.edvEditor form label.Quantity, form.edvEditor label.Quantity {
	float : left;
	min-width : 5em;
}
.edvEditor .submit {
	padding-left : 1.2em;
	float : right;
	position : relative;
	bottom : -0.4em;
	right : 0.5em;
	cursor : pointer;
}

.edvEditor form fieldset legend, form.edvEditor fieldset legend {
	font-size : 130%;
}
.edvEditor .submit.delete {
	background : url('/edv/Images/delete.png') no-repeat 0px 2px;
	/*width : 1em;*/
}
.dossier .edv-radio > label {
	min-width: 2em;
	margin-right: 8px;
}
.edvEditor.dossier.cmde legend a {
	color: blue;
}
.LgDossier table {
	border-spacing: 0px;
	border-collapse: collapse; 
}
/*.edvRows > .LgDossier ul > li {
	padding-bottom: 4px;
}*/
.LgDossier table th, .LgDossier table td{
	padding : 1px 0px 1px 3px;
}
.LgDossier.Out fieldset {
	padding-left:0;
}
.edvEditor.LgDossier.Out .submit.delete,
.LgDossier.Out .edvEditor .submit.delete{
	display:none;
}
.edvEditor.LgDossier.In .submit.delete{
	display:inline;
}
.edvEditor .submit.insert {
	background : url('Images/Plus16.png') no-repeat 0px 2px;
}
.edvEditor .submit.save{
	background : url('/edv/Images/EDVType/File.png') no-repeat 0px 0px;
}
.edvRows .edvEditor .submit.save{
	background : url('/edv/Images/EDVType/File.png') no-repeat 0px 2px;
}
.lgCmd .submit{
	top : 0px;
}
.edvEditor .info {
	padding-left:0.8em;
	position : relative;
	bottom : -0.6em;
	cursor : pointer;
}
.edvEditor legend a.info {
    bottom: 0em;
}
.edvEditor .info.contactSub {
	background : url('/edv/Images/EDVType/User.png') no-repeat 0px 3px;
}
.edvEditor .info.user, .edvEditor .info.distributeur{
	background : url('/edv/Images/EDVType/Client.png') no-repeat -1px 3px;
}
.edvEditor .info.add {
	background : url('/edv/Images/EDVType/Plus.png') no-repeat -2px 3px;
}
.edvEditor .info.contactRef {
	background : url('/edv/Images/EDVType/User.png') no-repeat 0px 3px;
}
.edvEditor .Catalogue {
	display: block;
	font-size: larger;
}
.edvDataTable {
	float : left;
}
.edvDataTable .title {
	padding-right : 1em;
	font-size : 1.2em;
	font-weight : bold;
	border-bottom : 1px solid #C1DDEE;
}
.edvRows a {
	text-decoration: none;
}
.edvRows ul.sub li{
	margin-left : 1em;
}
.edvRows ul.sub li:first-of-type {
	margin-top : 6px;
}
.edvRows ul.sub{
	padding-top : 4px;
}
.edvRows ul.sub span.category {
	font-weight : bold;
	font-size : larger;
	color : black;
}
.edvRows span.category.expanded {
	font-weight : bold;
	font-size : large;
}
.edvRows ul.sub span.fournisseur{
	font-weight : bold;
	font-size : large;
	color : black;
}
#frmCommandeInsert h4 {
	margin-bottom: 0;
}
.edvRows.selectCatalogue {
	margin-left : 1em;
}
.edvRows.selectCatalogue > li {
	padding-top : 1em;
}
.edvRows.selectCatalogue > li > a {
	color: #00004F;
	font-size: larger;
	font-weight: bold;
}
.edvRows.selectCatalogue > li .sub a {
	color: blue;
}
.edvRows.selectCatalogue > li > span {
	font-size: larger;
}
.edvRows img.article{
	width : 17px;
	height : 17px;
}
.edvRows .imgArticle {
	/*padding-right : 0.3em;*/
	margin-left : -1.3em;
	float : left;
	display:inline;
	margin-top : 2px;
}
.edvRows .imgArticle:hover {
	display:block;
	position: absolute;
	overflow: hidden;
	margin-left : -1.3em;
}
.edvRows img.article:hover{
	width : 12em;
	height : inherit;
}
.edvRows a.article, .edvRows span.article{
	float : left;
	width : 21em;
}
.edvRows table a.article, table .edvRows span.article{
	float : none;
	width : auto;
}
.edvRows .article .Price {
	text-align: right;
}
.edvRows ul .add {
	background : url('/edv/Images/EDVType/Plus.png') no-repeat -2px 3px;
}
.edvRows ul{
	list-style-type : none;
	/*width : 400px;
	height: 400px;*/
	/*overflow: auto;*//*scroll bar*/
	padding-left : 0px;/*FF*/
	margin-left : 0px;/*IE*/
}
.edvRows > ul.edvExpanderRoot.categories {
	margin-left : 1em;
	margin-bottom : 1em;
}
.edvRows > ul.edvExpanderRoot ul.sub li {
    margin-left: 0em;
}
.edvRows > ul.edvExpanderRoot.categories > li
, .edvRows ul.article li, .edvRows ul.article ul.sub {
	clear : left;
}
.edvRows a.articleParam{
	float : left;
	width : 21em;
}
.edvRows a.article > span.edvimgStar, span.NameA > span.edvimgStar {
	float: right;
	margin-right: 1em;
}
.edvDataTable .edvRows li a{
	color : black;
}	
.edvDataTable .edvRows li .notEnabled, .edvDataTable .edvRows li.notEnabled 
, .edvRows .NameA.notEnabled, .edvRows tr.notEnabled td, .edvDataTable .edvRows li .notEnabled a {
	color : gray;
}
.edvDataTable .edvRows li a.user, .edvDataTable .edvRows li a.distributeur{
	padding-left:1.3em;
	background : url('/edv/Images/EDVType/Client.png') no-repeat 0px 1px;
}
.edvDataTable .edvRows li a.user + span {
	padding-left:1.3em;
}
.edvDataTable .edvRows li a.contact, .edvDataTable .edvRows li a.fournisseur{
	padding-left:1.3em;
	background : url('/edv/Images/EDVType/User.png') no-repeat 0px 1px;
}
.edvDataTable .edvRows li a.contact > .edvimgStar
, .edvDataTable .edvRows li a.user > .edvimgStar
, .edvDataTable .edvRows li a.contact > .edvimgStarNot
, .edvDataTable .edvRows li a.user > .edvimgStarNot {
	margin-left:1em;
	font-family: Courier New;
}
.edvDataTable .edvRows li a.contact ~ .edvimgDelete
, .edvDataTable .edvRows li a.user ~ .edvimgDelete {
	margin-left:1em;
	margin-right:1em;
}
.edvExpanderRoot .EDVDataTable {
    border: none;
    font-size: 1em;
}
.edvNavigator{
	font-size : small;
}
.edvNavigator .current{
	padding-right : 1em;
	padding-left : 1em;
}
.dossier.cmde .messageF{
	background-color : #F7FBA4;
	color : #390040;
	padding : 0px;
	font-size : 1.2em;
}
.dossiers.cmdes li.cmde{
	margin-top : 0.65em;
}
.dossiers.pcea li.dossier{
	margin-top : 0.65em;
}
.LgDossier .NameA {
	float : left;
	width : 20em;
}
.LgDossier.In fieldset,
.edvEditor.LgDossier.In fieldset{
	background-color : #CCFF9D;
}
.LgDossier fieldset,
.edvEditor.LgDossier fieldset{
	padding-top : 0px;
	padding-bottom : 0px;
}
.LgDossier.Out.edvExpander {
	font-weight: bold;
	font-size: large;
	margin-top : 1em;
}
.LgDossier.Out fieldset{
	background-color : transparent;
}
.LgDossier ul, ul.LgDossier{
	margin : 0px;
	padding : 0px;
}
ul.LgDossier{
	margin-top : 1em;
}
.edvEditor.lgCmd .submit {
	float : none;
	margin-left: 6px;
	padding-left: 16px;
}
.LgDossier fieldset{
	border : none;
}
.LgDossier .Price {
	float : left;
	width : 8em;
}
.LgDossier label.Quantity {
	color : #818181;
}
.dossiers pre, .pcea pre{
	margin : 0px;
	margin-left : 10px;
	padding-left : 2px;
	padding-bottom : 5px;
	font-size : 1.15em;
	background-color : #E7E7DC;
	white-space: pre-wrap; /* css-3 */ 
	white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */ 
	white-space: -pre-wrap; /* Opera 4-6 */ 
	white-space: -o-pre-wrap; /* Opera 7 */
	word-wrap: break-word; /* IE */
}
.dossiers a.cmde, .dossiers a.edit {
	font-weight : bold;
}
.dossiers.catalogue a.cmde, .dossiers.catalogue a.edit {
	font-weight : normal;
}
.edvEditor.dossier.cmde .status{
	float : right;		
}
.dossiers.catalogue {
	margin-top : 1em;
}
.dossiers.catalogue tr:hover {
	background-color: #DFDFD7;
}
.dossiers.catalogue td {
	vertical-align: middle;
}
.dossiers.catalogue li > span.edvExpander {
	font-weight : normal;
}
.dossiers.catalogue span.name {
	/*font-weight : bold;*/
	font-size : larger;
}
.dossiers.pcea a.list{
	margin-left : 10px;
	padding-left : 2px;		
}
.article.lgDossier.grouped .nbpaniers{
	float : left;
	width : 8em;
	color : #818181;		
}
.article.lgDossier.grouped .quantity{
	float : left;
	width : 12.5em;
	font-weight : bold;
	font-size : 1.1em;
}
.article.lgDossier.grouped .quantity .number{
	float : left;
	width : 3.5em;
	text-align: right;
}
.article.lgDossier.grouped .unit{
	padding-left: 0.8em;
	width : 5.5em;
}

.article.lgDossier.grouped .comment, .dossiers .comment{
	font-size : 0.8em;
	color : #2F0161;
}
.pour{
	float : left;
	color : #818181;		
}
/*.article.lgDossier.grouped .client{
	float : left;
	width : 35em;
}*/
.article.lgDossier.grouped li{
	clear : both;
}
.article.lgDossier.grouped li.notSameArticle{
	border-top : 1px solid #C1DDEE;
}
.edvEditor form label.dataRowNotEnabled{
	color : red;
}
.dossier div.closed{
	background : url('/edv/Images/delete.png') no-repeat 0px 5px;
	margin:0px 0px 0px 10em;
	padding:0px 0px 0px 1em;
	color : red;
	font-size : larger;
}

form.lgCmd > fieldset {
	display: inline-block;
}
.LgDossier form.lgCmd > fieldset:hover {
	background-color: #E6FBCA;
}
.LgDossier.Out form.lgCmd > fieldset:hover {
	background-color: #E9E9E0;
}
.LgDossier form.lgCmd.In > fieldset:hover {
	background-color: #DDFFAF;
}

.SUSPEND .status, .SUSPEND.status{
	color : red;
}
.NEW .status, .NEW.status{
	color : #C65511;
}
.cmde.NEW.WithLines, .cmde.NEW.WithLines a{
	font-weight : bold;
	color : red;
}
.SUSPEND.status, .NEW.status, .OK.status{
	padding-top : 1em;
	text-align : center;
}
#frmCommandeInsert label {
	float : left;
	width : 18em;
}

form.dossier.params table {
	float:left
}
form.dossier.params a.submit.save {
	float:left;
	left:3em;
	top:1.3em;
}

.categories .ctlog {
	/*display: inline-block;*/
	margin-left:4px;
	margin-right:4px;
	padding: 4px;
	/*min-width: 6em;*/
	border-left: 1px solid darkgray;
}
.categories table.article  {
	background-color: white;
	border-spacing: 0px;
	border-collapse: collapse; 
	margin-bottom: 1em;
}
.categories table.article tbody td {
	border-bottom: 1px solid darkgray;
}
.categories table.article tr:hover {
	background-color: #EBEACF;
}

.categories table.article .imgArticle {
	float: none;
	margin-left: 0;
	margin-right: 3px;
}
.categories table.article {
	font-size: smaller;
}
.categories table.article th.ctlog.title {
	/*margin-bottom:2em;
	max-width: 4em;*/
	min-width: 4em;
	font-size: 0.8em;
   font-weight: normal;
	vertical-align: top;
/*	text-align: left;*/
}
.categories table.article tbody td.ctlog {
	text-align: right;
}
.categories table.article tbody td {
	white-space: nowrap;
	vertical-align: middle;
	cursor: pointer;
}
.categories table.article tbody td input {
	padding-right: 3px;
	padding-left: 3px;
}
.categories table.article tbody td.actions {
	text-align: right;
	vertical-align: middle;
}
.categories table.article tbody td.actions a {
	padding-left: 12px;
}
.categories table.article .edvimgSave {
	display: none;
}
.categories table.article.changed .edvimgSave {
	padding: 0.5em 1.5em 0.5em 2em;
	font-weight: normal;
	vertical-align: middle;
	font-size: larger;
	color: darkred;
	background-color: #F4F1B9;
	display: inline;
}

/*.categories .ctlog.title span {
	display: inline-block;
	/ * Safari * /
	-webkit-transform: rotate(-90deg);
	/ * Firefox * /
	-moz-transform: rotate(-90deg);
	/ * IE * /
	-ms-transform: rotate(-90deg);
	/ * Opera * /
	-o-transform: rotate(-90deg);
	/ * Internet Explorer * /
	filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);

transform-origin:0%;
-ms-transform-origin:20% 40%; / * IE 9 * /
-webkit-transform-origin:20% 40%; / * Safari and Chrome * /
}*/

.edvimg.refresh {background: url(/edv/Images/refresh.png) no-repeat;}
.edvimg.trash {	background: url(/edv/Images/trash.png) no-repeat;}
.edvimgStar {background: url(/edv/CoopEShop/Images/Star.png) no-repeat left center;}
.edvimgStarNot {background: url(/edv/CoopEShop/Images/StarGray.png) no-repeat left center;}

@media print {
	#MainHeader, #PageMenu, #MainFooter, #edvMaster {
		display:none;
	}
	#PageInner {
		margin-left : 0px;
		clear:both;
	}
	body {
		margin-left : 0em;
		background : none;
	}
}

<?edv.Type.Code.Minimize("css", _echocode)?>]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>CSS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                        <!--.EDV.CoopEShop.Visual.HTML.cssFile._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Visual.HTML.functions-->
                    <VAR ShortName="functions" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?
if(false){?><p class="edvError">Maintenance en cours - le service peut être interrompu à tout instant</p><?}
if(!edvSender.IsSys) edvClient.Activate();

if (session==undefined || session == null)
	session = edvClient.jsObject = {};
session.root = edvTools.ParentName(..edvAppli:Name);	
?>
<?/*?>
<script>
</script>
<?*/?>]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.Visual.HTML.functions._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Visual.HTML.HEAD-->
                    <VAR ShortName="HEAD" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<?=.{Applications}.edvStats.Visual.HTML.Head(edvjs.Extend({
		"miniJS" : true
		, "designMode" : false
	}, arguments), edvSender, edvClient)?>
<?var version = ..edvAppli.Version;
if (..edvAppli.User.Login && session.User && session.User.Enabled){	 
	?><script src="/edv/js/jquery.form.js" type="text/javascript"></script>
	<script src="/edv/.js?edvcode=.{WEB}.edv.UI.edvDataTable&edvwbsrv=cache,<?=version?>" type="text/javascript"></script>
	<script>
	edv.include($.fn, "CEShopAdmin", "/edv/.js?edvcode=<?=edvSender.Domain?>JQuery&edvwbsrv=cache,<?=version?>");
	edv.include($.fn, "comptes", "/edv/pcea/comptes.js?edvwbsrv=cache,<?=version?>")
		.css = "/edv/pcea/PCEA.css";
</script>
<link rel="stylesheet" type="text/css" href="/edv/pcea/PCEA.css"/>
<script src="/edv/pcea/comptes.js" type="text/javascript"></script>
<?}?>]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION><SCRIPTER.SCRIPTTYPE>HTML</SCRIPTER.SCRIPTTYPE>]]></Meta>
                        <!--.EDV.CoopEShop.Visual.HTML.HEAD._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Visual.HTML.jquery-->
                    <VAR ShortName="jquery" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[//Plugin $.CEShopAdmin
(function($){
	var edvRoot = "<?=..edvAppli:Domain?>";
	var methods = {
		"init" : function(options){
			if(!this.is("table"))
				return $(this).parents("table:first");
			return this.each(function(){
				var $this = $(this);
				
			});
		}
		
		//.EDV.CoopEShop.DB.Article2.Html.Rows
		, "initArticlesList" : function(options){
			return this.each(function(){
				var $table = $(this);
				
				//Actions
				var $actions = $table.find("> tbody  > tr > td.actions");
				if($actions.length){
					$actions
						.append($("<a>&nbsp;</a>")
							.addClass("edvicon edvimgDelete")
							.click(function(){
								var $td = $(this).parents("td:first");
								var $tr = $td.parent();
								if($tr.is(".notEnabled")) {
									var idArticle = $tr.attr("idarticle");
									edvDataTable(this).Rows.DeleteRow('edvargs={Id:' + idArticle + '}');
								}
								else {
									$tr.addClass("notEnabled");
									$tr.parents("table:first").addClass("changed");
									var $input = $td.children("input[name=\"Enabled\"]:first");
									if($input.length == 0)
										$(this.parentNode).append(
											$input = $('<input type="hidden" name="Enabled" class="changed"/>')
										);
									$input.val(0);
								}
							})
						)
						.append($("<a>&nbsp;</a>")
							.addClass("edvicon edvimgAdd")
							.click(function(){
								var $td = $(this).parents("td:first");
								var $tr = $td.parent();
								if($tr.is(".notEnabled")) {
									$tr.removeClass("notEnabled");
									
									var $input = $td.children("input[name=\"Enabled\"]:first");
									if($input.length == 0)
										$(this.parentNode).append(
											$input = $('<input type="hidden" name="Enabled" class="changed"/>')
										);
									$input.val(1);
									
									$tr.parents("table:first").addClass("changed");
								}
								else {
									var idArticle = $(this).parents("tr:first").attr("idarticle");
									edvDataTable(this).Navigator.NewRow('edvargs={IdFournisseur:' + edvDataTable(this).Rows.edvArgs.IdFournisseur + ', Clone:' + idArticle + '}');
									return false;
								}
							})

						)
						.append($("<a>&nbsp;</a>")
							.addClass("edvicon edvimgEdit")
							.click(function(){
								var $article = $(this).parents("tr:first").find(".article:first");
								$article.click();
							})
						)
					;
					
					$table.find("> thead  > tr > th:first")
						.append($("<a>Enregistrer</a>")
							.addClass("edvicon edvimgSave")
							.click(methods.submitArticlesList)
						)
					;
					
					$table.find("> tbody  > tr > td > a.article").parent()
						.click(function(){
							var idArticle = $(this).parents("tr:first").attr("idarticle");
							edvDataTable(this).Rows.Edit('edvargs={Id:' + idArticle + '}', {title:this.children[0].innerHTML});
							return false;
						})
					;
					$table.find("> tbody  > tr > td.Unit")
						.click(function(){
							var $td = $(this);
							var $input = $td.children("input:first");
							if($input.length) return;
							var unit = $td[0].innerHTML.replace("&nbsp;/&nbsp;", "");
							$td
							.html("&nbsp;/&nbsp;")
							.append($input = $('<input size="8"/>')
								.val(unit)
								.attr("original", unit)
								.change(function(){
									$(this).addClass("changed");
									$table.addClass("changed");
								})
							);
							$input.focus().select();
						})
					;
					$table.find("> tbody  > tr > td.SortIndex")
						.html($("<a class=\"edvicon edvimgStarNot\">&nbsp;</a>")
							.click(function(){
								var toStar = !/\bedvimgStar\b/.test(this.className);
								
								var $input = $(this).siblings("input:first");
								if($input.length == 0)
									$(this.parentNode).append(
										$input = $('<input type="hidden" class="changed"/>')
									);
								$input.val(toStar ? 0 : 999);
								
								$(this)
									.toggleClass("edvimgStar", toStar)
									.toggleClass("edvimgStarNot", !toStar)
								;
								$table.addClass("changed");
							})
						)
						.filter('[v="0"]')
							.children("a")
								.toggleClass("edvimgStar")
								.toggleClass("edvimgStarNot")
								.end()
							.end()
					;
					
					$table.find("> tbody  > tr > td.Price")
						.click(function(){
							var $td = $(this);
							var $input = $td.children("input:first");
							if($input.length) return;
							var price = $td[0].innerHTML.replace(/\s|\u20AC|&nbsp;|&euro;/g, "");
							$td
							.html($input = $('<input size="5"/>')
								.val(price)
								.attr("original", price)
								.css("text-align","right")
								.change(function(){
									$(this).addClass("changed");
									$table.addClass("changed");
								})
							)
							.append("&nbsp;&euro;");
							$input.focus().select();
						})
					;
					$table.find("> tbody  > tr > td.ctlog")
						.click(function(){
							var $td = $(this);
							var $input = $td.children("input:first");
							if($input.length) return;
							var price = $td[0].innerHTML.replace(/\s|\u20AC|&nbsp;|&euro;/g, "");
							var isChanged;
							if(!price){
								var $tdPrice = $td.parents("tr:first").children("td.Price:first");
								if((!(price = $tdPrice.children('input').val())))
									price = $tdPrice[0].innerHTML.replace(/\s|\u20AC|&nbsp;|&euro;/g, "");
								if(isChanged = price)
									$table.addClass("changed");
							}
							$td
							.html($("<a/>")
								.addClass("edvicon edvimgDelete")
								.toggleClass("hidden", !price)
								.click(function(){
									$(this)
										.nextAll("input:first")
											.val("").addClass("changed")
											.end()
										.hide();
									$table.addClass("changed");
								})
							)
							.append($input = $('<input size="5"/>')
								.val(price)
								.attr("original", price)
								.css("text-align","right")
								.change(function(){
									$(this)
										.addClass("changed")
										.prevAll(".edvimgDelete").toggleClass("hidden", !this.value)
									;
									$table.addClass("changed");
								})
							)
							.append("&nbsp;&euro;");
							if(isChanged)
								$input.addClass("changed");
							$input.focus().select();
						})
					;
				}
			});
		}
		//.EDV.CoopEShop.DB.Article2.Html.Rows
		, "submitArticlesList" : function(options){
			var $table = this.jquery ? this : $(this);
			if(!$table.is("table")) $table = $table.parents("table:first");
			
			var ctlogs = [0];//cellIndex starts with 1
			$table.find("> thead > tr:first > th").each(function(){
				if(/\bctlog\b/.test(this.className))
					ctlogs.push(this.getAttribute("iddossier"));
				else
					ctlogs.push(0);
				if(this.getAttribute("colspan"))
					for(var nCol = 2; nCol < parseInt(this.getAttribute("colspan")); nCol++)
						ctlogs.push(0);
			});
			var jso = {};
			
			$table.find("input.changed").each(function(){
				var $input = $(this);
				var $td = $input.parents("td:first");
				var idArticle = $td.parent().attr("idarticle");
				var field = /\b(Unit|Price|ctlog|SortIndex|actions)\b/.exec($td[0].className);
				if(field != null && field.length > 1){
					if(field[1] == "ctlog")
						field = "ctlog_" + ctlogs[this.parentNode.cellIndex];
					else if(field[1] == "actions")
						field = $input.attr("name");
					else
						field = field[1];
					if(!jso[idArticle]) jso[idArticle] = {};
					jso[idArticle][field] = this.value;
				}
			});
			
			var r = edvGetCode(edvRoot + "DB.Article2.Html.Rows.Submit", "edvArgs.articles=" + edvTools.json(jso));
			if (r)
				alert(r);
			else
				$table.edvExpander("parent", "refresh");
		}
		
	};
	//Plugin JQuery
	$.fn.CEShopAdmin = function(method){
		if ( methods[method] ) {
	    		return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		} else if ( typeof method === 'object' || ! method ) {
	      	return methods.init.apply(this, arguments);
		} else {
	      	$.error('$.CEShopAdmin : Unknonw method ' +  method);
		}
	};
})(jQuery);



]]></Value>
                        <!--.EDV.CoopEShop.Visual.HTML.jquery._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Visual.HTML.js-->
                    <VAR ShortName="js" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<script>
edvTools.Dialog = function(varName, params, options, className){
	var dom;
	if(typeof(varName) === "object")
	{	//ReUse
		dom = varName;
		varName = $(dom).attr("name");
	}
	else {//Create a DIV
		dom = document.createElement("DIV");
		$(dom).attr("name",varName);
		dom.className = "edvDialog";
		document.body.appendChild(dom);
		if (className && className != "")
			$(dom).addClass(className);
	}
	edv.Wait.Show();
	var defaultOptions = { 
				modal: true,
				buttons: [{text: "fermer", click: function() { $(this).dialog("close"); }}],
				closeOnEscape: true,
				resizable: false,
				minWidth : 600,
				title : varName
			};
	if(options)
		jQuery.extend(defaultOptions, options);
	//Extends function
	var closeCallBack = defaultOptions.close;
	var thisDialog;
	defaultOptions.close = function(){
		if(closeCallBack) closeCallBack();
		dom.parentNode.parentNode.removeChild(dom.parentNode);
	};
	
	edvGetHTML(dom, params //request EDV
			, function(answer){//Callback
				thisDialog = $(dom).html(answer)//Fill Html
								.dialog(defaultOptions);
				edv.Wait.Hide();
			}
		);
	return dom;
}
</script>]]></Value>
                        <Meta><![CDATA[<SCRIPTER.SCRIPTTYPE>JS</SCRIPTER.SCRIPTTYPE>]]></Meta>
                        <!--.EDV.CoopEShop.Visual.HTML.js._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Visual.HTML.Main-->
                    <VAR ShortName="Main" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.Visual.HTML.Main.HTML-->
                        <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Code">
                            <Script><![CDATA[.{WEB}.Main]]></Script>
                            <!--.EDV.CoopEShop.Visual.HTML.Main.HTML._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                    </VAR>
                    <!--.EDV.CoopEShop.Visual.HTML._Where-->
                    <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                        <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Visual.Inner-->
                <VAR ShortName="Inner" ClassName="VarLink" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Link">
                    <!--.EDV.CoopEShop.Visual.Inner.@-->
                    <VAR ShortName="@" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="VariableName">
                        <Value><![CDATA[.EDV.CoopEShop.DB.Fournisseur.Html.Edit.Dialog]]></Value>
                        <!--.EDV.CoopEShop.Visual.Inner.@.Exists-->
                        <VAR ShortName="Exists" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Boolean">
                            <Script><![CDATA[if (edvClient!=null) edvClient.VariableExists(..);]]></Script>
                        </VAR>
                        <!--.EDV.CoopEShop.Visual.Inner.@.OnScripting-->
                        <VAR ShortName="OnScripting" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="Null">
                            <Script><![CDATA[try{
	when(:Scripting || ..edvAppli.User.Login)
	{
		.. = ..Accueil:Name;
	}
} catch(msg){}
null;
]]></Script>
                        </VAR>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Visual.Menu-->
                <VAR ShortName="Menu" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                    <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>HTML</DESIGNER.LASTPRESENTATION>]]></Meta>
                    <!--.EDV.CoopEShop.Visual.Menu.Arbre-->
                    <VAR ShortName="Arbre" ClassName="VarVisual" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Visual">
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.Visual.Menu.Arbre.HTML-->
                        <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                            <Value><![CDATA[<?if(!session.User) edvReturn("");
?><script>
<?
var nodesData = [];
	
	nodesData.push(	{Niveau : 1, Show : "", Titre : "Mes commandes"});
	nodesData.push(		{Niveau : 2, Show : "DB.Commande.Html.New", Titre : "Nouvelle", Image : "EDVTypeAdd"});
	nodesData.push(		{Niveau : 2, Show : "DB.Commande.Html.Edit", Titre : "Dernière", Image : "EDVTypeNull"});
	nodesData.push(		{Niveau : 2, Show : "DB.Commande.Html.List", Titre : "Toutes", Image : "EDVTypeArray"});
	
	var user = session.User;
	
	if(session.User.IdFournisseur){
		nodesData.push(	{Niveau : 1, Show : "", Titre : "Je suis fournisseur"});
		nodesData.push(		{Niveau : 2, Show : "DB.Fournisseur.Html.Edit.Dialog", Titre : "Mon profil", Image : "EDVTypeUser"});		
		nodesData.push(		{Niveau : 2, Show : "DB.Fournisseur.Html.Edit.Dialog", Titre : "Message d'en-tête", Image : "EDVTypeCode"});		
		nodesData.push(		{Niveau : 2, Show : "DB.EMailAuto.Html.List", Titre : "Email automatique", Image : "edvimgSendMsg"});		
		nodesData.push(		{Niveau : 2, Show : "DB.Article2.Html.List", Titre : "Articles", Image : "EDVTypeArray"});
		nodesData.push(		{Niveau : 2, Show : "DB.Catalogue.Html.List", Titre : "Catalogues", Image : "EDVTypeArray"});
		nodesData.push(		{Niveau : 2, Show : "DB.CmdeClient.Html.List", Titre : "Commandes clients", Image : "EDVTypeDataTable"});
		nodesData.push(		{Niveau : 2, Show : "DB.CmdeClient.Html.GroupedArticles", Titre : "Regroupement", Image : "EDVTypeDataTable"});
		nodesData.push(		{Niveau : 2, Show : "DB.Contact.Html.List&edvArgs.ofFournisseur=1", Titre : "Mes contacts", Image : "EDVTypeClient"});
		nodesData.push(		{Niveau : 2, Show : "DB.Parameter.Html.List&..DB.Parameter.Html.Rows.Domain=ARTCAT", Titre : "Catégories", Image : "EDVTypeSelection"});
		nodesData.push(		{Niveau : 2, Show : "Docs.Fourn", Titre : "Aide", Image : "edvimgHelp"});
	}
	else {
		nodesData.push(	{Niveau : 1, Show : "", Titre : "Fournisseur"});
		nodesData.push(		{Niveau : 2, Show : "DB.Fournisseur.Html.New", Titre : "Devenir fournisseur", Image : "edvimgHelp"});
	}
	
	nodesData.push(	{Niveau : 1, Show : "", Titre : "Mon profil"});
	nodesData.push(		{Niveau : 2, OnClick : "edvDialog().Show('.EDV.CoopEShop.DB.User.Html', null, {title:'Utilisateur courant'}, 'edvEditor');return false;", Titre : "Mon profil", Image : "EDVTypeUser"});
	if(session.User.IdFournisseur)
		nodesData.push(		{Niveau : 2, Show : "DB.Contact.Html.List&edvArgs.ofFournisseur=1", Titre : "Mes contacts", Image : "EDVTypeClient"});
	else
		nodesData.push(		{Niveau : 2, Show : "DB.Contact.Html.List", Titre : "Mes contacts", Image : "imgEDVTypeClient"});
	
	if (session.User.Rights[".Admin"] && session.User.Rights[".Admin"] > 0) {
		nodesData.push(	{Niveau : 1, Show : "", Titre : "Administration"});
		nodesData.push(		{Niveau : 2, Show : "edvAppli.Visual.Html", Titre : "Application"});
		nodesData.push(		{Niveau : 2, Show : "DB.Parameter.Html.List&..DB.Parameter.Html.Rows.Domain=", Titre : "Paramètres"});
		nodesData.push(		{Niveau : 2, Show : "edvAppli.DBBackup", Titre : "Sauvegarde"});
		nodesData.push(		{Niveau : 2, Show : "DB.Fournisseur.Html.List", Titre : "Fournisseurs"});
		nodesData.push(		{Niveau : 2, Show : "DB.User.Html.List", Titre : "Utilisateurs"});
		nodesData.push(		{Niveau : 2, Show : "DB.Contact.Html.List", Titre : "Contacts"});
		nodesData.push(		{Niveau : 2, Show : "DB.Article2.Html.List", Titre : "Articles"});
		nodesData.push(		{Niveau : 2, Show : "DB.Parameter.Html.List&..DB.Parameter.Html.Rows.Domain=ARTCAT", Titre : "Catégories"});
	}

	nodesData.push(	{Niveau : 1, Show : "http:edv/pcea/?innerOnly=1&iduser=" + session.User.IdUser, Titre : "Mes Petits Comptes"});
	nodesData.push(		{Niveau : 2, Show : "Docs.PCEA", Titre : "Présentation", Image : "EDVTypeEDV"});
	nodesData.push(		{Niveau : 2, Show : "http:edv/pcea/?innerOnly=1&iduser=" + session.User.IdUser, Titre : "... Entre Amis", Image : "EDVTypeArray"});
	//nodesData.push(		{Niveau : 2, Show : "PCEA.Dossier.Html", Titre : "version précédente", Image : "EDVTypeObject"});


	nodesData.push(	{Niveau : 1, Show : "", Titre : "CoopEShop"});
	nodesData.push(		{Niveau : 2, OnClick : "edvDialog().Show('.EDV.CoopEShop.DB.User.Html', null, {title:'Utilisateur courant'}, 'edvEditor');return false;", Titre : "Mon compte", Image : "EDVTypeUser"});
	nodesData.push(		{Niveau : 2, Show : "Docs.What", Titre : "Présentation", Image : "EDVTypeEDV"});
	nodesData.push(		{Niveau : 2, Show : "Docs.FAQ", Titre : "Questions fréquentes", Image : "EDVTypeVisualTrue"});
	nodesData.push(		{Niveau : 2, Show : "Docs.Who", Titre : "Qui sommes nous ?", Image : "EDVTypeVisualTrue"});
	if(session.User.IdFournisseur){
		nodesData.push(		{Niveau : 2, Show : "Docs.HowFourn", Titre : "Règles de gestion", Image : "EDVTypeVisualTrue"});
	}
	
	echo("var nodesData = " + edvjs.json(nodesData, true));
?>
</script>

<div id="accordion" style="width:95%;">
	<?
	var lCurLevel = -1;
	var h3Index : int = -1;
	for(var lnRow : int = 0; lnRow < nodesData.length; lnRow++)
	{
		var lRow = nodesData[lnRow];
		switch(lRow["Niveau"]) {
			case 1:
				if (lCurLevel == 2) echo("\n</div>");
				h3Index++;
				?><h3 id="mnu<?=h3Index?>"><a href="#"<?if(lRow.Show != ""){
					?> onclick="return !LoadPageInner(<?=lnRow?>,<?=h3Index?>)"<?
					}?>><?=lRow["Titre"]?></a></h3>
				<div><?
				break;
		
			case 2:
				if (lCurLevel == 2) echo("\n<br/>");
				if(lRow.Image){?><span class="<?=lRow.Image?> edvimg">&nbsp;</span><?}?>
				<a href="#"<?=lRow.Class ? " class=\"" + lRow.Class + "\"" : ""?>
					<?if(lRow.OnClick){
					?>onclick="<?=lRow.OnClick?>"
					<?} else {
					?>onclick="return !LoadPageInner(<?=lnRow?>,<?=h3Index?>)"
					<?}?>><?=lRow.Titre?></a>
				<?				
				break;
			
			default:
				continue;
		}
		lCurLevel = lRow["Niveau"];
	} 
	echo("\n</div>");
	?>
</div>

<script>
jQuery(document).ready(function(){
	$('.accordion .head').click(function() {
		$(this).next().toggle('slow');
		return false;
	}).next().hide();
	$("#accordion").accordion({
	    active: "#mnu<?=MenuSelected?>"
	});
});
</script>

<!--Script de rafraichissement de PageInner-->
<script type="text/javascript">
	function LoadPageInner(psShow, h3Index, options)	{
		if(h3Index == "dialog"){
			options = h3Index;
			h3Index = "";
		}
		var root = "<?=..edvAppli:Domain?>";
		if(typeof(psShow) === "number"){
			h3Index = "&<?=MenuSelected:Name?>=" + h3Index;
			psShow = nodesData[psShow].Show;
			if(psShow.substr(0, 5) == "http:"){
				var url = document.location.protocol + "//"
					+ document.location.hostname
					+ "/" + psShow.substr(5);

				psShow = "";
				$.ajax({
					url : url,
					//data : params,
					cache : false,
					success : function(answer){
						if(options && (options == "dialog" || options.dialog === true))
							edvDialog.Show(answer);
						else
							$("#PageInner").html(answer);
					},
					async : false,
					type : "GET"
				});
				return;

			}
			psShow = root + psShow;
		}
		else {
			h3Index = "";
		}
		if(options && (options == "dialog" || options.dialog === true))
			edvDialog.Show(psShow);
		else
			edvGetHTML("PageInner", "<?=..Inner.@:Name?>=" + psShow + h3Index, {showWait : true});
		return true;
	}
</script>

]]></Value>
                            <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                            <!--.EDV.CoopEShop.Visual.Menu.Arbre.HTML._Where-->
                            <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                                <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                            </VAR>
                        </VAR>
                        <!--.EDV.CoopEShop.Visual.Menu.Arbre.MenuSelected-->
                        <VAR ShortName="MenuSelected" ClassName="" AutoReset="0" Securized="0" ReadOnly="0" ValueType="Integer" SaveLocation="V" />
                    </VAR>
                    <!--.EDV.CoopEShop.Visual.Menu.HTML-->
                    <VAR ShortName="HTML" ClassName="" AutoReset="0" Securized="1" ReadOnly="0" ValueType="Code">
                        <Value><![CDATA[<? if (..edvAppli.User.Login && session.User && session.User.Enabled) {
	?><?=Arbre?>
	<br>
	<div class="user">	
		<a class="edvimg refresh" href="<?=..edvAppli.Url?>">Rafraichir</a>
		
		<a class="imgEDVTypeFalse" href="?<?=..edvAppli.User.Login:Name?>=false">Déconnexion</a>

		<a class="imgEDVTypeClient" href="" onclick="edvDialog().Show('<?=..DB.User.Html:Name?>', null, {title:'Utilisateur courant'}, 'edvEditor');return false;"
			>mon compte <?=session.User.Name?></a>
	</div>
<?}?>
]]></Value>
                        <Meta><![CDATA[<DESIGNER.LASTPRESENTATION>Window</DESIGNER.LASTPRESENTATION>]]></Meta>
                        <!--.EDV.CoopEShop.Visual.Menu.HTML._Where-->
                        <VAR ShortName="_Where" ClassName="VarFunction" AutoReset="0" Securized="1" ReadOnly="1" ValueType="Function">
                            <Script><![CDATA[when(..:Changing) me = null;]]></Script>
                        </VAR>
                    </VAR>
                </VAR>
                <!--.EDV.CoopEShop.Visual.Title-->
                <VAR ShortName="Title" ClassName="" AutoReset="0" Securized="0" ReadOnly="1" ValueType="String">
                    <Script><![CDATA[..edvAppli.Title]]></Script>
                </VAR>
            </VAR>
        </VAR>
    </DOM>
</EDV>